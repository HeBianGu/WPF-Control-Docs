{
  "api/H.Iocable.Ioc-1.html": {
    "href": "api/H.Iocable.Ioc-1.html",
    "title": "Class Ioc<Interface> | WPF-Control",
    "summary": "Class Ioc<Interface> Namespace H.Iocable Assembly H.Iocable.dll public abstract class Ioc<Interface> Type Parameters Interface Inheritance object Ioc<Interface> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Instance public static Interface Instance { get; } Property Value Interface"
  },
  "api/H.Iocable.Ioc-2.html": {
    "href": "api/H.Iocable.Ioc-2.html",
    "title": "Class Ioc<T, Interface> | WPF-Control",
    "summary": "Class Ioc<T, Interface> Namespace H.Iocable Assembly H.Iocable.dll public abstract class Ioc<T, Interface> where T : class, Interface, new() Type Parameters T Interface Inheritance object Ioc<T, Interface> Derived IocBindable<T, Interface> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Instance public static T Instance { get; } Property Value T"
  },
  "api/H.Iocable.Ioc.html": {
    "href": "api/H.Iocable.Ioc.html",
    "title": "Class Ioc | WPF-Control",
    "summary": "Class Ioc Namespace H.Iocable Assembly H.Iocable.dll public static class Ioc Inheritance object Ioc Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Services public static IServiceProvider Services { get; } Property Value IServiceProvider Methods Build(IServiceCollection) public static void Build(IServiceCollection serviceCollection) Parameters serviceCollection IServiceCollection ConfigureServices(Action<IServiceCollection>) public static void ConfigureServices(Action<IServiceCollection> action) Parameters action Action<IServiceCollection> Exist<T>() public static bool Exist<T>() Returns bool Type Parameters T FindAll(Func<ServiceDescriptor, bool>) public static IEnumerable<ServiceDescriptor> FindAll(Func<ServiceDescriptor, bool> predicate = null) Parameters predicate Func<ServiceDescriptor, bool> Returns IEnumerable<ServiceDescriptor> GetAssignableFromServices<T>(Func<T, bool>) public static IEnumerable<T> GetAssignableFromServices<T>(Func<T, bool> predicate = null) Parameters predicate Func<T, bool> Returns IEnumerable<T> Type Parameters T GetService<T>(bool) public static T GetService<T>(bool throwIfNone = true) Parameters throwIfNone bool Returns T Type Parameters T GetService<T>(Type, bool) public static T GetService<T>(Type type, bool throwIfNone = true) Parameters type Type throwIfNone bool Returns T Type Parameters T"
  },
  "api/H.Iocable.IocAsyncMarkupCommandBase.html": {
    "href": "api/H.Iocable.IocAsyncMarkupCommandBase.html",
    "title": "Class IocAsyncMarkupCommandBase | WPF-Control",
    "summary": "Class IocAsyncMarkupCommandBase Namespace H.Iocable Assembly H.Iocable.dll public abstract class IocAsyncMarkupCommandBase : IocMarkupCommandBase, ICommand, INotifyPropertyChanged Inheritance object MarkupExtension IocMarkupCommandBase IocAsyncMarkupCommandBase Implements ICommand INotifyPropertyChanged Inherited Members IocMarkupCommandBase.CanExecuteChanged IocMarkupCommandBase.ProvideValue(IServiceProvider) IocMarkupCommandBase.PropertyChanged IocMarkupCommandBase.RaisePropertyChanged(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsExecuting public bool IsExecuting { get; set; } Property Value bool Message public string Message { get; set; } Property Value string Methods CanExecute(object) Defines the method that determines whether the command can execute in its current state. public override bool CanExecute(object parameter) Parameters parameter object Data used by the command. If the command does not require data to be passed, this object can be set to null. Returns bool true if this command can be executed; otherwise, false. Execute(object) Defines the method to be called when the command is invoked. public override void Execute(object parameter) Parameters parameter object Data used by the command. If the command does not require data to be passed, this object can be set to null. ExecuteAsync(object) public virtual Task ExecuteAsync(object parameter) Parameters parameter object Returns Task"
  },
  "api/H.Iocable.IocBindable-2.html": {
    "href": "api/H.Iocable.IocBindable-2.html",
    "title": "Class IocBindable<T, Interface> | WPF-Control",
    "summary": "Class IocBindable<T, Interface> Namespace H.Iocable Assembly H.Iocable.dll public abstract class IocBindable<T, Interface> : Ioc<T, Interface>, INotifyPropertyChanged where T : class, Interface, new() Type Parameters T Interface Inheritance object Ioc<T, Interface> IocBindable<T, Interface> Implements INotifyPropertyChanged Inherited Members Ioc<T, Interface>.Instance object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RaisePropertyChanged(string) public virtual void RaisePropertyChanged(string propertyName = \"\") Parameters propertyName string Events PropertyChanged Occurs when a property value changes. public event PropertyChangedEventHandler PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/H.Iocable.IocExtension.html": {
    "href": "api/H.Iocable.IocExtension.html",
    "title": "Class IocExtension | WPF-Control",
    "summary": "Class IocExtension Namespace H.Iocable Assembly H.Iocable.dll public class IocExtension : MarkupExtension Inheritance object MarkupExtension IocExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Type public Type Type { get; set; } Property Value Type Methods ProvideValue(IServiceProvider) When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension. public override object ProvideValue(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider A service provider helper that can provide services for the markup extension. Returns object The object value to set on the property where the extension is applied."
  },
  "api/H.Iocable.IocMarkupCommandBase.html": {
    "href": "api/H.Iocable.IocMarkupCommandBase.html",
    "title": "Class IocMarkupCommandBase | WPF-Control",
    "summary": "Class IocMarkupCommandBase Namespace H.Iocable Assembly H.Iocable.dll public abstract class IocMarkupCommandBase : MarkupExtension, ICommand, INotifyPropertyChanged Inheritance object MarkupExtension IocMarkupCommandBase Implements ICommand INotifyPropertyChanged Derived IocAsyncMarkupCommandBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanExecute(object) Defines the method that determines whether the command can execute in its current state. public virtual bool CanExecute(object parameter) Parameters parameter object Data used by the command. If the command does not require data to be passed, this object can be set to null. Returns bool true if this command can be executed; otherwise, false. Execute(object) Defines the method to be called when the command is invoked. public abstract void Execute(object parameter) Parameters parameter object Data used by the command. If the command does not require data to be passed, this object can be set to null. ProvideValue(IServiceProvider) When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension. public override object ProvideValue(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider A service provider helper that can provide services for the markup extension. Returns object The object value to set on the property where the extension is applied. RaisePropertyChanged(string) public virtual void RaisePropertyChanged(string propertyName = \"\") Parameters propertyName string Events CanExecuteChanged Occurs when changes occur that affect whether or not the command should execute. public event EventHandler CanExecuteChanged Event Type EventHandler PropertyChanged Occurs when a property value changes. public event PropertyChangedEventHandler PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/H.Iocable.IocThrowIfNone-1.html": {
    "href": "api/H.Iocable.IocThrowIfNone-1.html",
    "title": "Class IocThrowIfNone<Interface> | WPF-Control",
    "summary": "Class IocThrowIfNone<Interface> Namespace H.Iocable Assembly H.Iocable.dll public abstract class IocThrowIfNone<Interface> Type Parameters Interface Inheritance object IocThrowIfNone<Interface> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Instance public static Interface Instance { get; } Property Value Interface"
  },
  "api/H.Iocable.html": {
    "href": "api/H.Iocable.html",
    "title": "Namespace H.Iocable | WPF-Control",
    "summary": "Namespace H.Iocable Classes Ioc IocAsyncMarkupCommandBase IocBindable<T, Interface> IocExtension IocMarkupCommandBase IocThrowIfNone<Interface> Ioc<Interface> Ioc<T, Interface>"
  },
  "api/H.Mvvm.AsyncMarkupCommandBase.html": {
    "href": "api/H.Mvvm.AsyncMarkupCommandBase.html",
    "title": "Class AsyncMarkupCommandBase | WPF-Control",
    "summary": "Class AsyncMarkupCommandBase Namespace H.Mvvm Assembly H.Mvvm.dll public abstract class AsyncMarkupCommandBase : MarkupCommandBase, ICommand, INotifyPropertyChanged Inheritance object MarkupExtension MarkupCommandBase AsyncMarkupCommandBase Implements ICommand INotifyPropertyChanged Inherited Members MarkupCommandBase.CanExecuteChanged MarkupCommandBase.ProvideValue(IServiceProvider) MarkupCommandBase.PropertyChanged MarkupCommandBase.RaisePropertyChanged(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsExecuting public bool IsExecuting { get; set; } Property Value bool Methods CanExecute(object) Defines the method that determines whether the command can execute in its current state. public override bool CanExecute(object parameter) Parameters parameter object Data used by the command. If the command does not require data to be passed, this object can be set to null. Returns bool true if this command can be executed; otherwise, false. Execute(object) Defines the method to be called when the command is invoked. public override void Execute(object parameter) Parameters parameter object Data used by the command. If the command does not require data to be passed, this object can be set to null. ExecuteAsync(object) public virtual Task ExecuteAsync(object parameter) Parameters parameter object Returns Task"
  },
  "api/H.Mvvm.Bindable.html": {
    "href": "api/H.Mvvm.Bindable.html",
    "title": "Class Bindable | WPF-Control",
    "summary": "Class Bindable Namespace H.Mvvm Assembly H.Mvvm.dll public abstract class Bindable : BindableBase, INotifyPropertyChanged Inheritance object BindableBase Bindable Implements INotifyPropertyChanged Inherited Members BindableBase.Init() BindableBase.PropertyChanged BindableBase.RaisePropertyChanged(string) BindableBase.DispatcherRaisePropertyChanged(string) BindableBase.OnDispatcherPropertyChanged() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Bindable() public Bindable() Properties CallMethodCommand [Browsable(false)] [JsonIgnore] public RelayCommand CallMethodCommand { get; set; } Property Value RelayCommand LoadedCommand [Browsable(false)] [JsonIgnore] public RelayCommand LoadedCommand { get; } Property Value RelayCommand RelayCommand [Browsable(false)] [JsonIgnore] public RelayCommand RelayCommand { get; set; } Property Value RelayCommand Methods CallMethod(object) protected virtual void CallMethod(object obj) Parameters obj object Loaded(object) protected virtual void Loaded(object obj) Parameters obj object RelayMethod(object) protected virtual void RelayMethod(object obj) Parameters obj object"
  },
  "api/H.Mvvm.BindableBase.html": {
    "href": "api/H.Mvvm.BindableBase.html",
    "title": "Class BindableBase | WPF-Control",
    "summary": "Class BindableBase Namespace H.Mvvm Assembly H.Mvvm.dll public abstract class BindableBase : INotifyPropertyChanged Inheritance object BindableBase Implements INotifyPropertyChanged Derived Bindable DisplayBindableBase ModelBindable<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BindableBase() public BindableBase() Methods DispatcherRaisePropertyChanged(string) public virtual void DispatcherRaisePropertyChanged(string propertyName = \"\") Parameters propertyName string Init() protected virtual void Init() OnDispatcherPropertyChanged() protected virtual void OnDispatcherPropertyChanged() RaisePropertyChanged(string) public virtual void RaisePropertyChanged(string propertyName = \"\") Parameters propertyName string Events PropertyChanged Occurs when a property value changes. public event PropertyChangedEventHandler PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/H.Mvvm.BindingProxy.html": {
    "href": "api/H.Mvvm.BindingProxy.html",
    "title": "Class BindingProxy | WPF-Control",
    "summary": "Class BindingProxy Namespace H.Mvvm Assembly H.Mvvm.dll public class BindingProxy : Freezable Inheritance object DispatcherObject DependencyObject Freezable BindingProxy Inherited Members Freezable.Clone() Freezable.CloneCore(Freezable) Freezable.CloneCurrentValue() Freezable.CloneCurrentValueCore(Freezable) Freezable.CreateInstance() Freezable.Freeze() Freezable.Freeze(Freezable, bool) Freezable.FreezeCore(bool) Freezable.GetAsFrozen() Freezable.GetAsFrozenCore(Freezable) Freezable.GetCurrentValueAsFrozen() Freezable.GetCurrentValueAsFrozenCore(Freezable) Freezable.OnChanged() Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject) Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty) Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs) Freezable.ReadPreamble() Freezable.WritePostscript() Freezable.WritePreamble() Freezable.CanFreeze Freezable.IsFrozen Freezable.Changed DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetLocalValueEnumerator() DependencyObject.GetValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DataProperty public static readonly DependencyProperty DataProperty Field Value DependencyProperty Properties Data public object Data { get; set; } Property Value object Methods CreateInstanceCore() When implemented in a derived class, creates a new instance of the Freezable derived class. protected override Freezable CreateInstanceCore() Returns Freezable The new instance."
  },
  "api/H.Mvvm.CommandBase.html": {
    "href": "api/H.Mvvm.CommandBase.html",
    "title": "Class CommandBase | WPF-Control",
    "summary": "Class CommandBase Namespace H.Mvvm Assembly H.Mvvm.dll public abstract class CommandBase : ICommand Inheritance object CommandBase Implements ICommand Derived InvokeCommand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanExecute(object) Defines the method that determines whether the command can execute in its current state. public virtual bool CanExecute(object parameter) Parameters parameter object Data used by the command. If the command does not require data to be passed, this object can be set to null. Returns bool true if this command can be executed; otherwise, false. Execute(object) Defines the method to be called when the command is invoked. public abstract void Execute(object parameter) Parameters parameter object Data used by the command. If the command does not require data to be passed, this object can be set to null. Events CanExecuteChanged Occurs when changes occur that affect whether or not the command should execute. public event EventHandler CanExecuteChanged Event Type EventHandler"
  },
  "api/H.Mvvm.Commands.html": {
    "href": "api/H.Mvvm.Commands.html",
    "title": "Class Commands | WPF-Control",
    "summary": "Class Commands Namespace H.Mvvm Assembly H.Mvvm.dll public static class Commands Inheritance object Commands Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Am 上午 public static RoutedCommand Am { get; } Property Value RoutedCommand Cancel 取消 public static RoutedCommand Cancel { get; } Property Value RoutedCommand CheckAll 全选 public static RoutedCommand CheckAll { get; } Property Value RoutedCommand Clear 清除 public static RoutedCommand Clear { get; } Property Value RoutedCommand Close 关闭 public static RoutedCommand Close { get; } Property Value RoutedCommand CloseAll 关闭所有 public static RoutedCommand CloseAll { get; } Property Value RoutedCommand CloseOther 关闭其他 public static RoutedCommand CloseOther { get; } Property Value RoutedCommand Confirm 确定 public static RoutedCommand Confirm { get; } Property Value RoutedCommand Delete 删除 public static RoutedCommand Delete { get; } Property Value RoutedCommand DeleteAll 全部删除 public static RoutedCommand DeleteAll { get; } Property Value RoutedCommand DeleteAllChecked 删除选中 public static RoutedCommand DeleteAllChecked { get; } Property Value RoutedCommand Edit 编辑 public static RoutedCommand Edit { get; } Property Value RoutedCommand Enlarge 大 public static RoutedCommand Enlarge { get; } Property Value RoutedCommand First 第一个 public static RoutedCommand First { get; } Property Value RoutedCommand HourChange 小时改变 public static RoutedCommand HourChange { get; } Property Value RoutedCommand Last 最后一个 public static RoutedCommand Last { get; } Property Value RoutedCommand MinuteChange 分钟改变 public static RoutedCommand MinuteChange { get; } Property Value RoutedCommand MouseMove 鼠标移动 public static RoutedCommand MouseMove { get; } Property Value RoutedCommand New 新建 public static RoutedCommand New { get; } Property Value RoutedCommand Next 下一个 public static RoutedCommand Next { get; } Property Value RoutedCommand No 否 public static RoutedCommand No { get; } Property Value RoutedCommand Open 打开 public static RoutedCommand Open { get; } Property Value RoutedCommand Paste 粘贴 public static RoutedCommand Paste { get; } Property Value RoutedCommand Pm 下午 public static RoutedCommand Pm { get; } Property Value RoutedCommand Prev 上一个 public static RoutedCommand Prev { get; } Property Value RoutedCommand Reduce 小 public static RoutedCommand Reduce { get; } Property Value RoutedCommand Refresh 刷新 public static RoutedCommand Refresh { get; } Property Value RoutedCommand Restore 还原 public static RoutedCommand Restore { get; } Property Value RoutedCommand RotateLeft 左转 public static RoutedCommand RotateLeft { get; } Property Value RoutedCommand RotateRight 右转 public static RoutedCommand RotateRight { get; } Property Value RoutedCommand Save 保存 public static RoutedCommand Save { get; } Property Value RoutedCommand Search 搜索 public static RoutedCommand Search { get; } Property Value RoutedCommand SecondChange 秒改变 public static RoutedCommand SecondChange { get; } Property Value RoutedCommand Selected 选中 public static RoutedCommand Selected { get; } Property Value RoutedCommand Setting 设置 public static RoutedCommand Setting { get; } Property Value RoutedCommand Sure 确认 public static RoutedCommand Sure { get; } Property Value RoutedCommand Switch 切换 public static RoutedCommand Switch { get; } Property Value RoutedCommand View 查看 public static RoutedCommand View { get; } Property Value RoutedCommand Yes 是 public static RoutedCommand Yes { get; } Property Value RoutedCommand Methods InvalidateRequerySuggested() public static void InvalidateRequerySuggested()"
  },
  "api/H.Mvvm.DesignPresenterBase.html": {
    "href": "api/H.Mvvm.DesignPresenterBase.html",
    "title": "Class DesignPresenterBase | WPF-Control",
    "summary": "Class DesignPresenterBase Namespace H.Mvvm Assembly H.Mvvm.dll public abstract class DesignPresenterBase : DisplayBindableBase, INotifyPropertyChanged, IDable, IDesignPresenterBase Inheritance object BindableBase DisplayBindableBase DesignPresenterBase Implements INotifyPropertyChanged IDable IDesignPresenterBase Inherited Members DisplayBindableBase.Commands DisplayBindableBase.CreateCommands() DisplayBindableBase.LoadedCommand DisplayBindableBase.IsLoaded DisplayBindableBase.Loaded(object) DisplayBindableBase.ID DisplayBindableBase.Name DisplayBindableBase.Icon DisplayBindableBase.ShortName DisplayBindableBase.GroupName DisplayBindableBase.Description DisplayBindableBase.Order DisplayBindableBase.LoadDefaultCommand DisplayBindableBase.LoadDefault() BindableBase.Init() BindableBase.PropertyChanged BindableBase.RaisePropertyChanged(string) BindableBase.DispatcherRaisePropertyChanged(string) BindableBase.OnDispatcherPropertyChanged() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Background [Display(Name = \"背景颜色\", GroupName = \"样式\")] public Brush Background { get; set; } Property Value Brush BorderBrush [Display(Name = \"边框颜色\", GroupName = \"样式\")] public Brush BorderBrush { get; set; } Property Value Brush BorderThickness [Display(Name = \"边框粗细\", GroupName = \"样式\")] public Thickness BorderThickness { get; set; } Property Value Thickness Column [Display(Name = \"列\", GroupName = \"布局\")] public int Column { get; set; } Property Value int ColumnSpan [Display(Name = \"列跨距\", GroupName = \"布局\")] public int ColumnSpan { get; set; } Property Value int DeleteCommand [Display(Name = \"删除\")] public RelayCommand DeleteCommand { get; } Property Value RelayCommand Height [Display(Name = \"高\", GroupName = \"常用,布局\")] [TypeConverter(typeof(LengthConverter))] public double Height { get; set; } Property Value double HorizontalAlignment [Display(Name = \"水平对齐\", GroupName = \"布局\")] public HorizontalAlignment HorizontalAlignment { get; set; } Property Value HorizontalAlignment HorizontalContentAlignment [Display(Name = \"水平内容对齐\", GroupName = \"布局\")] public HorizontalAlignment HorizontalContentAlignment { get; set; } Property Value HorizontalAlignment IsEnabled [Display(Name = \"可用\", GroupName = \"样式\")] public bool IsEnabled { get; set; } Property Value bool IsMouseOver [Browsable(false)] [JsonIgnore] public bool IsMouseOver { get; set; } Property Value bool IsSelected [Browsable(false)] [JsonIgnore] public bool IsSelected { get; set; } Property Value bool IsVisible [Display(Name = \"可见\", GroupName = \"样式\")] public bool IsVisible { get; set; } Property Value bool Margin [Display(Name = \"外部间距\", GroupName = \"布局\")] public Thickness Margin { get; set; } Property Value Thickness MinHeight [Display(Name = \"最小高度\", GroupName = \"布局\")] [TypeConverter(typeof(LengthConverter))] public double MinHeight { get; set; } Property Value double MinWidth [Display(Name = \"最小宽度\", GroupName = \"布局\")] [TypeConverter(typeof(LengthConverter))] public double MinWidth { get; set; } Property Value double Opacity [Display(Name = \"透明度\", GroupName = \"样式\")] public double Opacity { get; set; } Property Value double Padding [Display(Name = \"内部间距\", GroupName = \"布局\")] public Thickness Padding { get; set; } Property Value Thickness Row [Display(Name = \"行\", GroupName = \"布局\")] public int Row { get; set; } Property Value int RowSpan [Display(Name = \"行跨距\", GroupName = \"布局\")] public int RowSpan { get; set; } Property Value int VerticalAlignment [Display(Name = \"垂直对齐\", GroupName = \"布局\")] public VerticalAlignment VerticalAlignment { get; set; } Property Value VerticalAlignment VerticalContentAlignment [Display(Name = \"垂直内部对齐\", GroupName = \"布局\")] public VerticalAlignment VerticalContentAlignment { get; set; } Property Value VerticalAlignment Width [Display(Name = \"宽\", GroupName = \"常用,布局\")] [TypeConverter(typeof(LengthConverter))] public double Width { get; set; } Property Value double Methods Delete(object) protected virtual void Delete(object e) Parameters e object"
  },
  "api/H.Mvvm.DisplayBindable-1.html": {
    "href": "api/H.Mvvm.DisplayBindable-1.html",
    "title": "Class DisplayBindable<T> | WPF-Control",
    "summary": "Class DisplayBindable<T> Namespace H.Mvvm Assembly H.Mvvm.dll public class DisplayBindable<T> : DisplayBindableBase, INotifyPropertyChanged, IDable Type Parameters T Inheritance object BindableBase DisplayBindableBase DisplayBindable<T> Implements INotifyPropertyChanged IDable Inherited Members DisplayBindableBase.Commands DisplayBindableBase.CreateCommands() DisplayBindableBase.LoadedCommand DisplayBindableBase.IsLoaded DisplayBindableBase.Loaded(object) DisplayBindableBase.ID DisplayBindableBase.Name DisplayBindableBase.Icon DisplayBindableBase.ShortName DisplayBindableBase.GroupName DisplayBindableBase.Description DisplayBindableBase.Order DisplayBindableBase.LoadDefaultCommand DisplayBindableBase.LoadDefault() BindableBase.Init() BindableBase.PropertyChanged BindableBase.RaisePropertyChanged(string) BindableBase.DispatcherRaisePropertyChanged(string) BindableBase.OnDispatcherPropertyChanged() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DisplayBindable(T) public DisplayBindable(T t) Parameters t T Properties Model [Browsable(false)] public T Model { get; set; } Property Value T"
  },
  "api/H.Mvvm.DisplayBindableBase.html": {
    "href": "api/H.Mvvm.DisplayBindableBase.html",
    "title": "Class DisplayBindableBase | WPF-Control",
    "summary": "Class DisplayBindableBase Namespace H.Mvvm Assembly H.Mvvm.dll public abstract class DisplayBindableBase : BindableBase, INotifyPropertyChanged, IDable Inheritance object BindableBase DisplayBindableBase Implements INotifyPropertyChanged IDable Derived DesignPresenterBase DisplayBindable<T> Inherited Members BindableBase.Init() BindableBase.PropertyChanged BindableBase.RaisePropertyChanged(string) BindableBase.DispatcherRaisePropertyChanged(string) BindableBase.OnDispatcherPropertyChanged() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DisplayBindableBase() public DisplayBindableBase() Properties Commands [Browsable(false)] [JsonIgnore] public ObservableCollection<ICommand> Commands { get; } Property Value ObservableCollection<ICommand> Description [JsonIgnore] [Browsable(false)] public virtual string Description { get; set; } Property Value string GroupName [JsonIgnore] [Browsable(false)] public virtual string GroupName { get; set; } Property Value string ID [Browsable(false)] public virtual string ID { get; set; } Property Value string Icon [JsonIgnore] [Browsable(false)] public virtual string Icon { get; set; } Property Value string IsLoaded [Browsable(false)] [JsonIgnore] public bool IsLoaded { get; set; } Property Value bool LoadDefaultCommand [JsonIgnore] [Display(Name = \"恢复默认\")] [Browsable(false)] public virtual RelayCommand LoadDefaultCommand { get; } Property Value RelayCommand LoadedCommand [Browsable(false)] [JsonIgnore] public RelayCommand LoadedCommand { get; } Property Value RelayCommand Name [JsonIgnore] [Browsable(false)] public virtual string Name { get; set; } Property Value string Order [JsonIgnore] [Browsable(false)] public virtual int Order { get; set; } Property Value int ShortName [JsonIgnore] [Browsable(false)] public virtual string ShortName { get; set; } Property Value string Methods CreateCommands() protected virtual IEnumerable<ICommand> CreateCommands() Returns IEnumerable<ICommand> LoadDefault() public virtual void LoadDefault() Loaded(object) protected virtual void Loaded(object obj) Parameters obj object"
  },
  "api/H.Mvvm.DisplayCommand-1.html": {
    "href": "api/H.Mvvm.DisplayCommand-1.html",
    "title": "Class DisplayCommand<T> | WPF-Control",
    "summary": "Class DisplayCommand<T> Namespace H.Mvvm Assembly H.Mvvm.dll public class DisplayCommand<T> : RelayCommand<T>, ICommand, IDisplayCommand Type Parameters T Inheritance object RelayCommand<T> DisplayCommand<T> Implements ICommand IDisplayCommand Inherited Members RelayCommand<T>.ExecuteCommand RelayCommand<T>.CanExecuteCommand RelayCommand<T>.Execute(object) RelayCommand<T>.CanExecute(object) RelayCommand<T>.CanExecuteChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DisplayCommand(Action<T>) public DisplayCommand(Action<T> executeCommand) Parameters executeCommand Action<T> DisplayCommand(Action<T>, Predicate<T>) public DisplayCommand(Action<T> executeCommand, Predicate<T> canExecuteCommand) Parameters executeCommand Action<T> canExecuteCommand Predicate<T> Properties Description public string Description { get; set; } Property Value string GroupName public string GroupName { get; set; } Property Value string Name public string Name { get; set; } Property Value string Order public int Order { get; set; } Property Value int"
  },
  "api/H.Mvvm.DisplayCommand.html": {
    "href": "api/H.Mvvm.DisplayCommand.html",
    "title": "Class DisplayCommand | WPF-Control",
    "summary": "Class DisplayCommand Namespace H.Mvvm Assembly H.Mvvm.dll public class DisplayCommand : RelayCommand, INotifyPropertyChanged, IRelayCommand, ICommand, IDisplayCommand Inheritance object RelayCommand DisplayCommand Implements INotifyPropertyChanged IRelayCommand ICommand IDisplayCommand Inherited Members RelayCommand._action RelayCommand._canExecute RelayCommand._actionCommand RelayCommand._canExecuteCommand RelayCommand.CanExecute(object) RelayCommand.CanExecuteChanged RelayCommand.Execute(object) RelayCommand.Name RelayCommand.IsEnabled RelayCommand.IsVisible RelayCommand.IsIndeterminate RelayCommand.IsBusy RelayCommand.Percent RelayCommand.Message RelayCommand.GroupName RelayCommand.PropertyChanged RelayCommand.RaisePropertyChanged(string) RelayCommand.Refresh() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DisplayCommand(Action<IRelayCommand, object>) public DisplayCommand(Action<IRelayCommand, object> action) Parameters action Action<IRelayCommand, object> DisplayCommand(Action<IRelayCommand, object>, Func<IRelayCommand, object, bool>) public DisplayCommand(Action<IRelayCommand, object> execute, Func<IRelayCommand, object, bool> canExecute) Parameters execute Action<IRelayCommand, object> canExecute Func<IRelayCommand, object, bool> DisplayCommand(Action<object>) public DisplayCommand(Action<object> action) Parameters action Action<object> DisplayCommand(Action<object>, Predicate<object>) public DisplayCommand(Action<object> execute, Predicate<object> canExecute) Parameters execute Action<object> canExecute Predicate<object> Properties Description [JsonIgnore] [Browsable(false)] public virtual string Description { get; set; } Property Value string Order [JsonIgnore] [Browsable(false)] public virtual int Order { get; set; } Property Value int"
  },
  "api/H.Mvvm.IDAttribute.html": {
    "href": "api/H.Mvvm.IDAttribute.html",
    "title": "Class IDAttribute | WPF-Control",
    "summary": "Class IDAttribute Namespace H.Mvvm Assembly H.Mvvm.dll public class IDAttribute : Attribute Inheritance object Attribute IDAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ID public string ID { get; set; } Property Value string"
  },
  "api/H.Mvvm.IDable.html": {
    "href": "api/H.Mvvm.IDable.html",
    "title": "Interface IDable | WPF-Control",
    "summary": "Interface IDable Namespace H.Mvvm Assembly H.Mvvm.dll public interface IDable Properties ID string ID { get; set; } Property Value string"
  },
  "api/H.Mvvm.IDesignPresenterBase.html": {
    "href": "api/H.Mvvm.IDesignPresenterBase.html",
    "title": "Interface IDesignPresenterBase | WPF-Control",
    "summary": "Interface IDesignPresenterBase Namespace H.Mvvm Assembly H.Mvvm.dll public interface IDesignPresenterBase Properties Background Brush Background { get; set; } Property Value Brush BorderBrush Brush BorderBrush { get; set; } Property Value Brush BorderThickness Thickness BorderThickness { get; set; } Property Value Thickness Column int Column { get; set; } Property Value int ColumnSpan int ColumnSpan { get; set; } Property Value int DeleteCommand RelayCommand DeleteCommand { get; } Property Value RelayCommand Height double Height { get; set; } Property Value double HorizontalAlignment HorizontalAlignment HorizontalAlignment { get; set; } Property Value HorizontalAlignment HorizontalContentAlignment HorizontalAlignment HorizontalContentAlignment { get; set; } Property Value HorizontalAlignment IsEnabled bool IsEnabled { get; set; } Property Value bool IsMouseOver bool IsMouseOver { get; set; } Property Value bool IsSelected bool IsSelected { get; set; } Property Value bool IsVisible bool IsVisible { get; set; } Property Value bool Margin Thickness Margin { get; set; } Property Value Thickness MinHeight double MinHeight { get; set; } Property Value double MinWidth double MinWidth { get; set; } Property Value double Opacity double Opacity { get; set; } Property Value double Padding Thickness Padding { get; set; } Property Value Thickness Row int Row { get; set; } Property Value int RowSpan int RowSpan { get; set; } Property Value int VerticalAlignment VerticalAlignment VerticalAlignment { get; set; } Property Value VerticalAlignment VerticalContentAlignment VerticalAlignment VerticalContentAlignment { get; set; } Property Value VerticalAlignment Width double Width { get; set; } Property Value double"
  },
  "api/H.Mvvm.IDisplayCommand.html": {
    "href": "api/H.Mvvm.IDisplayCommand.html",
    "title": "Interface IDisplayCommand | WPF-Control",
    "summary": "Interface IDisplayCommand Namespace H.Mvvm Assembly H.Mvvm.dll public interface IDisplayCommand Properties Description string Description { get; set; } Property Value string GroupName string GroupName { get; set; } Property Value string Name string Name { get; set; } Property Value string Order int Order { get; set; } Property Value int"
  },
  "api/H.Mvvm.IModelBindable-1.html": {
    "href": "api/H.Mvvm.IModelBindable-1.html",
    "title": "Interface IModelBindable<T> | WPF-Control",
    "summary": "Interface IModelBindable<T> Namespace H.Mvvm Assembly H.Mvvm.dll public interface IModelBindable<T> : IModelBindable Type Parameters T Inherited Members IModelBindable.GetModel() Properties Model T Model { get; set; } Property Value T Value double Value { get; set; } Property Value double Visible bool Visible { get; set; } Property Value bool"
  },
  "api/H.Mvvm.IModelBindable.html": {
    "href": "api/H.Mvvm.IModelBindable.html",
    "title": "Interface IModelBindable | WPF-Control",
    "summary": "Interface IModelBindable Namespace H.Mvvm Assembly H.Mvvm.dll public interface IModelBindable Methods GetModel() object GetModel() Returns object"
  },
  "api/H.Mvvm.IRelayCommand.html": {
    "href": "api/H.Mvvm.IRelayCommand.html",
    "title": "Interface IRelayCommand | WPF-Control",
    "summary": "Interface IRelayCommand Namespace H.Mvvm Assembly H.Mvvm.dll public interface IRelayCommand : ICommand Inherited Members ICommand.CanExecute(object) ICommand.Execute(object) ICommand.CanExecuteChanged Properties GroupName string GroupName { get; set; } Property Value string IsBusy bool IsBusy { get; set; } Property Value bool IsEnabled bool IsEnabled { get; set; } Property Value bool IsIndeterminate bool IsIndeterminate { get; set; } Property Value bool IsVisible bool IsVisible { get; set; } Property Value bool Message string Message { get; set; } Property Value string Name string Name { get; set; } Property Value string Percent double Percent { get; set; } Property Value double"
  },
  "api/H.Mvvm.ISearchable.html": {
    "href": "api/H.Mvvm.ISearchable.html",
    "title": "Interface ISearchable | WPF-Control",
    "summary": "Interface ISearchable Namespace H.Mvvm Assembly H.Mvvm.dll public interface ISearchable Methods Filter(string) bool Filter(string txt) Parameters txt string Returns bool"
  },
  "api/H.Mvvm.ISelectBindable.html": {
    "href": "api/H.Mvvm.ISelectBindable.html",
    "title": "Interface ISelectBindable | WPF-Control",
    "summary": "Interface ISelectBindable Namespace H.Mvvm Assembly H.Mvvm.dll public interface ISelectBindable Properties IsSelected bool IsSelected { get; set; } Property Value bool"
  },
  "api/H.Mvvm.ITransactionCommand.html": {
    "href": "api/H.Mvvm.ITransactionCommand.html",
    "title": "Interface ITransactionCommand | WPF-Control",
    "summary": "Interface ITransactionCommand Namespace H.Mvvm Assembly H.Mvvm.dll public interface ITransactionCommand Methods BeginEditAsync(Func<bool>, int) Task<bool> BeginEditAsync(Func<bool> canCommit = null, int millisecondsTimeout = 60000) Parameters canCommit Func<bool> millisecondsTimeout int Returns Task<bool>"
  },
  "api/H.Mvvm.ITreeNode.html": {
    "href": "api/H.Mvvm.ITreeNode.html",
    "title": "Interface ITreeNode | WPF-Control",
    "summary": "Interface ITreeNode Namespace H.Mvvm Assembly H.Mvvm.dll public interface ITreeNode Properties IsChecked bool? IsChecked { get; set; } Property Value bool? IsExpanded bool IsExpanded { get; set; } Property Value bool Visibility Visibility Visibility { get; set; } Property Value Visibility"
  },
  "api/H.Mvvm.InvokeCommand.html": {
    "href": "api/H.Mvvm.InvokeCommand.html",
    "title": "Class InvokeCommand | WPF-Control",
    "summary": "Class InvokeCommand Namespace H.Mvvm Assembly H.Mvvm.dll public class InvokeCommand : CommandBase, ICommand Inheritance object CommandBase InvokeCommand Implements ICommand Inherited Members CommandBase.CanExecuteChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InvokeCommand(Action<object>) public InvokeCommand(Action<object> action) Parameters action Action<object> InvokeCommand(Action<object>, Predicate<object>) public InvokeCommand(Action<object> execute, Predicate<object> canExecute) Parameters execute Action<object> canExecute Predicate<object> Fields _action protected Action<object> _action Field Value Action<object> _canExecute protected readonly Predicate<object> _canExecute Field Value Predicate<object> Methods CanExecute(object) Defines the method that determines whether the command can execute in its current state. public override bool CanExecute(object parameter) Parameters parameter object Data used by the command. If the command does not require data to be passed, this object can be set to null. Returns bool true if this command can be executed; otherwise, false. Execute(object) Defines the method to be called when the command is invoked. public override void Execute(object parameter) Parameters parameter object Data used by the command. If the command does not require data to be passed, this object can be set to null."
  },
  "api/H.Mvvm.MarkupCommandBase.html": {
    "href": "api/H.Mvvm.MarkupCommandBase.html",
    "title": "Class MarkupCommandBase | WPF-Control",
    "summary": "Class MarkupCommandBase Namespace H.Mvvm Assembly H.Mvvm.dll public abstract class MarkupCommandBase : MarkupExtension, ICommand, INotifyPropertyChanged Inheritance object MarkupExtension MarkupCommandBase Implements ICommand INotifyPropertyChanged Derived AsyncMarkupCommandBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanExecute(object) Defines the method that determines whether the command can execute in its current state. public virtual bool CanExecute(object parameter) Parameters parameter object Data used by the command. If the command does not require data to be passed, this object can be set to null. Returns bool true if this command can be executed; otherwise, false. Execute(object) Defines the method to be called when the command is invoked. public abstract void Execute(object parameter) Parameters parameter object Data used by the command. If the command does not require data to be passed, this object can be set to null. ProvideValue(IServiceProvider) When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension. public override object ProvideValue(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider A service provider helper that can provide services for the markup extension. Returns object The object value to set on the property where the extension is applied. RaisePropertyChanged(string) public virtual void RaisePropertyChanged(string propertyName = \"\") Parameters propertyName string Events CanExecuteChanged Occurs when changes occur that affect whether or not the command should execute. public event EventHandler CanExecuteChanged Event Type EventHandler PropertyChanged Occurs when a property value changes. public event PropertyChangedEventHandler PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/H.Mvvm.ModelBindable-1.html": {
    "href": "api/H.Mvvm.ModelBindable-1.html",
    "title": "Class ModelBindable<T> | WPF-Control",
    "summary": "Class ModelBindable<T> Namespace H.Mvvm Assembly H.Mvvm.dll public class ModelBindable<T> : BindableBase, INotifyPropertyChanged, IModelBindable<T>, IModelBindable, ISearchable Type Parameters T Inheritance object BindableBase ModelBindable<T> Implements INotifyPropertyChanged IModelBindable<T> IModelBindable ISearchable Derived SelectBindable<T> Inherited Members BindableBase.Init() BindableBase.PropertyChanged BindableBase.RaisePropertyChanged(string) BindableBase.DispatcherRaisePropertyChanged(string) BindableBase.OnDispatcherPropertyChanged() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ModelBindable(T) public ModelBindable(T t) Parameters t T Properties IsBuzy [Browsable(false)] public bool IsBuzy { get; set; } Property Value bool IsEnbled [Browsable(false)] public bool IsEnbled { get; set; } Property Value bool Message [Browsable(false)] public string Message { get; set; } Property Value string Model [Browsable(false)] public T Model { get; set; } Property Value T Value [Browsable(false)] public double Value { get; set; } Property Value double Visible [Browsable(false)] public bool Visible { get; set; } Property Value bool Methods Filter(string) public virtual bool Filter(string txt) Parameters txt string Returns bool GetModel() public object GetModel() Returns object LoadValue(out string) protected virtual bool LoadValue(out string message) Parameters message string Returns bool SaveValue(out string) protected virtual bool SaveValue(out string message) Parameters message string Returns bool"
  },
  "api/H.Mvvm.RelayCommand-1.html": {
    "href": "api/H.Mvvm.RelayCommand-1.html",
    "title": "Class RelayCommand<T> | WPF-Control",
    "summary": "Class RelayCommand<T> Namespace H.Mvvm Assembly H.Mvvm.dll public class RelayCommand<T> : ICommand Type Parameters T Inheritance object RelayCommand<T> Implements ICommand Derived DisplayCommand<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RelayCommand(Action<T>) public RelayCommand(Action<T> executeCommand) Parameters executeCommand Action<T> RelayCommand(Action<T>, Predicate<T>) public RelayCommand(Action<T> executeCommand, Predicate<T> canExecuteCommand) Parameters executeCommand Action<T> canExecuteCommand Predicate<T> Properties CanExecuteCommand public Predicate<T> CanExecuteCommand { get; } Property Value Predicate<T> ExecuteCommand public Action<T> ExecuteCommand { get; } Property Value Action<T> Methods CanExecute(object) Defines the method that determines whether the command can execute in its current state. public bool CanExecute(object parameter) Parameters parameter object Data used by the command. If the command does not require data to be passed, this object can be set to null. Returns bool true if this command can be executed; otherwise, false. Execute(object) Defines the method to be called when the command is invoked. public void Execute(object parameter) Parameters parameter object Data used by the command. If the command does not require data to be passed, this object can be set to null. Events CanExecuteChanged Occurs when changes occur that affect whether or not the command should execute. public event EventHandler CanExecuteChanged Event Type EventHandler"
  },
  "api/H.Mvvm.RelayCommand.html": {
    "href": "api/H.Mvvm.RelayCommand.html",
    "title": "Class RelayCommand | WPF-Control",
    "summary": "Class RelayCommand Namespace H.Mvvm Assembly H.Mvvm.dll public class RelayCommand : INotifyPropertyChanged, IRelayCommand, ICommand Inheritance object RelayCommand Implements INotifyPropertyChanged IRelayCommand ICommand Derived DisplayCommand TransactionCommand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RelayCommand(Action<IRelayCommand, object>) public RelayCommand(Action<IRelayCommand, object> action) Parameters action Action<IRelayCommand, object> RelayCommand(Action<IRelayCommand, object>, Func<IRelayCommand, object, bool>) public RelayCommand(Action<IRelayCommand, object> execute, Func<IRelayCommand, object, bool> canExecute) Parameters execute Action<IRelayCommand, object> canExecute Func<IRelayCommand, object, bool> RelayCommand(Action<object>) public RelayCommand(Action<object> action) Parameters action Action<object> RelayCommand(Action<object>, Predicate<object>) public RelayCommand(Action<object> execute, Predicate<object> canExecute) Parameters execute Action<object> canExecute Predicate<object> Fields _action protected Action<object> _action Field Value Action<object> _actionCommand protected Action<IRelayCommand, object> _actionCommand Field Value Action<IRelayCommand, object> _canExecute protected readonly Predicate<object> _canExecute Field Value Predicate<object> _canExecuteCommand protected readonly Func<IRelayCommand, object, bool> _canExecuteCommand Field Value Func<IRelayCommand, object, bool> Properties GroupName [JsonIgnore] [Browsable(false)] public string GroupName { get; set; } Property Value string IsBusy public bool IsBusy { get; set; } Property Value bool IsEnabled public bool IsEnabled { get; set; } Property Value bool IsIndeterminate public bool IsIndeterminate { get; set; } Property Value bool IsVisible public bool IsVisible { get; set; } Property Value bool Message public string Message { get; set; } Property Value string Name public string Name { get; set; } Property Value string Percent public double Percent { get; set; } Property Value double Methods CanExecute(object) Defines the method that determines whether the command can execute in its current state. public bool CanExecute(object parameter) Parameters parameter object Data used by the command. If the command does not require data to be passed, this object can be set to null. Returns bool true if this command can be executed; otherwise, false. Execute(object) 执行命令 public virtual void Execute(object parameter) Parameters parameter object RaisePropertyChanged(string) public void RaisePropertyChanged(string propertyName = \"\") Parameters propertyName string Refresh() 刷新命令可执行状态 (会调用CanExecute方法) public void Refresh() Events CanExecuteChanged Occurs when changes occur that affect whether or not the command should execute. public event EventHandler CanExecuteChanged Event Type EventHandler PropertyChanged Occurs when a property value changes. public event PropertyChangedEventHandler PropertyChanged Event Type PropertyChangedEventHandler Operators implicit operator RelayCommand(Action<IRelayCommand, object>) public static implicit operator RelayCommand(Action<IRelayCommand, object> action) Parameters action Action<IRelayCommand, object> Returns RelayCommand implicit operator RelayCommand(Action<object>) public static implicit operator RelayCommand(Action<object> action) Parameters action Action<object> Returns RelayCommand"
  },
  "api/H.Mvvm.RoutedEventArgs-1.html": {
    "href": "api/H.Mvvm.RoutedEventArgs-1.html",
    "title": "Class RoutedEventArgs<T> | WPF-Control",
    "summary": "Class RoutedEventArgs<T> Namespace H.Mvvm Assembly H.Mvvm.dll public class RoutedEventArgs<T> : RoutedEventArgs Type Parameters T Inheritance object EventArgs RoutedEventArgs RoutedEventArgs<T> Inherited Members RoutedEventArgs.InvokeEventHandler(Delegate, object) RoutedEventArgs.OnSetSource(object) RoutedEventArgs.Handled RoutedEventArgs.OriginalSource RoutedEventArgs.RoutedEvent RoutedEventArgs.Source EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RoutedEventArgs(RoutedEvent, object) public RoutedEventArgs(RoutedEvent routedEvent, object source) Parameters routedEvent RoutedEvent source object RoutedEventArgs(RoutedEvent, object, T) public RoutedEventArgs(RoutedEvent routedEvent, object source, T entity) Parameters routedEvent RoutedEvent source object entity T RoutedEventArgs(T) public RoutedEventArgs(T entity) Parameters entity T Properties Entity public T Entity { get; set; } Property Value T"
  },
  "api/H.Mvvm.SelectBindable-1.html": {
    "href": "api/H.Mvvm.SelectBindable-1.html",
    "title": "Class SelectBindable<T> | WPF-Control",
    "summary": "Class SelectBindable<T> Namespace H.Mvvm Assembly H.Mvvm.dll public class SelectBindable<T> : ModelBindable<T>, INotifyPropertyChanged, IModelBindable<T>, IModelBindable, ISearchable, ISelectBindable Type Parameters T Inheritance object BindableBase ModelBindable<T> SelectBindable<T> Implements INotifyPropertyChanged IModelBindable<T> IModelBindable ISearchable ISelectBindable Derived TreeNodeBase<T> Inherited Members ModelBindable<T>.Model ModelBindable<T>.GetModel() ModelBindable<T>.Visible ModelBindable<T>.IsEnbled ModelBindable<T>.IsBuzy ModelBindable<T>.Value ModelBindable<T>.Message ModelBindable<T>.LoadValue(out string) ModelBindable<T>.SaveValue(out string) ModelBindable<T>.Filter(string) BindableBase.Init() BindableBase.PropertyChanged BindableBase.RaisePropertyChanged(string) BindableBase.DispatcherRaisePropertyChanged(string) BindableBase.OnDispatcherPropertyChanged() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SelectBindable(T) public SelectBindable(T t) Parameters t T Properties IsSelected [Browsable(false)] public bool IsSelected { get; set; } Property Value bool"
  },
  "api/H.Mvvm.TransactionCommand.html": {
    "href": "api/H.Mvvm.TransactionCommand.html",
    "title": "Class TransactionCommand | WPF-Control",
    "summary": "Class TransactionCommand Namespace H.Mvvm Assembly H.Mvvm.dll public class TransactionCommand : RelayCommand, INotifyPropertyChanged, IRelayCommand, ICommand, ITransactionCommand Inheritance object RelayCommand TransactionCommand Implements INotifyPropertyChanged IRelayCommand ICommand ITransactionCommand Inherited Members RelayCommand._action RelayCommand._canExecute RelayCommand._actionCommand RelayCommand._canExecuteCommand RelayCommand.CanExecute(object) RelayCommand.CanExecuteChanged RelayCommand.Execute(object) RelayCommand.Name RelayCommand.IsEnabled RelayCommand.IsVisible RelayCommand.IsIndeterminate RelayCommand.IsBusy RelayCommand.Percent RelayCommand.Message RelayCommand.GroupName RelayCommand.PropertyChanged RelayCommand.RaisePropertyChanged(string) RelayCommand.Refresh() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TransactionCommand(Action<ITransactionCommand, object>) public TransactionCommand(Action<ITransactionCommand, object> action) Parameters action Action<ITransactionCommand, object> TransactionCommand(Action<ITransactionCommand, object>, Func<ITransactionCommand, object, bool>) public TransactionCommand(Action<ITransactionCommand, object> action, Func<ITransactionCommand, object, bool> canAction) Parameters action Action<ITransactionCommand, object> canAction Func<ITransactionCommand, object, bool> TransactionCommand(Action<object>) public TransactionCommand(Action<object> action) Parameters action Action<object> TransactionCommand(Action<object>, Predicate<object>) public TransactionCommand(Action<object> execute, Predicate<object> canExecute) Parameters execute Action<object> canExecute Predicate<object> Fields _canCommit protected Func<bool> _canCommit Field Value Func<bool> Properties CommitCommand public InvokeCommand CommitCommand { get; } Property Value InvokeCommand IsEditting 说明 public bool IsEditting { get; set; } Property Value bool RollbackCommand public InvokeCommand RollbackCommand { get; } Property Value InvokeCommand Methods BeginEditAsync(Func<bool>, int) public Task<bool> BeginEditAsync(Func<bool> canCommit = null, int millisecondsTimeout = 60000) Parameters canCommit Func<bool> millisecondsTimeout int Returns Task<bool>"
  },
  "api/H.Mvvm.TreeNodeBase-1.html": {
    "href": "api/H.Mvvm.TreeNodeBase-1.html",
    "title": "Class TreeNodeBase<T> | WPF-Control",
    "summary": "Class TreeNodeBase<T> Namespace H.Mvvm Assembly H.Mvvm.dll public class TreeNodeBase<T> : SelectBindable<T>, INotifyPropertyChanged, IModelBindable<T>, IModelBindable, ISelectBindable, ITreeNode, ISearchable Type Parameters T Inheritance object BindableBase ModelBindable<T> SelectBindable<T> TreeNodeBase<T> Implements INotifyPropertyChanged IModelBindable<T> IModelBindable ISelectBindable ITreeNode ISearchable Inherited Members SelectBindable<T>.IsSelected ModelBindable<T>.Model ModelBindable<T>.GetModel() ModelBindable<T>.Visible ModelBindable<T>.IsEnbled ModelBindable<T>.IsBuzy ModelBindable<T>.Value ModelBindable<T>.Message ModelBindable<T>.LoadValue(out string) ModelBindable<T>.SaveValue(out string) BindableBase.Init() BindableBase.PropertyChanged BindableBase.RaisePropertyChanged(string) BindableBase.DispatcherRaisePropertyChanged(string) BindableBase.OnDispatcherPropertyChanged() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TreeNodeBase(T) public TreeNodeBase(T t) Parameters t T Properties IsCheckable public bool IsCheckable { get; set; } Property Value bool IsChecked public bool? IsChecked { get; set; } Property Value bool? IsExpanded public bool IsExpanded { get; set; } Property Value bool IsLoaded public bool IsLoaded { get; set; } Property Value bool Nodes public ObservableCollection<TreeNodeBase<T>> Nodes { get; set; } Property Value ObservableCollection<TreeNodeBase<T>> Parent public TreeNodeBase<T> Parent { get; set; } Property Value TreeNodeBase<T> TreeNodeEntity public TreeNodeBase<T> TreeNodeEntity { get; set; } Property Value TreeNodeBase<T> Visibility public Visibility Visibility { get; set; } Property Value Visibility Methods AddNode(TreeNodeBase<T>) public void AddNode(TreeNodeBase<T> node) Parameters node TreeNodeBase<T> Filter(string) public override bool Filter(string txt) Parameters txt string Returns bool FindAll(Predicate<TreeNodeBase<T>>) public IEnumerable<TreeNodeBase<T>> FindAll(Predicate<TreeNodeBase<T>> action = null) Parameters action Predicate<TreeNodeBase<T>> Returns IEnumerable<TreeNodeBase<T>> FindAllParent(Predicate<TreeNodeBase<T>>) public IEnumerable<TreeNodeBase<T>> FindAllParent(Predicate<TreeNodeBase<T>> action = null) Parameters action Predicate<TreeNodeBase<T>> Returns IEnumerable<TreeNodeBase<T>> Foreach(Action<TreeNodeBase<T>>) public void Foreach(Action<TreeNodeBase<T>> action) Parameters action Action<TreeNodeBase<T>>"
  },
  "api/H.Mvvm.html": {
    "href": "api/H.Mvvm.html",
    "title": "Namespace H.Mvvm | WPF-Control",
    "summary": "Namespace H.Mvvm Classes AsyncMarkupCommandBase Bindable BindableBase BindingProxy CommandBase Commands DesignPresenterBase DisplayBindableBase DisplayBindable<T> DisplayCommand DisplayCommand<T> IDAttribute InvokeCommand MarkupCommandBase ModelBindable<T> RelayCommand RelayCommand<T> RoutedEventArgs<T> SelectBindable<T> TransactionCommand TreeNodeBase<T> Interfaces IDable IDesignPresenterBase IDisplayCommand IModelBindable IModelBindable<T> IRelayCommand ISearchable ISelectBindable ITransactionCommand ITreeNode"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | WPF-Control",
    "summary": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | WPF-Control",
    "summary": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | WPF-Control",
    "summary": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}