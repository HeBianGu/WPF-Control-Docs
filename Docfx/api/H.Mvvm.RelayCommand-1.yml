### YamlMime:ManagedReference
items:
- uid: H.Mvvm.RelayCommand`1
  commentId: T:H.Mvvm.RelayCommand`1
  id: RelayCommand`1
  parent: H.Mvvm
  children:
  - H.Mvvm.RelayCommand`1.#ctor(System.Action{`0})
  - H.Mvvm.RelayCommand`1.#ctor(System.Action{`0},System.Predicate{`0})
  - H.Mvvm.RelayCommand`1.CanExecute(System.Object)
  - H.Mvvm.RelayCommand`1.CanExecuteChanged
  - H.Mvvm.RelayCommand`1.CanExecuteCommand
  - H.Mvvm.RelayCommand`1.Execute(System.Object)
  - H.Mvvm.RelayCommand`1.ExecuteCommand
  langs:
  - csharp
  - vb
  name: RelayCommand<T>
  nameWithType: RelayCommand<T>
  fullName: H.Mvvm.RelayCommand<T>
  type: Class
  source:
    id: RelayCommand
    path: D:\GitHub\WPF-Control-Docs\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\RelayCommand.cs
    startLine: 22
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  syntax:
    content: 'public class RelayCommand<T> : ICommand'
    typeParameters:
    - id: T
    content.vb: Public Class RelayCommand(Of T) Implements ICommand
  inheritance:
  - System.Object
  derivedClasses:
  - H.Mvvm.DisplayCommand`1
  implements:
  - System.Windows.Input.ICommand
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: RelayCommand(Of T)
  fullName.vb: H.Mvvm.RelayCommand(Of T)
  name.vb: RelayCommand(Of T)
- uid: H.Mvvm.RelayCommand`1.ExecuteCommand
  commentId: P:H.Mvvm.RelayCommand`1.ExecuteCommand
  id: ExecuteCommand
  parent: H.Mvvm.RelayCommand`1
  langs:
  - csharp
  - vb
  name: ExecuteCommand
  nameWithType: RelayCommand<T>.ExecuteCommand
  fullName: H.Mvvm.RelayCommand<T>.ExecuteCommand
  type: Property
  source:
    id: ExecuteCommand
    path: D:\GitHub\WPF-Control-Docs\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\RelayCommand.cs
    startLine: 24
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  syntax:
    content: public Action<T> ExecuteCommand { get; }
    parameters: []
    return:
      type: System.Action{{T}}
    content.vb: Public Property ExecuteCommand As Action(Of T)
  overload: H.Mvvm.RelayCommand`1.ExecuteCommand*
  nameWithType.vb: RelayCommand(Of T).ExecuteCommand
  fullName.vb: H.Mvvm.RelayCommand(Of T).ExecuteCommand
- uid: H.Mvvm.RelayCommand`1.CanExecuteCommand
  commentId: P:H.Mvvm.RelayCommand`1.CanExecuteCommand
  id: CanExecuteCommand
  parent: H.Mvvm.RelayCommand`1
  langs:
  - csharp
  - vb
  name: CanExecuteCommand
  nameWithType: RelayCommand<T>.CanExecuteCommand
  fullName: H.Mvvm.RelayCommand<T>.CanExecuteCommand
  type: Property
  source:
    id: CanExecuteCommand
    path: D:\GitHub\WPF-Control-Docs\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\RelayCommand.cs
    startLine: 25
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  syntax:
    content: public Predicate<T> CanExecuteCommand { get; }
    parameters: []
    return:
      type: System.Predicate{{T}}
    content.vb: Public Property CanExecuteCommand As Predicate(Of T)
  overload: H.Mvvm.RelayCommand`1.CanExecuteCommand*
  nameWithType.vb: RelayCommand(Of T).CanExecuteCommand
  fullName.vb: H.Mvvm.RelayCommand(Of T).CanExecuteCommand
- uid: H.Mvvm.RelayCommand`1.#ctor(System.Action{`0},System.Predicate{`0})
  commentId: M:H.Mvvm.RelayCommand`1.#ctor(System.Action{`0},System.Predicate{`0})
  id: '#ctor(System.Action{`0},System.Predicate{`0})'
  parent: H.Mvvm.RelayCommand`1
  langs:
  - csharp
  - vb
  name: RelayCommand(Action<T>, Predicate<T>)
  nameWithType: RelayCommand<T>.RelayCommand(Action<T>, Predicate<T>)
  fullName: H.Mvvm.RelayCommand<T>.RelayCommand(System.Action<T>, System.Predicate<T>)
  type: Constructor
  source:
    id: .ctor
    path: D:\GitHub\WPF-Control-Docs\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\RelayCommand.cs
    startLine: 27
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  syntax:
    content: public RelayCommand(Action<T> executeCommand, Predicate<T> canExecuteCommand)
    parameters:
    - id: executeCommand
      type: System.Action{{T}}
    - id: canExecuteCommand
      type: System.Predicate{{T}}
    content.vb: Public Sub New(executeCommand As Action(Of T), canExecuteCommand As Predicate(Of T))
  overload: H.Mvvm.RelayCommand`1.#ctor*
  nameWithType.vb: RelayCommand(Of T).New(Action(Of T), Predicate(Of T))
  fullName.vb: H.Mvvm.RelayCommand(Of T).New(System.Action(Of T), System.Predicate(Of T))
  name.vb: New(Action(Of T), Predicate(Of T))
- uid: H.Mvvm.RelayCommand`1.#ctor(System.Action{`0})
  commentId: M:H.Mvvm.RelayCommand`1.#ctor(System.Action{`0})
  id: '#ctor(System.Action{`0})'
  parent: H.Mvvm.RelayCommand`1
  langs:
  - csharp
  - vb
  name: RelayCommand(Action<T>)
  nameWithType: RelayCommand<T>.RelayCommand(Action<T>)
  fullName: H.Mvvm.RelayCommand<T>.RelayCommand(System.Action<T>)
  type: Constructor
  source:
    id: .ctor
    path: D:\GitHub\WPF-Control-Docs\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\RelayCommand.cs
    startLine: 33
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  syntax:
    content: public RelayCommand(Action<T> executeCommand)
    parameters:
    - id: executeCommand
      type: System.Action{{T}}
    content.vb: Public Sub New(executeCommand As Action(Of T))
  overload: H.Mvvm.RelayCommand`1.#ctor*
  nameWithType.vb: RelayCommand(Of T).New(Action(Of T))
  fullName.vb: H.Mvvm.RelayCommand(Of T).New(System.Action(Of T))
  name.vb: New(Action(Of T))
- uid: H.Mvvm.RelayCommand`1.Execute(System.Object)
  commentId: M:H.Mvvm.RelayCommand`1.Execute(System.Object)
  id: Execute(System.Object)
  parent: H.Mvvm.RelayCommand`1
  langs:
  - csharp
  - vb
  name: Execute(object)
  nameWithType: RelayCommand<T>.Execute(object)
  fullName: H.Mvvm.RelayCommand<T>.Execute(object)
  type: Method
  source:
    id: Execute
    path: D:\GitHub\WPF-Control-Docs\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\RelayCommand.cs
    startLine: 36
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  summary: Defines the method to be called when the command is invoked.
  example: []
  syntax:
    content: public void Execute(object parameter)
    parameters:
    - id: parameter
      type: System.Object
      description: Data used by the command.  If the command does not require data to be passed, this object can be set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Sub Execute(parameter As Object)
  overload: H.Mvvm.RelayCommand`1.Execute*
  implements:
  - System.Windows.Input.ICommand.Execute(System.Object)
  nameWithType.vb: RelayCommand(Of T).Execute(Object)
  fullName.vb: H.Mvvm.RelayCommand(Of T).Execute(Object)
  name.vb: Execute(Object)
- uid: H.Mvvm.RelayCommand`1.CanExecute(System.Object)
  commentId: M:H.Mvvm.RelayCommand`1.CanExecute(System.Object)
  id: CanExecute(System.Object)
  parent: H.Mvvm.RelayCommand`1
  langs:
  - csharp
  - vb
  name: CanExecute(object)
  nameWithType: RelayCommand<T>.CanExecute(object)
  fullName: H.Mvvm.RelayCommand<T>.CanExecute(object)
  type: Method
  source:
    id: CanExecute
    path: D:\GitHub\WPF-Control-Docs\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\RelayCommand.cs
    startLine: 41
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  summary: Defines the method that determines whether the command can execute in its current state.
  example: []
  syntax:
    content: public bool CanExecute(object parameter)
    parameters:
    - id: parameter
      type: System.Object
      description: Data used by the command.  If the command does not require data to be passed, this object can be set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if this command can be executed; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function CanExecute(parameter As Object) As Boolean
  overload: H.Mvvm.RelayCommand`1.CanExecute*
  implements:
  - System.Windows.Input.ICommand.CanExecute(System.Object)
  nameWithType.vb: RelayCommand(Of T).CanExecute(Object)
  fullName.vb: H.Mvvm.RelayCommand(Of T).CanExecute(Object)
  name.vb: CanExecute(Object)
- uid: H.Mvvm.RelayCommand`1.CanExecuteChanged
  commentId: E:H.Mvvm.RelayCommand`1.CanExecuteChanged
  id: CanExecuteChanged
  parent: H.Mvvm.RelayCommand`1
  langs:
  - csharp
  - vb
  name: CanExecuteChanged
  nameWithType: RelayCommand<T>.CanExecuteChanged
  fullName: H.Mvvm.RelayCommand<T>.CanExecuteChanged
  type: Event
  source:
    id: CanExecuteChanged
    path: D:\GitHub\WPF-Control-Docs\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\RelayCommand.cs
    startLine: 47
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  summary: Occurs when changes occur that affect whether or not the command should execute.
  example: []
  syntax:
    content: public event EventHandler CanExecuteChanged
    return:
      type: System.EventHandler
    content.vb: Public Event CanExecuteChanged As EventHandler
  implements:
  - System.Windows.Input.ICommand.CanExecuteChanged
  nameWithType.vb: RelayCommand(Of T).CanExecuteChanged
  fullName.vb: H.Mvvm.RelayCommand(Of T).CanExecuteChanged
references:
- uid: H.Mvvm
  commentId: N:H.Mvvm
  href: H.html
  name: H.Mvvm
  nameWithType: H.Mvvm
  fullName: H.Mvvm
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Mvvm
    name: Mvvm
    href: H.Mvvm.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Mvvm
    name: Mvvm
    href: H.Mvvm.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Windows.Input.ICommand
  commentId: T:System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Input
  commentId: N:System.Windows.Input
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Input
  nameWithType: System.Windows.Input
  fullName: System.Windows.Input
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Input
    name: Input
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Input
    name: Input
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input
- uid: H.Mvvm.RelayCommand`1.ExecuteCommand*
  commentId: Overload:H.Mvvm.RelayCommand`1.ExecuteCommand
  href: H.Mvvm.RelayCommand-1.html#H_Mvvm_RelayCommand_1_ExecuteCommand
  name: ExecuteCommand
  nameWithType: RelayCommand<T>.ExecuteCommand
  fullName: H.Mvvm.RelayCommand<T>.ExecuteCommand
  nameWithType.vb: RelayCommand(Of T).ExecuteCommand
  fullName.vb: H.Mvvm.RelayCommand(Of T).ExecuteCommand
- uid: System.Action{{T}}
  commentId: T:System.Action{`0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: H.Mvvm.RelayCommand`1.CanExecuteCommand*
  commentId: Overload:H.Mvvm.RelayCommand`1.CanExecuteCommand
  href: H.Mvvm.RelayCommand-1.html#H_Mvvm_RelayCommand_1_CanExecuteCommand
  name: CanExecuteCommand
  nameWithType: RelayCommand<T>.CanExecuteCommand
  fullName: H.Mvvm.RelayCommand<T>.CanExecuteCommand
  nameWithType.vb: RelayCommand(Of T).CanExecuteCommand
  fullName.vb: H.Mvvm.RelayCommand(Of T).CanExecuteCommand
- uid: System.Predicate{{T}}
  commentId: T:System.Predicate{`0}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: H.Mvvm.RelayCommand`1.#ctor*
  commentId: Overload:H.Mvvm.RelayCommand`1.#ctor
  href: H.Mvvm.RelayCommand-1.html#H_Mvvm_RelayCommand_1__ctor_System_Action__0__System_Predicate__0__
  name: RelayCommand
  nameWithType: RelayCommand<T>.RelayCommand
  fullName: H.Mvvm.RelayCommand<T>.RelayCommand
  nameWithType.vb: RelayCommand(Of T).New
  fullName.vb: H.Mvvm.RelayCommand(Of T).New
  name.vb: New
- uid: H.Mvvm.RelayCommand`1.Execute*
  commentId: Overload:H.Mvvm.RelayCommand`1.Execute
  href: H.Mvvm.RelayCommand-1.html#H_Mvvm_RelayCommand_1_Execute_System_Object_
  name: Execute
  nameWithType: RelayCommand<T>.Execute
  fullName: H.Mvvm.RelayCommand<T>.Execute
  nameWithType.vb: RelayCommand(Of T).Execute
  fullName.vb: H.Mvvm.RelayCommand(Of T).Execute
- uid: System.Windows.Input.ICommand.Execute(System.Object)
  commentId: M:System.Windows.Input.ICommand.Execute(System.Object)
  parent: System.Windows.Input.ICommand
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.execute
  name: Execute(object)
  nameWithType: ICommand.Execute(object)
  fullName: System.Windows.Input.ICommand.Execute(object)
  nameWithType.vb: ICommand.Execute(Object)
  fullName.vb: System.Windows.Input.ICommand.Execute(Object)
  name.vb: Execute(Object)
  spec.csharp:
  - uid: System.Windows.Input.ICommand.Execute(System.Object)
    name: Execute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.execute
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Windows.Input.ICommand.Execute(System.Object)
    name: Execute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.execute
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: H.Mvvm.RelayCommand`1.CanExecute*
  commentId: Overload:H.Mvvm.RelayCommand`1.CanExecute
  href: H.Mvvm.RelayCommand-1.html#H_Mvvm_RelayCommand_1_CanExecute_System_Object_
  name: CanExecute
  nameWithType: RelayCommand<T>.CanExecute
  fullName: H.Mvvm.RelayCommand<T>.CanExecute
  nameWithType.vb: RelayCommand(Of T).CanExecute
  fullName.vb: H.Mvvm.RelayCommand(Of T).CanExecute
- uid: System.Windows.Input.ICommand.CanExecute(System.Object)
  commentId: M:System.Windows.Input.ICommand.CanExecute(System.Object)
  parent: System.Windows.Input.ICommand
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.canexecute
  name: CanExecute(object)
  nameWithType: ICommand.CanExecute(object)
  fullName: System.Windows.Input.ICommand.CanExecute(object)
  nameWithType.vb: ICommand.CanExecute(Object)
  fullName.vb: System.Windows.Input.ICommand.CanExecute(Object)
  name.vb: CanExecute(Object)
  spec.csharp:
  - uid: System.Windows.Input.ICommand.CanExecute(System.Object)
    name: CanExecute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.canexecute
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Windows.Input.ICommand.CanExecute(System.Object)
    name: CanExecute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.canexecute
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Windows.Input.ICommand.CanExecuteChanged
  commentId: E:System.Windows.Input.ICommand.CanExecuteChanged
  parent: System.Windows.Input.ICommand
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.canexecutechanged
  name: CanExecuteChanged
  nameWithType: ICommand.CanExecuteChanged
  fullName: System.Windows.Input.ICommand.CanExecuteChanged
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
