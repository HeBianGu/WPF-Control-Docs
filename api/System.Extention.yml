### YamlMime:ManagedReference
items:
- uid: System.Extention
  commentId: T:System.Extention
  id: Extention
  parent: System
  children:
  - System.Extention.AddAbout(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.About.IAboutViewPresenterOption})
  - System.Extention.AddAdornerDialogMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddAuthorityViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddAutoUpgrade(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Upgrade.UpgradeOptions})
  - System.Extention.AddDESCryptService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddFFMpeg(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.FFMpeg.FFMpegOption})
  - System.Extention.AddFormMessageService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddGuideService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Guide.GuideOptions})
  - System.Extention.AddIOFolderDialogService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddIOFolderDialogService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddLog4net(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.Revertible.Log4netOptions})
  - System.Extention.AddLoginService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddMail(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.Mail.SmtpSendOptions})
  - System.Extention.AddNewtonsoftJsonSerializerService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions})
  - System.Extention.AddNoticeMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddNpoiService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddOperationService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddOperationViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddProject(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Project.ProjectOptions})
  - System.Extention.AddProject``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Project.ProjectOptions})
  - System.Extention.AddRegisterService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Identity.IdentifyOptions})
  - System.Extention.AddRoleViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddSnackMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddTextJsonSerializerService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddTorrent(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddTypeLicense(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.TypeLicense.TypeLicenseOptions})
  - System.Extention.AddUserViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddWindowDialogMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddWindowMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.AddXmlMetaSettingService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - System.Extention.BuildIdentifySeed(Microsoft.EntityFrameworkCore.ModelBuilder)
  - System.Extention.UseAbout(System.IApplicationBuilder,System.Action{H.Modules.About.IAboutViewPresenterOption})
  - System.Extention.UseAddLog4netSetting(System.IApplicationBuilder,System.Action{H.Extensions.Revertible.Log4netOptions})
  - System.Extention.UseAdorner(System.IApplicationBuilder,System.Action{H.Controls.Adorner.AdornerSetting})
  - System.Extention.UseFFMpeg(System.IApplicationBuilder,System.Action{H.Extensions.FFMpeg.FFMpegOption})
  - System.Extention.UseGuideSetting(System.IApplicationBuilder,System.Action{H.Modules.Guide.IGuideOptions})
  - System.Extention.UseIdentify(System.IApplicationBuilder,System.Action{H.Modules.Identity.IdentifyOptions})
  - System.Extention.UseMail(System.IApplicationBuilder,System.Action{H.Extensions.Mail.SmtpSendOptions})
  - System.Extention.UseNewtonsoftJson(System.IApplicationBuilder,System.Action{H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions})
  - System.Extention.UseProject(System.IApplicationBuilder,System.Action{H.Modules.Project.ProjectOptions})
  - System.Extention.UseTypeLicense(System.IApplicationBuilder,System.Action{H.Extensions.TypeLicense.TypeLicenseOptions})
  - System.Extention.UseUpgrade(System.IApplicationBuilder,System.Action{H.Modules.Upgrade.UpgradeOptions})
  langs:
  - csharp
  - vb
  name: Extention
  nameWithType: Extention
  fullName: System.Extention
  type: Class
  source:
    id: Extention
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.About\Extention.cs
    startLine: 7
  assemblies:
  - H.Modules.About
  namespace: System
  syntax:
    content: public static class Extention
    content.vb: Public Module Extention
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Extention.AddAbout(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.About.IAboutViewPresenterOption})
  commentId: M:System.Extention.AddAbout(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.About.IAboutViewPresenterOption})
  id: AddAbout(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.About.IAboutViewPresenterOption})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddAbout(IServiceCollection, Action<IAboutViewPresenterOption>)
  nameWithType: Extention.AddAbout(IServiceCollection, Action<IAboutViewPresenterOption>)
  fullName: System.Extention.AddAbout(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<H.Modules.About.IAboutViewPresenterOption>)
  type: Method
  source:
    id: AddAbout
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.About\Extention.cs
    startLine: 13
  assemblies:
  - H.Modules.About
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static void AddAbout(this IServiceCollection service, Action<IAboutViewPresenterOption> action = null)
    parameters:
    - id: service
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    - id: action
      type: System.Action{H.Modules.About.IAboutViewPresenterOption}
    content.vb: Public Shared Sub AddAbout(service As IServiceCollection, action As Action(Of IAboutViewPresenterOption) = Nothing)
  overload: System.Extention.AddAbout*
  nameWithType.vb: Extention.AddAbout(IServiceCollection, Action(Of IAboutViewPresenterOption))
  fullName.vb: System.Extention.AddAbout(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of H.Modules.About.IAboutViewPresenterOption))
  name.vb: AddAbout(IServiceCollection, Action(Of IAboutViewPresenterOption))
- uid: System.Extention.UseAbout(System.IApplicationBuilder,System.Action{H.Modules.About.IAboutViewPresenterOption})
  commentId: M:System.Extention.UseAbout(System.IApplicationBuilder,System.Action{H.Modules.About.IAboutViewPresenterOption})
  id: UseAbout(System.IApplicationBuilder,System.Action{H.Modules.About.IAboutViewPresenterOption})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: UseAbout(IApplicationBuilder, Action<IAboutViewPresenterOption>)
  nameWithType: Extention.UseAbout(IApplicationBuilder, Action<IAboutViewPresenterOption>)
  fullName: System.Extention.UseAbout(System.IApplicationBuilder, System.Action<H.Modules.About.IAboutViewPresenterOption>)
  type: Method
  source:
    id: UseAbout
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.About\Extention.cs
    startLine: 22
  assemblies:
  - H.Modules.About
  namespace: System
  summary: 配置
  example: []
  syntax:
    content: >-
      [Obsolete]

      public static void UseAbout(this IApplicationBuilder service, Action<IAboutViewPresenterOption> action = null)
    parameters:
    - id: service
      type: System.IApplicationBuilder
      description: ''
    - id: action
      type: System.Action{H.Modules.About.IAboutViewPresenterOption}
    content.vb: >-
      <Obsolete>

      Public Shared Sub UseAbout(service As IApplicationBuilder, action As Action(Of IAboutViewPresenterOption) = Nothing)
  overload: System.Extention.UseAbout*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
  nameWithType.vb: Extention.UseAbout(IApplicationBuilder, Action(Of IAboutViewPresenterOption))
  fullName.vb: System.Extention.UseAbout(System.IApplicationBuilder, System.Action(Of H.Modules.About.IAboutViewPresenterOption))
  name.vb: UseAbout(IApplicationBuilder, Action(Of IAboutViewPresenterOption))
- uid: System.Extention.AddUserViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddUserViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddUserViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddUserViewPresenter(IServiceCollection)
  nameWithType: Extention.AddUserViewPresenter(IServiceCollection)
  fullName: System.Extention.AddUserViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddUserViewPresenter
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Identity\Extention.cs
    startLine: 18
  assemblies:
  - H.Modules.Identity
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static void AddUserViewPresenter(this IServiceCollection service)
    parameters:
    - id: service
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: Public Shared Sub AddUserViewPresenter(service As IServiceCollection)
  overload: System.Extention.AddUserViewPresenter*
- uid: System.Extention.AddLoginService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddLoginService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddLoginService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddLoginService(IServiceCollection)
  nameWithType: Extention.AddLoginService(IServiceCollection)
  fullName: System.Extention.AddLoginService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddLoginService
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Identity\Extention.cs
    startLine: 28
  assemblies:
  - H.Modules.Identity
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static void AddLoginService(this IServiceCollection service)
    parameters:
    - id: service
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: Public Shared Sub AddLoginService(service As IServiceCollection)
  overload: System.Extention.AddLoginService*
- uid: System.Extention.AddRegisterService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Identity.IdentifyOptions})
  commentId: M:System.Extention.AddRegisterService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Identity.IdentifyOptions})
  id: AddRegisterService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Identity.IdentifyOptions})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddRegisterService(IServiceCollection, Action<IdentifyOptions>)
  nameWithType: Extention.AddRegisterService(IServiceCollection, Action<IdentifyOptions>)
  fullName: System.Extention.AddRegisterService(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<H.Modules.Identity.IdentifyOptions>)
  type: Method
  source:
    id: AddRegisterService
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Identity\Extention.cs
    startLine: 33
  assemblies:
  - H.Modules.Identity
  namespace: System
  syntax:
    content: public static IServiceCollection AddRegisterService(this IServiceCollection services, Action<IdentifyOptions> setupAction = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: setupAction
      type: System.Action{H.Modules.Identity.IdentifyOptions}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddRegisterService(services As IServiceCollection, setupAction As Action(Of IdentifyOptions) = Nothing) As IServiceCollection
  overload: System.Extention.AddRegisterService*
  nameWithType.vb: Extention.AddRegisterService(IServiceCollection, Action(Of IdentifyOptions))
  fullName.vb: System.Extention.AddRegisterService(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of H.Modules.Identity.IdentifyOptions))
  name.vb: AddRegisterService(IServiceCollection, Action(Of IdentifyOptions))
- uid: System.Extention.AddRoleViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddRoleViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddRoleViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddRoleViewPresenter(IServiceCollection)
  nameWithType: Extention.AddRoleViewPresenter(IServiceCollection)
  fullName: System.Extention.AddRoleViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddRoleViewPresenter
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Identity\Extention.cs
    startLine: 46
  assemblies:
  - H.Modules.Identity
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static void AddRoleViewPresenter(this IServiceCollection service)
    parameters:
    - id: service
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: Public Shared Sub AddRoleViewPresenter(service As IServiceCollection)
  overload: System.Extention.AddRoleViewPresenter*
- uid: System.Extention.AddAuthorityViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddAuthorityViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddAuthorityViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddAuthorityViewPresenter(IServiceCollection)
  nameWithType: Extention.AddAuthorityViewPresenter(IServiceCollection)
  fullName: System.Extention.AddAuthorityViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddAuthorityViewPresenter
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Identity\Extention.cs
    startLine: 56
  assemblies:
  - H.Modules.Identity
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static void AddAuthorityViewPresenter(this IServiceCollection service)
    parameters:
    - id: service
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: Public Shared Sub AddAuthorityViewPresenter(service As IServiceCollection)
  overload: System.Extention.AddAuthorityViewPresenter*
- uid: System.Extention.UseIdentify(System.IApplicationBuilder,System.Action{H.Modules.Identity.IdentifyOptions})
  commentId: M:System.Extention.UseIdentify(System.IApplicationBuilder,System.Action{H.Modules.Identity.IdentifyOptions})
  id: UseIdentify(System.IApplicationBuilder,System.Action{H.Modules.Identity.IdentifyOptions})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: UseIdentify(IApplicationBuilder, Action<IdentifyOptions>)
  nameWithType: Extention.UseIdentify(IApplicationBuilder, Action<IdentifyOptions>)
  fullName: System.Extention.UseIdentify(System.IApplicationBuilder, System.Action<H.Modules.Identity.IdentifyOptions>)
  type: Method
  source:
    id: UseIdentify
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Identity\Extention.cs
    startLine: 62
  assemblies:
  - H.Modules.Identity
  namespace: System
  syntax:
    content: public static IApplicationBuilder UseIdentify(this IApplicationBuilder builder, Action<IdentifyOptions> option = null)
    parameters:
    - id: builder
      type: System.IApplicationBuilder
    - id: option
      type: System.Action{H.Modules.Identity.IdentifyOptions}
    return:
      type: System.IApplicationBuilder
    content.vb: Public Shared Function UseIdentify(builder As IApplicationBuilder, [option] As Action(Of IdentifyOptions) = Nothing) As IApplicationBuilder
  overload: System.Extention.UseIdentify*
  nameWithType.vb: Extention.UseIdentify(IApplicationBuilder, Action(Of IdentifyOptions))
  fullName.vb: System.Extention.UseIdentify(System.IApplicationBuilder, System.Action(Of H.Modules.Identity.IdentifyOptions))
  name.vb: UseIdentify(IApplicationBuilder, Action(Of IdentifyOptions))
- uid: System.Extention.BuildIdentifySeed(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:System.Extention.BuildIdentifySeed(Microsoft.EntityFrameworkCore.ModelBuilder)
  id: BuildIdentifySeed(Microsoft.EntityFrameworkCore.ModelBuilder)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: BuildIdentifySeed(ModelBuilder)
  nameWithType: Extention.BuildIdentifySeed(ModelBuilder)
  fullName: System.Extention.BuildIdentifySeed(Microsoft.EntityFrameworkCore.ModelBuilder)
  type: Method
  source:
    id: BuildIdentifySeed
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Identity\Extention.cs
    startLine: 69
  assemblies:
  - H.Modules.Identity
  namespace: System
  syntax:
    content: public static void BuildIdentifySeed(this ModelBuilder modelBuilder)
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.ModelBuilder
    content.vb: Public Shared Sub BuildIdentifySeed(modelBuilder As ModelBuilder)
  overload: System.Extention.BuildIdentifySeed*
- uid: System.Extention.AddOperationViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddOperationViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddOperationViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddOperationViewPresenter(IServiceCollection)
  nameWithType: Extention.AddOperationViewPresenter(IServiceCollection)
  fullName: System.Extention.AddOperationViewPresenter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddOperationViewPresenter
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Operation\Extention.cs
    startLine: 15
  assemblies:
  - H.Modules.Operation
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static void AddOperationViewPresenter(this IServiceCollection service)
    parameters:
    - id: service
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: Public Shared Sub AddOperationViewPresenter(service As IServiceCollection)
  overload: System.Extention.AddOperationViewPresenter*
- uid: System.Extention.AddOperationService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddOperationService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddOperationService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddOperationService(IServiceCollection)
  nameWithType: Extention.AddOperationService(IServiceCollection)
  fullName: System.Extention.AddOperationService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddOperationService
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Operation\Extention.cs
    startLine: 22
  assemblies:
  - H.Modules.Operation
  namespace: System
  syntax:
    content: public static void AddOperationService(this IServiceCollection service)
    parameters:
    - id: service
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Sub AddOperationService(service As IServiceCollection)
  overload: System.Extention.AddOperationService*
- uid: System.Extention.UseAdorner(System.IApplicationBuilder,System.Action{H.Controls.Adorner.AdornerSetting})
  commentId: M:System.Extention.UseAdorner(System.IApplicationBuilder,System.Action{H.Controls.Adorner.AdornerSetting})
  id: UseAdorner(System.IApplicationBuilder,System.Action{H.Controls.Adorner.AdornerSetting})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: UseAdorner(IApplicationBuilder, Action<AdornerSetting>)
  nameWithType: Extention.UseAdorner(IApplicationBuilder, Action<AdornerSetting>)
  fullName: System.Extention.UseAdorner(System.IApplicationBuilder, System.Action<H.Controls.Adorner.AdornerSetting>)
  type: Method
  source:
    id: UseAdorner
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Controls\H.Controls.Adorner\Extention.cs
    startLine: 14
  assemblies:
  - H.Controls.Adorner
  namespace: System
  summary: 配置
  example: []
  syntax:
    content: public static void UseAdorner(this IApplicationBuilder service, Action<AdornerSetting> action = null)
    parameters:
    - id: service
      type: System.IApplicationBuilder
      description: ''
    - id: action
      type: System.Action{H.Controls.Adorner.AdornerSetting}
    content.vb: Public Shared Sub UseAdorner(service As IApplicationBuilder, action As Action(Of AdornerSetting) = Nothing)
  overload: System.Extention.UseAdorner*
  nameWithType.vb: Extention.UseAdorner(IApplicationBuilder, Action(Of AdornerSetting))
  fullName.vb: System.Extention.UseAdorner(System.IApplicationBuilder, System.Action(Of H.Controls.Adorner.AdornerSetting))
  name.vb: UseAdorner(IApplicationBuilder, Action(Of AdornerSetting))
- uid: System.Extention.AddLog4net(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.Revertible.Log4netOptions})
  commentId: M:System.Extention.AddLog4net(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.Revertible.Log4netOptions})
  id: AddLog4net(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.Revertible.Log4netOptions})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddLog4net(IServiceCollection, Action<Log4netOptions>)
  nameWithType: Extention.AddLog4net(IServiceCollection, Action<Log4netOptions>)
  fullName: System.Extention.AddLog4net(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<H.Extensions.Revertible.Log4netOptions>)
  type: Method
  source:
    id: AddLog4net
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Log4net\Extention.cs
    startLine: 14
  assemblies:
  - H.Extensions.Log4net
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static IServiceCollection AddLog4net(this IServiceCollection services, Action<Log4netOptions> setupAction = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: setupAction
      type: System.Action{H.Extensions.Revertible.Log4netOptions}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddLog4net(services As IServiceCollection, setupAction As Action(Of Log4netOptions) = Nothing) As IServiceCollection
  overload: System.Extention.AddLog4net*
  nameWithType.vb: Extention.AddLog4net(IServiceCollection, Action(Of Log4netOptions))
  fullName.vb: System.Extention.AddLog4net(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of H.Extensions.Revertible.Log4netOptions))
  name.vb: AddLog4net(IServiceCollection, Action(Of Log4netOptions))
- uid: System.Extention.UseAddLog4netSetting(System.IApplicationBuilder,System.Action{H.Extensions.Revertible.Log4netOptions})
  commentId: M:System.Extention.UseAddLog4netSetting(System.IApplicationBuilder,System.Action{H.Extensions.Revertible.Log4netOptions})
  id: UseAddLog4netSetting(System.IApplicationBuilder,System.Action{H.Extensions.Revertible.Log4netOptions})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: UseAddLog4netSetting(IApplicationBuilder, Action<Log4netOptions>)
  nameWithType: Extention.UseAddLog4netSetting(IApplicationBuilder, Action<Log4netOptions>)
  fullName: System.Extention.UseAddLog4netSetting(System.IApplicationBuilder, System.Action<H.Extensions.Revertible.Log4netOptions>)
  type: Method
  source:
    id: UseAddLog4netSetting
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Log4net\Extention.cs
    startLine: 23
  assemblies:
  - H.Extensions.Log4net
  namespace: System
  syntax:
    content: public static IApplicationBuilder UseAddLog4netSetting(this IApplicationBuilder builder, Action<Log4netOptions> option = null)
    parameters:
    - id: builder
      type: System.IApplicationBuilder
    - id: option
      type: System.Action{H.Extensions.Revertible.Log4netOptions}
    return:
      type: System.IApplicationBuilder
    content.vb: Public Shared Function UseAddLog4netSetting(builder As IApplicationBuilder, [option] As Action(Of Log4netOptions) = Nothing) As IApplicationBuilder
  overload: System.Extention.UseAddLog4netSetting*
  nameWithType.vb: Extention.UseAddLog4netSetting(IApplicationBuilder, Action(Of Log4netOptions))
  fullName.vb: System.Extention.UseAddLog4netSetting(System.IApplicationBuilder, System.Action(Of H.Extensions.Revertible.Log4netOptions))
  name.vb: UseAddLog4netSetting(IApplicationBuilder, Action(Of Log4netOptions))
- uid: System.Extention.AddAutoUpgrade(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Upgrade.UpgradeOptions})
  commentId: M:System.Extention.AddAutoUpgrade(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Upgrade.UpgradeOptions})
  id: AddAutoUpgrade(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Upgrade.UpgradeOptions})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddAutoUpgrade(IServiceCollection, Action<UpgradeOptions>)
  nameWithType: Extention.AddAutoUpgrade(IServiceCollection, Action<UpgradeOptions>)
  fullName: System.Extention.AddAutoUpgrade(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<H.Modules.Upgrade.UpgradeOptions>)
  type: Method
  source:
    id: AddAutoUpgrade
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Upgrade\Extention.cs
    startLine: 16
  assemblies:
  - H.Modules.Upgrade
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static void AddAutoUpgrade(this IServiceCollection services, Action<UpgradeOptions> setupAction = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: setupAction
      type: System.Action{H.Modules.Upgrade.UpgradeOptions}
    content.vb: Public Shared Sub AddAutoUpgrade(services As IServiceCollection, setupAction As Action(Of UpgradeOptions) = Nothing)
  overload: System.Extention.AddAutoUpgrade*
  nameWithType.vb: Extention.AddAutoUpgrade(IServiceCollection, Action(Of UpgradeOptions))
  fullName.vb: System.Extention.AddAutoUpgrade(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of H.Modules.Upgrade.UpgradeOptions))
  name.vb: AddAutoUpgrade(IServiceCollection, Action(Of UpgradeOptions))
- uid: System.Extention.UseUpgrade(System.IApplicationBuilder,System.Action{H.Modules.Upgrade.UpgradeOptions})
  commentId: M:System.Extention.UseUpgrade(System.IApplicationBuilder,System.Action{H.Modules.Upgrade.UpgradeOptions})
  id: UseUpgrade(System.IApplicationBuilder,System.Action{H.Modules.Upgrade.UpgradeOptions})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: UseUpgrade(IApplicationBuilder, Action<UpgradeOptions>)
  nameWithType: Extention.UseUpgrade(IApplicationBuilder, Action<UpgradeOptions>)
  fullName: System.Extention.UseUpgrade(System.IApplicationBuilder, System.Action<H.Modules.Upgrade.UpgradeOptions>)
  type: Method
  source:
    id: UseUpgrade
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Upgrade\Extention.cs
    startLine: 31
  assemblies:
  - H.Modules.Upgrade
  namespace: System
  summary: 配置
  example: []
  syntax:
    content: public static void UseUpgrade(this IApplicationBuilder service, Action<UpgradeOptions> action = null)
    parameters:
    - id: service
      type: System.IApplicationBuilder
      description: ''
    - id: action
      type: System.Action{H.Modules.Upgrade.UpgradeOptions}
    content.vb: Public Shared Sub UseUpgrade(service As IApplicationBuilder, action As Action(Of UpgradeOptions) = Nothing)
  overload: System.Extention.UseUpgrade*
  nameWithType.vb: Extention.UseUpgrade(IApplicationBuilder, Action(Of UpgradeOptions))
  fullName.vb: System.Extention.UseUpgrade(System.IApplicationBuilder, System.Action(Of H.Modules.Upgrade.UpgradeOptions))
  name.vb: UseUpgrade(IApplicationBuilder, Action(Of UpgradeOptions))
- uid: System.Extention.AddWindowDialogMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddWindowDialogMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddWindowDialogMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddWindowDialogMessage(IServiceCollection)
  nameWithType: Extention.AddWindowDialogMessage(IServiceCollection)
  fullName: System.Extention.AddWindowDialogMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddWindowDialogMessage
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Messages.Dialog\Extention.cs
    startLine: 12
  assemblies:
  - H.Modules.Messages.Dialog
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static void AddWindowDialogMessage(this IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Sub AddWindowDialogMessage(services As IServiceCollection)
  overload: System.Extention.AddWindowDialogMessage*
- uid: System.Extention.AddAdornerDialogMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddAdornerDialogMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddAdornerDialogMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddAdornerDialogMessage(IServiceCollection)
  nameWithType: Extention.AddAdornerDialogMessage(IServiceCollection)
  fullName: System.Extention.AddAdornerDialogMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddAdornerDialogMessage
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Messages.Dialog\Extention.cs
    startLine: 21
  assemblies:
  - H.Modules.Messages.Dialog
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static void AddAdornerDialogMessage(this IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Sub AddAdornerDialogMessage(services As IServiceCollection)
  overload: System.Extention.AddAdornerDialogMessage*
- uid: System.Extention.AddWindowMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddWindowMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddWindowMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddWindowMessage(IServiceCollection)
  nameWithType: Extention.AddWindowMessage(IServiceCollection)
  fullName: System.Extention.AddWindowMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddWindowMessage
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Messages.Dialog\Extention.cs
    startLine: 30
  assemblies:
  - H.Modules.Messages.Dialog
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static void AddWindowMessage(this IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Sub AddWindowMessage(services As IServiceCollection)
  overload: System.Extention.AddWindowMessage*
- uid: System.Extention.AddNoticeMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddNoticeMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddNoticeMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddNoticeMessage(IServiceCollection)
  nameWithType: Extention.AddNoticeMessage(IServiceCollection)
  fullName: System.Extention.AddNoticeMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddNoticeMessage
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Messages.Notice\Extention.cs
    startLine: 12
  assemblies:
  - H.Modules.Messages.Notice
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static void AddNoticeMessage(this IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Sub AddNoticeMessage(services As IServiceCollection)
  overload: System.Extention.AddNoticeMessage*
- uid: System.Extention.AddFormMessageService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddFormMessageService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddFormMessageService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddFormMessageService(IServiceCollection)
  nameWithType: Extention.AddFormMessageService(IServiceCollection)
  fullName: System.Extention.AddFormMessageService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddFormMessageService
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Messages.Form\Extention.cs
    startLine: 12
  assemblies:
  - H.Modules.Messages.Form
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static void AddFormMessageService(this IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Sub AddFormMessageService(services As IServiceCollection)
  overload: System.Extention.AddFormMessageService*
- uid: System.Extention.AddSnackMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddSnackMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddSnackMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddSnackMessage(IServiceCollection)
  nameWithType: Extention.AddSnackMessage(IServiceCollection)
  fullName: System.Extention.AddSnackMessage(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddSnackMessage
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Messages.Snack\Extention.cs
    startLine: 13
  assemblies:
  - H.Modules.Messages.Snack
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static void AddSnackMessage(this IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Sub AddSnackMessage(services As IServiceCollection)
  overload: System.Extention.AddSnackMessage*
- uid: System.Extention.AddGuideService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Guide.GuideOptions})
  commentId: M:System.Extention.AddGuideService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Guide.GuideOptions})
  id: AddGuideService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Guide.GuideOptions})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddGuideService(IServiceCollection, Action<GuideOptions>)
  nameWithType: Extention.AddGuideService(IServiceCollection, Action<GuideOptions>)
  fullName: System.Extention.AddGuideService(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<H.Modules.Guide.GuideOptions>)
  type: Method
  source:
    id: AddGuideService
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Guide\Extention.cs
    startLine: 16
  assemblies:
  - H.Modules.Guide
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static IServiceCollection AddGuideService(this IServiceCollection services, Action<GuideOptions> setupAction = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: setupAction
      type: System.Action{H.Modules.Guide.GuideOptions}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddGuideService(services As IServiceCollection, setupAction As Action(Of GuideOptions) = Nothing) As IServiceCollection
  overload: System.Extention.AddGuideService*
  nameWithType.vb: Extention.AddGuideService(IServiceCollection, Action(Of GuideOptions))
  fullName.vb: System.Extention.AddGuideService(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of H.Modules.Guide.GuideOptions))
  name.vb: AddGuideService(IServiceCollection, Action(Of GuideOptions))
- uid: System.Extention.UseGuideSetting(System.IApplicationBuilder,System.Action{H.Modules.Guide.IGuideOptions})
  commentId: M:System.Extention.UseGuideSetting(System.IApplicationBuilder,System.Action{H.Modules.Guide.IGuideOptions})
  id: UseGuideSetting(System.IApplicationBuilder,System.Action{H.Modules.Guide.IGuideOptions})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: UseGuideSetting(IApplicationBuilder, Action<IGuideOptions>)
  nameWithType: Extention.UseGuideSetting(IApplicationBuilder, Action<IGuideOptions>)
  fullName: System.Extention.UseGuideSetting(System.IApplicationBuilder, System.Action<H.Modules.Guide.IGuideOptions>)
  type: Method
  source:
    id: UseGuideSetting
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Guide\Extention.cs
    startLine: 25
  assemblies:
  - H.Modules.Guide
  namespace: System
  syntax:
    content: public static void UseGuideSetting(this IApplicationBuilder service, Action<IGuideOptions> action = null)
    parameters:
    - id: service
      type: System.IApplicationBuilder
    - id: action
      type: System.Action{H.Modules.Guide.IGuideOptions}
    content.vb: Public Shared Sub UseGuideSetting(service As IApplicationBuilder, action As Action(Of IGuideOptions) = Nothing)
  overload: System.Extention.UseGuideSetting*
  nameWithType.vb: Extention.UseGuideSetting(IApplicationBuilder, Action(Of IGuideOptions))
  fullName.vb: System.Extention.UseGuideSetting(System.IApplicationBuilder, System.Action(Of H.Modules.Guide.IGuideOptions))
  name.vb: UseGuideSetting(IApplicationBuilder, Action(Of IGuideOptions))
- uid: System.Extention.AddXmlMetaSettingService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddXmlMetaSettingService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddXmlMetaSettingService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddXmlMetaSettingService(IServiceCollection)
  nameWithType: Extention.AddXmlMetaSettingService(IServiceCollection)
  fullName: System.Extention.AddXmlMetaSettingService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddXmlMetaSettingService
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.XmlSerialize\Extention.cs
    startLine: 15
  assemblies:
  - H.Extensions.XmlSerialize
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static void AddXmlMetaSettingService(this IServiceCollection service)
    parameters:
    - id: service
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: Public Shared Sub AddXmlMetaSettingService(service As IServiceCollection)
  overload: System.Extention.AddXmlMetaSettingService*
- uid: System.Extention.AddNpoiService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddNpoiService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddNpoiService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddNpoiService(IServiceCollection)
  nameWithType: Extention.AddNpoiService(IServiceCollection)
  fullName: System.Extention.AddNpoiService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddNpoiService
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Excel\Extention.cs
    startLine: 15
  assemblies:
  - H.Extensions.Excel
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static void AddNpoiService(this IServiceCollection service)
    parameters:
    - id: service
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: Public Shared Sub AddNpoiService(service As IServiceCollection)
  overload: System.Extention.AddNpoiService*
- uid: System.Extention.AddDESCryptService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddDESCryptService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddDESCryptService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddDESCryptService(IServiceCollection)
  nameWithType: Extention.AddDESCryptService(IServiceCollection)
  fullName: System.Extention.AddDESCryptService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddDESCryptService
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Encryption\Extention.cs
    startLine: 14
  assemblies:
  - H.Extensions.Encryption
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static void AddDESCryptService(this IServiceCollection service)
    parameters:
    - id: service
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: Public Shared Sub AddDESCryptService(service As IServiceCollection)
  overload: System.Extention.AddDESCryptService*
- uid: System.Extention.AddProject(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Project.ProjectOptions})
  commentId: M:System.Extention.AddProject(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Project.ProjectOptions})
  id: AddProject(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Project.ProjectOptions})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddProject(IServiceCollection, Action<ProjectOptions>)
  nameWithType: Extention.AddProject(IServiceCollection, Action<ProjectOptions>)
  fullName: System.Extention.AddProject(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<H.Modules.Project.ProjectOptions>)
  type: Method
  source:
    id: AddProject
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Project\Extention.cs
    startLine: 14
  assemblies:
  - H.Modules.Project
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static IServiceCollection AddProject(this IServiceCollection services, Action<ProjectOptions> setupAction = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: setupAction
      type: System.Action{H.Modules.Project.ProjectOptions}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddProject(services As IServiceCollection, setupAction As Action(Of ProjectOptions) = Nothing) As IServiceCollection
  overload: System.Extention.AddProject*
  nameWithType.vb: Extention.AddProject(IServiceCollection, Action(Of ProjectOptions))
  fullName.vb: System.Extention.AddProject(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of H.Modules.Project.ProjectOptions))
  name.vb: AddProject(IServiceCollection, Action(Of ProjectOptions))
- uid: System.Extention.AddProject``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Project.ProjectOptions})
  commentId: M:System.Extention.AddProject``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Project.ProjectOptions})
  id: AddProject``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Modules.Project.ProjectOptions})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddProject<T>(IServiceCollection, Action<ProjectOptions>)
  nameWithType: Extention.AddProject<T>(IServiceCollection, Action<ProjectOptions>)
  fullName: System.Extention.AddProject<T>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<H.Modules.Project.ProjectOptions>)
  type: Method
  source:
    id: AddProject
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Project\Extention.cs
    startLine: 23
  assemblies:
  - H.Modules.Project
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: 'public static IServiceCollection AddProject<T>(this IServiceCollection services, Action<ProjectOptions> setupAction = null) where T : class, IProjectService'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: setupAction
      type: System.Action{H.Modules.Project.ProjectOptions}
    typeParameters:
    - id: T
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddProject(Of T As {Class, IProjectService})(services As IServiceCollection, setupAction As Action(Of ProjectOptions) = Nothing) As IServiceCollection
  overload: System.Extention.AddProject*
  nameWithType.vb: Extention.AddProject(Of T)(IServiceCollection, Action(Of ProjectOptions))
  fullName.vb: System.Extention.AddProject(Of T)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of H.Modules.Project.ProjectOptions))
  name.vb: AddProject(Of T)(IServiceCollection, Action(Of ProjectOptions))
- uid: System.Extention.UseProject(System.IApplicationBuilder,System.Action{H.Modules.Project.ProjectOptions})
  commentId: M:System.Extention.UseProject(System.IApplicationBuilder,System.Action{H.Modules.Project.ProjectOptions})
  id: UseProject(System.IApplicationBuilder,System.Action{H.Modules.Project.ProjectOptions})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: UseProject(IApplicationBuilder, Action<ProjectOptions>)
  nameWithType: Extention.UseProject(IApplicationBuilder, Action<ProjectOptions>)
  fullName: System.Extention.UseProject(System.IApplicationBuilder, System.Action<H.Modules.Project.ProjectOptions>)
  type: Method
  source:
    id: UseProject
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Modules\H.Modules.Project\Extention.cs
    startLine: 40
  assemblies:
  - H.Modules.Project
  namespace: System
  summary: 配置
  example: []
  syntax:
    content: public static IApplicationBuilder UseProject(this IApplicationBuilder builder, Action<ProjectOptions> option = null)
    parameters:
    - id: builder
      type: System.IApplicationBuilder
    - id: option
      type: System.Action{H.Modules.Project.ProjectOptions}
    return:
      type: System.IApplicationBuilder
    content.vb: Public Shared Function UseProject(builder As IApplicationBuilder, [option] As Action(Of ProjectOptions) = Nothing) As IApplicationBuilder
  overload: System.Extention.UseProject*
  nameWithType.vb: Extention.UseProject(IApplicationBuilder, Action(Of ProjectOptions))
  fullName.vb: System.Extention.UseProject(System.IApplicationBuilder, System.Action(Of H.Modules.Project.ProjectOptions))
  name.vb: UseProject(IApplicationBuilder, Action(Of ProjectOptions))
- uid: System.Extention.AddTorrent(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddTorrent(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddTorrent(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddTorrent(IServiceCollection)
  nameWithType: Extention.AddTorrent(IServiceCollection)
  fullName: System.Extention.AddTorrent(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddTorrent
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Torrent\Extention.cs
    startLine: 11
  assemblies:
  - H.Extensions.Torrent
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static void AddTorrent(this IServiceCollection service)
    parameters:
    - id: service
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: Public Shared Sub AddTorrent(service As IServiceCollection)
  overload: System.Extention.AddTorrent*
- uid: System.Extention.AddFFMpeg(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.FFMpeg.FFMpegOption})
  commentId: M:System.Extention.AddFFMpeg(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.FFMpeg.FFMpegOption})
  id: AddFFMpeg(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.FFMpeg.FFMpegOption})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddFFMpeg(IServiceCollection, Action<FFMpegOption>)
  nameWithType: Extention.AddFFMpeg(IServiceCollection, Action<FFMpegOption>)
  fullName: System.Extention.AddFFMpeg(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<H.Extensions.FFMpeg.FFMpegOption>)
  type: Method
  source:
    id: AddFFMpeg
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.FFMpeg\Extention.cs
    startLine: 11
  assemblies:
  - H.Extensions.FFMpeg
  namespace: System
  syntax:
    content: public static IServiceCollection AddFFMpeg(this IServiceCollection services, Action<FFMpegOption> setupAction = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: setupAction
      type: System.Action{H.Extensions.FFMpeg.FFMpegOption}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddFFMpeg(services As IServiceCollection, setupAction As Action(Of FFMpegOption) = Nothing) As IServiceCollection
  overload: System.Extention.AddFFMpeg*
  nameWithType.vb: Extention.AddFFMpeg(IServiceCollection, Action(Of FFMpegOption))
  fullName.vb: System.Extention.AddFFMpeg(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of H.Extensions.FFMpeg.FFMpegOption))
  name.vb: AddFFMpeg(IServiceCollection, Action(Of FFMpegOption))
- uid: System.Extention.UseFFMpeg(System.IApplicationBuilder,System.Action{H.Extensions.FFMpeg.FFMpegOption})
  commentId: M:System.Extention.UseFFMpeg(System.IApplicationBuilder,System.Action{H.Extensions.FFMpeg.FFMpegOption})
  id: UseFFMpeg(System.IApplicationBuilder,System.Action{H.Extensions.FFMpeg.FFMpegOption})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: UseFFMpeg(IApplicationBuilder, Action<FFMpegOption>)
  nameWithType: Extention.UseFFMpeg(IApplicationBuilder, Action<FFMpegOption>)
  fullName: System.Extention.UseFFMpeg(System.IApplicationBuilder, System.Action<H.Extensions.FFMpeg.FFMpegOption>)
  type: Method
  source:
    id: UseFFMpeg
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.FFMpeg\Extention.cs
    startLine: 20
  assemblies:
  - H.Extensions.FFMpeg
  namespace: System
  syntax:
    content: public static void UseFFMpeg(this IApplicationBuilder builder, Action<FFMpegOption> action = null)
    parameters:
    - id: builder
      type: System.IApplicationBuilder
    - id: action
      type: System.Action{H.Extensions.FFMpeg.FFMpegOption}
    content.vb: Public Shared Sub UseFFMpeg(builder As IApplicationBuilder, action As Action(Of FFMpegOption) = Nothing)
  overload: System.Extention.UseFFMpeg*
  nameWithType.vb: Extention.UseFFMpeg(IApplicationBuilder, Action(Of FFMpegOption))
  fullName.vb: System.Extention.UseFFMpeg(System.IApplicationBuilder, System.Action(Of H.Extensions.FFMpeg.FFMpegOption))
  name.vb: UseFFMpeg(IApplicationBuilder, Action(Of FFMpegOption))
- uid: System.Extention.AddMail(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.Mail.SmtpSendOptions})
  commentId: M:System.Extention.AddMail(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.Mail.SmtpSendOptions})
  id: AddMail(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.Mail.SmtpSendOptions})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddMail(IServiceCollection, Action<SmtpSendOptions>)
  nameWithType: Extention.AddMail(IServiceCollection, Action<SmtpSendOptions>)
  fullName: System.Extention.AddMail(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<H.Extensions.Mail.SmtpSendOptions>)
  type: Method
  source:
    id: AddMail
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Mail\Extention.cs
    startLine: 15
  assemblies:
  - H.Extensions.Mail
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static IServiceCollection AddMail(this IServiceCollection services, Action<SmtpSendOptions> setupAction = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: setupAction
      type: System.Action{H.Extensions.Mail.SmtpSendOptions}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddMail(services As IServiceCollection, setupAction As Action(Of SmtpSendOptions) = Nothing) As IServiceCollection
  overload: System.Extention.AddMail*
  nameWithType.vb: Extention.AddMail(IServiceCollection, Action(Of SmtpSendOptions))
  fullName.vb: System.Extention.AddMail(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of H.Extensions.Mail.SmtpSendOptions))
  name.vb: AddMail(IServiceCollection, Action(Of SmtpSendOptions))
- uid: System.Extention.UseMail(System.IApplicationBuilder,System.Action{H.Extensions.Mail.SmtpSendOptions})
  commentId: M:System.Extention.UseMail(System.IApplicationBuilder,System.Action{H.Extensions.Mail.SmtpSendOptions})
  id: UseMail(System.IApplicationBuilder,System.Action{H.Extensions.Mail.SmtpSendOptions})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: UseMail(IApplicationBuilder, Action<SmtpSendOptions>)
  nameWithType: Extention.UseMail(IApplicationBuilder, Action<SmtpSendOptions>)
  fullName: System.Extention.UseMail(System.IApplicationBuilder, System.Action<H.Extensions.Mail.SmtpSendOptions>)
  type: Method
  source:
    id: UseMail
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Mail\Extention.cs
    startLine: 25
  assemblies:
  - H.Extensions.Mail
  namespace: System
  syntax:
    content: public static IApplicationBuilder UseMail(this IApplicationBuilder builder, Action<SmtpSendOptions> option = null)
    parameters:
    - id: builder
      type: System.IApplicationBuilder
    - id: option
      type: System.Action{H.Extensions.Mail.SmtpSendOptions}
    return:
      type: System.IApplicationBuilder
    content.vb: Public Shared Function UseMail(builder As IApplicationBuilder, [option] As Action(Of SmtpSendOptions) = Nothing) As IApplicationBuilder
  overload: System.Extention.UseMail*
  nameWithType.vb: Extention.UseMail(IApplicationBuilder, Action(Of SmtpSendOptions))
  fullName.vb: System.Extention.UseMail(System.IApplicationBuilder, System.Action(Of H.Extensions.Mail.SmtpSendOptions))
  name.vb: UseMail(IApplicationBuilder, Action(Of SmtpSendOptions))
- uid: System.Extention.AddTextJsonSerializerService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddTextJsonSerializerService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddTextJsonSerializerService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddTextJsonSerializerService(IServiceCollection)
  nameWithType: Extention.AddTextJsonSerializerService(IServiceCollection)
  fullName: System.Extention.AddTextJsonSerializerService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddTextJsonSerializerService
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Services\H.Services.Serializable\Serialize\Extention.cs
    startLine: 14
  assemblies:
  - H.Services.Serializable
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static IServiceCollection AddTextJsonSerializerService(this IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddTextJsonSerializerService(services As IServiceCollection) As IServiceCollection
  overload: System.Extention.AddTextJsonSerializerService*
- uid: System.Extention.AddTypeLicense(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.TypeLicense.TypeLicenseOptions})
  commentId: M:System.Extention.AddTypeLicense(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.TypeLicense.TypeLicenseOptions})
  id: AddTypeLicense(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.TypeLicense.TypeLicenseOptions})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddTypeLicense(IServiceCollection, Action<TypeLicenseOptions>)
  nameWithType: Extention.AddTypeLicense(IServiceCollection, Action<TypeLicenseOptions>)
  fullName: System.Extention.AddTypeLicense(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<H.Extensions.TypeLicense.TypeLicenseOptions>)
  type: Method
  source:
    id: AddTypeLicense
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.TypeLicense\Extention.cs
    startLine: 14
  assemblies:
  - H.Extensions.TypeLicense
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static IServiceCollection AddTypeLicense(this IServiceCollection services, Action<TypeLicenseOptions> setupAction = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: setupAction
      type: System.Action{H.Extensions.TypeLicense.TypeLicenseOptions}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddTypeLicense(services As IServiceCollection, setupAction As Action(Of TypeLicenseOptions) = Nothing) As IServiceCollection
  overload: System.Extention.AddTypeLicense*
  nameWithType.vb: Extention.AddTypeLicense(IServiceCollection, Action(Of TypeLicenseOptions))
  fullName.vb: System.Extention.AddTypeLicense(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of H.Extensions.TypeLicense.TypeLicenseOptions))
  name.vb: AddTypeLicense(IServiceCollection, Action(Of TypeLicenseOptions))
- uid: System.Extention.UseTypeLicense(System.IApplicationBuilder,System.Action{H.Extensions.TypeLicense.TypeLicenseOptions})
  commentId: M:System.Extention.UseTypeLicense(System.IApplicationBuilder,System.Action{H.Extensions.TypeLicense.TypeLicenseOptions})
  id: UseTypeLicense(System.IApplicationBuilder,System.Action{H.Extensions.TypeLicense.TypeLicenseOptions})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: UseTypeLicense(IApplicationBuilder, Action<TypeLicenseOptions>)
  nameWithType: Extention.UseTypeLicense(IApplicationBuilder, Action<TypeLicenseOptions>)
  fullName: System.Extention.UseTypeLicense(System.IApplicationBuilder, System.Action<H.Extensions.TypeLicense.TypeLicenseOptions>)
  type: Method
  source:
    id: UseTypeLicense
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.TypeLicense\Extention.cs
    startLine: 23
  assemblies:
  - H.Extensions.TypeLicense
  namespace: System
  syntax:
    content: public static IApplicationBuilder UseTypeLicense(this IApplicationBuilder builder, Action<TypeLicenseOptions> option = null)
    parameters:
    - id: builder
      type: System.IApplicationBuilder
    - id: option
      type: System.Action{H.Extensions.TypeLicense.TypeLicenseOptions}
    return:
      type: System.IApplicationBuilder
    content.vb: Public Shared Function UseTypeLicense(builder As IApplicationBuilder, [option] As Action(Of TypeLicenseOptions) = Nothing) As IApplicationBuilder
  overload: System.Extention.UseTypeLicense*
  nameWithType.vb: Extention.UseTypeLicense(IApplicationBuilder, Action(Of TypeLicenseOptions))
  fullName.vb: System.Extention.UseTypeLicense(System.IApplicationBuilder, System.Action(Of H.Extensions.TypeLicense.TypeLicenseOptions))
  name.vb: UseTypeLicense(IApplicationBuilder, Action(Of TypeLicenseOptions))
- uid: System.Extention.AddNewtonsoftJsonSerializerService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions})
  commentId: M:System.Extention.AddNewtonsoftJsonSerializerService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions})
  id: AddNewtonsoftJsonSerializerService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddNewtonsoftJsonSerializerService(IServiceCollection, Action<NewtonsoftJsonOptions>)
  nameWithType: Extention.AddNewtonsoftJsonSerializerService(IServiceCollection, Action<NewtonsoftJsonOptions>)
  fullName: System.Extention.AddNewtonsoftJsonSerializerService(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions>)
  type: Method
  source:
    id: AddNewtonsoftJsonSerializerService
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.NewtonsoftJson\Extention.cs
    startLine: 15
  assemblies:
  - H.Extensions.NewtonsoftJson
  namespace: System
  summary: 注册
  example: []
  syntax:
    content: public static IServiceCollection AddNewtonsoftJsonSerializerService(this IServiceCollection services, Action<NewtonsoftJsonOptions> setupAction = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: setupAction
      type: System.Action{H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddNewtonsoftJsonSerializerService(services As IServiceCollection, setupAction As Action(Of NewtonsoftJsonOptions) = Nothing) As IServiceCollection
  overload: System.Extention.AddNewtonsoftJsonSerializerService*
  nameWithType.vb: Extention.AddNewtonsoftJsonSerializerService(IServiceCollection, Action(Of NewtonsoftJsonOptions))
  fullName.vb: System.Extention.AddNewtonsoftJsonSerializerService(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions))
  name.vb: AddNewtonsoftJsonSerializerService(IServiceCollection, Action(Of NewtonsoftJsonOptions))
- uid: System.Extention.UseNewtonsoftJson(System.IApplicationBuilder,System.Action{H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions})
  commentId: M:System.Extention.UseNewtonsoftJson(System.IApplicationBuilder,System.Action{H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions})
  id: UseNewtonsoftJson(System.IApplicationBuilder,System.Action{H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions})
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: UseNewtonsoftJson(IApplicationBuilder, Action<NewtonsoftJsonOptions>)
  nameWithType: Extention.UseNewtonsoftJson(IApplicationBuilder, Action<NewtonsoftJsonOptions>)
  fullName: System.Extention.UseNewtonsoftJson(System.IApplicationBuilder, System.Action<H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions>)
  type: Method
  source:
    id: UseNewtonsoftJson
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.NewtonsoftJson\Extention.cs
    startLine: 24
  assemblies:
  - H.Extensions.NewtonsoftJson
  namespace: System
  syntax:
    content: >-
      [Obsolete("目前没什么用")]

      public static IApplicationBuilder UseNewtonsoftJson(this IApplicationBuilder builder, Action<NewtonsoftJsonOptions> option = null)
    parameters:
    - id: builder
      type: System.IApplicationBuilder
    - id: option
      type: System.Action{H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions}
    return:
      type: System.IApplicationBuilder
    content.vb: >-
      <Obsolete("目前没什么用")>

      Public Shared Function UseNewtonsoftJson(builder As IApplicationBuilder, [option] As Action(Of NewtonsoftJsonOptions) = Nothing) As IApplicationBuilder
  overload: System.Extention.UseNewtonsoftJson*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 目前没什么用
  nameWithType.vb: Extention.UseNewtonsoftJson(IApplicationBuilder, Action(Of NewtonsoftJsonOptions))
  fullName.vb: System.Extention.UseNewtonsoftJson(System.IApplicationBuilder, System.Action(Of H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions))
  name.vb: UseNewtonsoftJson(IApplicationBuilder, Action(Of NewtonsoftJsonOptions))
- uid: System.Extention.AddIOFolderDialogService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddIOFolderDialogService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddIOFolderDialogService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddIOFolderDialogService(IServiceCollection)
  nameWithType: Extention.AddIOFolderDialogService(IServiceCollection)
  fullName: System.Extention.AddIOFolderDialogService(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddIOFolderDialogService
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.OpenFolderDialog\Extention.cs
    startLine: 10
  assemblies:
  - H.Extensions.OpenFolderDialog
  namespace: System
  syntax:
    content: public static IServiceCollection AddIOFolderDialogService(this IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddIOFolderDialogService(services As IServiceCollection) As IServiceCollection
  overload: System.Extention.AddIOFolderDialogService*
- uid: System.Extention.AddIOFolderDialogService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:System.Extention.AddIOFolderDialogService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddIOFolderDialogService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: System.Extention
  langs:
  - csharp
  - vb
  name: AddIOFolderDialogService<T>(IServiceCollection)
  nameWithType: Extention.AddIOFolderDialogService<T>(IServiceCollection)
  fullName: System.Extention.AddIOFolderDialogService<T>(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    id: AddIOFolderDialogService
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.OpenFolderDialog\Extention.cs
    startLine: 15
  assemblies:
  - H.Extensions.OpenFolderDialog
  namespace: System
  syntax:
    content: 'public static IServiceCollection AddIOFolderDialogService<T>(this IServiceCollection services) where T : class, IIOFolderDialogService'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    typeParameters:
    - id: T
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddIOFolderDialogService(Of T As {Class, IIOFolderDialogService})(services As IServiceCollection) As IServiceCollection
  overload: System.Extention.AddIOFolderDialogService*
  nameWithType.vb: Extention.AddIOFolderDialogService(Of T)(IServiceCollection)
  fullName.vb: System.Extention.AddIOFolderDialogService(Of T)(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: AddIOFolderDialogService(Of T)(IServiceCollection)
references:
- uid: System
  commentId: N:System
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Extention.AddAbout*
  commentId: Overload:System.Extention.AddAbout
  href: System.Extention.html#System_Extention_AddAbout_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Action_H_Modules_About_IAboutViewPresenterOption__
  name: AddAbout
  nameWithType: Extention.AddAbout
  fullName: System.Extention.AddAbout
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: System.Action{H.Modules.About.IAboutViewPresenterOption}
  commentId: T:System.Action{H.Modules.About.IAboutViewPresenterOption}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IAboutViewPresenterOption>
  nameWithType: Action<IAboutViewPresenterOption>
  fullName: System.Action<H.Modules.About.IAboutViewPresenterOption>
  nameWithType.vb: Action(Of IAboutViewPresenterOption)
  fullName.vb: System.Action(Of H.Modules.About.IAboutViewPresenterOption)
  name.vb: Action(Of IAboutViewPresenterOption)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: H.Modules.About.IAboutViewPresenterOption
    name: IAboutViewPresenterOption
    href: H.Modules.About.IAboutViewPresenterOption.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: H.Modules.About.IAboutViewPresenterOption
    name: IAboutViewPresenterOption
    href: H.Modules.About.IAboutViewPresenterOption.html
  - name: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Extention.UseAbout*
  commentId: Overload:System.Extention.UseAbout
  href: System.Extention.html#System_Extention_UseAbout_System_IApplicationBuilder_System_Action_H_Modules_About_IAboutViewPresenterOption__
  name: UseAbout
  nameWithType: Extention.UseAbout
  fullName: System.Extention.UseAbout
- uid: System.IApplicationBuilder
  commentId: T:System.IApplicationBuilder
  parent: System
  href: System.IApplicationBuilder.html
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: System.IApplicationBuilder
- uid: System.Extention.AddUserViewPresenter*
  commentId: Overload:System.Extention.AddUserViewPresenter
  href: System.Extention.html#System_Extention_AddUserViewPresenter_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddUserViewPresenter
  nameWithType: Extention.AddUserViewPresenter
  fullName: System.Extention.AddUserViewPresenter
- uid: System.Extention.AddLoginService*
  commentId: Overload:System.Extention.AddLoginService
  href: System.Extention.html#System_Extention_AddLoginService_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddLoginService
  nameWithType: Extention.AddLoginService
  fullName: System.Extention.AddLoginService
- uid: System.Extention.AddRegisterService*
  commentId: Overload:System.Extention.AddRegisterService
  href: System.Extention.html#System_Extention_AddRegisterService_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Action_H_Modules_Identity_IdentifyOptions__
  name: AddRegisterService
  nameWithType: Extention.AddRegisterService
  fullName: System.Extention.AddRegisterService
- uid: System.Action{H.Modules.Identity.IdentifyOptions}
  commentId: T:System.Action{H.Modules.Identity.IdentifyOptions}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IdentifyOptions>
  nameWithType: Action<IdentifyOptions>
  fullName: System.Action<H.Modules.Identity.IdentifyOptions>
  nameWithType.vb: Action(Of IdentifyOptions)
  fullName.vb: System.Action(Of H.Modules.Identity.IdentifyOptions)
  name.vb: Action(Of IdentifyOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: H.Modules.Identity.IdentifyOptions
    name: IdentifyOptions
    href: H.Modules.Identity.IdentifyOptions.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: H.Modules.Identity.IdentifyOptions
    name: IdentifyOptions
    href: H.Modules.Identity.IdentifyOptions.html
  - name: )
- uid: System.Extention.AddRoleViewPresenter*
  commentId: Overload:System.Extention.AddRoleViewPresenter
  href: System.Extention.html#System_Extention_AddRoleViewPresenter_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddRoleViewPresenter
  nameWithType: Extention.AddRoleViewPresenter
  fullName: System.Extention.AddRoleViewPresenter
- uid: System.Extention.AddAuthorityViewPresenter*
  commentId: Overload:System.Extention.AddAuthorityViewPresenter
  href: System.Extention.html#System_Extention_AddAuthorityViewPresenter_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddAuthorityViewPresenter
  nameWithType: Extention.AddAuthorityViewPresenter
  fullName: System.Extention.AddAuthorityViewPresenter
- uid: System.Extention.UseIdentify*
  commentId: Overload:System.Extention.UseIdentify
  href: System.Extention.html#System_Extention_UseIdentify_System_IApplicationBuilder_System_Action_H_Modules_Identity_IdentifyOptions__
  name: UseIdentify
  nameWithType: Extention.UseIdentify
  fullName: System.Extention.UseIdentify
- uid: System.Extention.BuildIdentifySeed*
  commentId: Overload:System.Extention.BuildIdentifySeed
  href: System.Extention.html#System_Extention_BuildIdentifySeed_Microsoft_EntityFrameworkCore_ModelBuilder_
  name: BuildIdentifySeed
  nameWithType: Extention.BuildIdentifySeed
  fullName: System.Extention.BuildIdentifySeed
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.ModelBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
- uid: System.Extention.AddOperationViewPresenter*
  commentId: Overload:System.Extention.AddOperationViewPresenter
  href: System.Extention.html#System_Extention_AddOperationViewPresenter_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddOperationViewPresenter
  nameWithType: Extention.AddOperationViewPresenter
  fullName: System.Extention.AddOperationViewPresenter
- uid: System.Extention.AddOperationService*
  commentId: Overload:System.Extention.AddOperationService
  href: System.Extention.html#System_Extention_AddOperationService_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddOperationService
  nameWithType: Extention.AddOperationService
  fullName: System.Extention.AddOperationService
- uid: System.Extention.UseAdorner*
  commentId: Overload:System.Extention.UseAdorner
  href: System.Extention.html#System_Extention_UseAdorner_System_IApplicationBuilder_System_Action_H_Controls_Adorner_AdornerSetting__
  name: UseAdorner
  nameWithType: Extention.UseAdorner
  fullName: System.Extention.UseAdorner
- uid: System.Action{H.Controls.Adorner.AdornerSetting}
  commentId: T:System.Action{H.Controls.Adorner.AdornerSetting}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<AdornerSetting>
  nameWithType: Action<AdornerSetting>
  fullName: System.Action<H.Controls.Adorner.AdornerSetting>
  nameWithType.vb: Action(Of AdornerSetting)
  fullName.vb: System.Action(Of H.Controls.Adorner.AdornerSetting)
  name.vb: Action(Of AdornerSetting)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: H.Controls.Adorner.AdornerSetting
    name: AdornerSetting
    href: H.Controls.Adorner.AdornerSetting.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: H.Controls.Adorner.AdornerSetting
    name: AdornerSetting
    href: H.Controls.Adorner.AdornerSetting.html
  - name: )
- uid: System.Extention.AddLog4net*
  commentId: Overload:System.Extention.AddLog4net
  href: System.Extention.html#System_Extention_AddLog4net_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Action_H_Extensions_Revertible_Log4netOptions__
  name: AddLog4net
  nameWithType: Extention.AddLog4net
  fullName: System.Extention.AddLog4net
- uid: System.Action{H.Extensions.Revertible.Log4netOptions}
  commentId: T:System.Action{H.Extensions.Revertible.Log4netOptions}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Log4netOptions>
  nameWithType: Action<Log4netOptions>
  fullName: System.Action<H.Extensions.Revertible.Log4netOptions>
  nameWithType.vb: Action(Of Log4netOptions)
  fullName.vb: System.Action(Of H.Extensions.Revertible.Log4netOptions)
  name.vb: Action(Of Log4netOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: H.Extensions.Revertible.Log4netOptions
    name: Log4netOptions
    href: H.Extensions.Revertible.Log4netOptions.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: H.Extensions.Revertible.Log4netOptions
    name: Log4netOptions
    href: H.Extensions.Revertible.Log4netOptions.html
  - name: )
- uid: System.Extention.UseAddLog4netSetting*
  commentId: Overload:System.Extention.UseAddLog4netSetting
  href: System.Extention.html#System_Extention_UseAddLog4netSetting_System_IApplicationBuilder_System_Action_H_Extensions_Revertible_Log4netOptions__
  name: UseAddLog4netSetting
  nameWithType: Extention.UseAddLog4netSetting
  fullName: System.Extention.UseAddLog4netSetting
- uid: System.Extention.AddAutoUpgrade*
  commentId: Overload:System.Extention.AddAutoUpgrade
  href: System.Extention.html#System_Extention_AddAutoUpgrade_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Action_H_Modules_Upgrade_UpgradeOptions__
  name: AddAutoUpgrade
  nameWithType: Extention.AddAutoUpgrade
  fullName: System.Extention.AddAutoUpgrade
- uid: System.Action{H.Modules.Upgrade.UpgradeOptions}
  commentId: T:System.Action{H.Modules.Upgrade.UpgradeOptions}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<UpgradeOptions>
  nameWithType: Action<UpgradeOptions>
  fullName: System.Action<H.Modules.Upgrade.UpgradeOptions>
  nameWithType.vb: Action(Of UpgradeOptions)
  fullName.vb: System.Action(Of H.Modules.Upgrade.UpgradeOptions)
  name.vb: Action(Of UpgradeOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: H.Modules.Upgrade.UpgradeOptions
    name: UpgradeOptions
    href: H.Modules.Upgrade.UpgradeOptions.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: H.Modules.Upgrade.UpgradeOptions
    name: UpgradeOptions
    href: H.Modules.Upgrade.UpgradeOptions.html
  - name: )
- uid: System.Extention.UseUpgrade*
  commentId: Overload:System.Extention.UseUpgrade
  href: System.Extention.html#System_Extention_UseUpgrade_System_IApplicationBuilder_System_Action_H_Modules_Upgrade_UpgradeOptions__
  name: UseUpgrade
  nameWithType: Extention.UseUpgrade
  fullName: System.Extention.UseUpgrade
- uid: System.Extention.AddWindowDialogMessage*
  commentId: Overload:System.Extention.AddWindowDialogMessage
  href: System.Extention.html#System_Extention_AddWindowDialogMessage_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddWindowDialogMessage
  nameWithType: Extention.AddWindowDialogMessage
  fullName: System.Extention.AddWindowDialogMessage
- uid: System.Extention.AddAdornerDialogMessage*
  commentId: Overload:System.Extention.AddAdornerDialogMessage
  href: System.Extention.html#System_Extention_AddAdornerDialogMessage_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddAdornerDialogMessage
  nameWithType: Extention.AddAdornerDialogMessage
  fullName: System.Extention.AddAdornerDialogMessage
- uid: System.Extention.AddWindowMessage*
  commentId: Overload:System.Extention.AddWindowMessage
  href: System.Extention.html#System_Extention_AddWindowMessage_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddWindowMessage
  nameWithType: Extention.AddWindowMessage
  fullName: System.Extention.AddWindowMessage
- uid: System.Extention.AddNoticeMessage*
  commentId: Overload:System.Extention.AddNoticeMessage
  href: System.Extention.html#System_Extention_AddNoticeMessage_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddNoticeMessage
  nameWithType: Extention.AddNoticeMessage
  fullName: System.Extention.AddNoticeMessage
- uid: System.Extention.AddFormMessageService*
  commentId: Overload:System.Extention.AddFormMessageService
  href: System.Extention.html#System_Extention_AddFormMessageService_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddFormMessageService
  nameWithType: Extention.AddFormMessageService
  fullName: System.Extention.AddFormMessageService
- uid: System.Extention.AddSnackMessage*
  commentId: Overload:System.Extention.AddSnackMessage
  href: System.Extention.html#System_Extention_AddSnackMessage_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddSnackMessage
  nameWithType: Extention.AddSnackMessage
  fullName: System.Extention.AddSnackMessage
- uid: System.Extention.AddGuideService*
  commentId: Overload:System.Extention.AddGuideService
  href: System.Extention.html#System_Extention_AddGuideService_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Action_H_Modules_Guide_GuideOptions__
  name: AddGuideService
  nameWithType: Extention.AddGuideService
  fullName: System.Extention.AddGuideService
- uid: System.Action{H.Modules.Guide.GuideOptions}
  commentId: T:System.Action{H.Modules.Guide.GuideOptions}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<GuideOptions>
  nameWithType: Action<GuideOptions>
  fullName: System.Action<H.Modules.Guide.GuideOptions>
  nameWithType.vb: Action(Of GuideOptions)
  fullName.vb: System.Action(Of H.Modules.Guide.GuideOptions)
  name.vb: Action(Of GuideOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: H.Modules.Guide.GuideOptions
    name: GuideOptions
    href: H.Modules.Guide.GuideOptions.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: H.Modules.Guide.GuideOptions
    name: GuideOptions
    href: H.Modules.Guide.GuideOptions.html
  - name: )
- uid: System.Extention.UseGuideSetting*
  commentId: Overload:System.Extention.UseGuideSetting
  href: System.Extention.html#System_Extention_UseGuideSetting_System_IApplicationBuilder_System_Action_H_Modules_Guide_IGuideOptions__
  name: UseGuideSetting
  nameWithType: Extention.UseGuideSetting
  fullName: System.Extention.UseGuideSetting
- uid: System.Action{H.Modules.Guide.IGuideOptions}
  commentId: T:System.Action{H.Modules.Guide.IGuideOptions}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IGuideOptions>
  nameWithType: Action<IGuideOptions>
  fullName: System.Action<H.Modules.Guide.IGuideOptions>
  nameWithType.vb: Action(Of IGuideOptions)
  fullName.vb: System.Action(Of H.Modules.Guide.IGuideOptions)
  name.vb: Action(Of IGuideOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: H.Modules.Guide.IGuideOptions
    name: IGuideOptions
    href: H.Modules.Guide.IGuideOptions.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: H.Modules.Guide.IGuideOptions
    name: IGuideOptions
    href: H.Modules.Guide.IGuideOptions.html
  - name: )
- uid: System.Extention.AddXmlMetaSettingService*
  commentId: Overload:System.Extention.AddXmlMetaSettingService
  href: System.Extention.html#System_Extention_AddXmlMetaSettingService_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddXmlMetaSettingService
  nameWithType: Extention.AddXmlMetaSettingService
  fullName: System.Extention.AddXmlMetaSettingService
- uid: System.Extention.AddNpoiService*
  commentId: Overload:System.Extention.AddNpoiService
  href: System.Extention.html#System_Extention_AddNpoiService_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddNpoiService
  nameWithType: Extention.AddNpoiService
  fullName: System.Extention.AddNpoiService
- uid: System.Extention.AddDESCryptService*
  commentId: Overload:System.Extention.AddDESCryptService
  href: System.Extention.html#System_Extention_AddDESCryptService_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddDESCryptService
  nameWithType: Extention.AddDESCryptService
  fullName: System.Extention.AddDESCryptService
- uid: System.Extention.AddProject*
  commentId: Overload:System.Extention.AddProject
  href: System.Extention.html#System_Extention_AddProject_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Action_H_Modules_Project_ProjectOptions__
  name: AddProject
  nameWithType: Extention.AddProject
  fullName: System.Extention.AddProject
- uid: System.Action{H.Modules.Project.ProjectOptions}
  commentId: T:System.Action{H.Modules.Project.ProjectOptions}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ProjectOptions>
  nameWithType: Action<ProjectOptions>
  fullName: System.Action<H.Modules.Project.ProjectOptions>
  nameWithType.vb: Action(Of ProjectOptions)
  fullName.vb: System.Action(Of H.Modules.Project.ProjectOptions)
  name.vb: Action(Of ProjectOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: H.Modules.Project.ProjectOptions
    name: ProjectOptions
    href: H.Modules.Project.ProjectOptions.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: H.Modules.Project.ProjectOptions
    name: ProjectOptions
    href: H.Modules.Project.ProjectOptions.html
  - name: )
- uid: System.Extention.UseProject*
  commentId: Overload:System.Extention.UseProject
  href: System.Extention.html#System_Extention_UseProject_System_IApplicationBuilder_System_Action_H_Modules_Project_ProjectOptions__
  name: UseProject
  nameWithType: Extention.UseProject
  fullName: System.Extention.UseProject
- uid: System.Extention.AddTorrent*
  commentId: Overload:System.Extention.AddTorrent
  href: System.Extention.html#System_Extention_AddTorrent_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddTorrent
  nameWithType: Extention.AddTorrent
  fullName: System.Extention.AddTorrent
- uid: System.Extention.AddFFMpeg*
  commentId: Overload:System.Extention.AddFFMpeg
  href: System.Extention.html#System_Extention_AddFFMpeg_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Action_H_Extensions_FFMpeg_FFMpegOption__
  name: AddFFMpeg
  nameWithType: Extention.AddFFMpeg
  fullName: System.Extention.AddFFMpeg
- uid: System.Action{H.Extensions.FFMpeg.FFMpegOption}
  commentId: T:System.Action{H.Extensions.FFMpeg.FFMpegOption}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<FFMpegOption>
  nameWithType: Action<FFMpegOption>
  fullName: System.Action<H.Extensions.FFMpeg.FFMpegOption>
  nameWithType.vb: Action(Of FFMpegOption)
  fullName.vb: System.Action(Of H.Extensions.FFMpeg.FFMpegOption)
  name.vb: Action(Of FFMpegOption)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: H.Extensions.FFMpeg.FFMpegOption
    name: FFMpegOption
    href: H.Extensions.FFMpeg.FFMpegOption.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: H.Extensions.FFMpeg.FFMpegOption
    name: FFMpegOption
    href: H.Extensions.FFMpeg.FFMpegOption.html
  - name: )
- uid: System.Extention.UseFFMpeg*
  commentId: Overload:System.Extention.UseFFMpeg
  href: System.Extention.html#System_Extention_UseFFMpeg_System_IApplicationBuilder_System_Action_H_Extensions_FFMpeg_FFMpegOption__
  name: UseFFMpeg
  nameWithType: Extention.UseFFMpeg
  fullName: System.Extention.UseFFMpeg
- uid: System.Extention.AddMail*
  commentId: Overload:System.Extention.AddMail
  href: System.Extention.html#System_Extention_AddMail_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Action_H_Extensions_Mail_SmtpSendOptions__
  name: AddMail
  nameWithType: Extention.AddMail
  fullName: System.Extention.AddMail
- uid: System.Action{H.Extensions.Mail.SmtpSendOptions}
  commentId: T:System.Action{H.Extensions.Mail.SmtpSendOptions}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<SmtpSendOptions>
  nameWithType: Action<SmtpSendOptions>
  fullName: System.Action<H.Extensions.Mail.SmtpSendOptions>
  nameWithType.vb: Action(Of SmtpSendOptions)
  fullName.vb: System.Action(Of H.Extensions.Mail.SmtpSendOptions)
  name.vb: Action(Of SmtpSendOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: H.Extensions.Mail.SmtpSendOptions
    name: SmtpSendOptions
    href: H.Extensions.Mail.SmtpSendOptions.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: H.Extensions.Mail.SmtpSendOptions
    name: SmtpSendOptions
    href: H.Extensions.Mail.SmtpSendOptions.html
  - name: )
- uid: System.Extention.UseMail*
  commentId: Overload:System.Extention.UseMail
  href: System.Extention.html#System_Extention_UseMail_System_IApplicationBuilder_System_Action_H_Extensions_Mail_SmtpSendOptions__
  name: UseMail
  nameWithType: Extention.UseMail
  fullName: System.Extention.UseMail
- uid: System.Extention.AddTextJsonSerializerService*
  commentId: Overload:System.Extention.AddTextJsonSerializerService
  href: System.Extention.html#System_Extention_AddTextJsonSerializerService_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddTextJsonSerializerService
  nameWithType: Extention.AddTextJsonSerializerService
  fullName: System.Extention.AddTextJsonSerializerService
- uid: System.Extention.AddTypeLicense*
  commentId: Overload:System.Extention.AddTypeLicense
  href: System.Extention.html#System_Extention_AddTypeLicense_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Action_H_Extensions_TypeLicense_TypeLicenseOptions__
  name: AddTypeLicense
  nameWithType: Extention.AddTypeLicense
  fullName: System.Extention.AddTypeLicense
- uid: System.Action{H.Extensions.TypeLicense.TypeLicenseOptions}
  commentId: T:System.Action{H.Extensions.TypeLicense.TypeLicenseOptions}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<TypeLicenseOptions>
  nameWithType: Action<TypeLicenseOptions>
  fullName: System.Action<H.Extensions.TypeLicense.TypeLicenseOptions>
  nameWithType.vb: Action(Of TypeLicenseOptions)
  fullName.vb: System.Action(Of H.Extensions.TypeLicense.TypeLicenseOptions)
  name.vb: Action(Of TypeLicenseOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: H.Extensions.TypeLicense.TypeLicenseOptions
    name: TypeLicenseOptions
    href: H.Extensions.TypeLicense.TypeLicenseOptions.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: H.Extensions.TypeLicense.TypeLicenseOptions
    name: TypeLicenseOptions
    href: H.Extensions.TypeLicense.TypeLicenseOptions.html
  - name: )
- uid: System.Extention.UseTypeLicense*
  commentId: Overload:System.Extention.UseTypeLicense
  href: System.Extention.html#System_Extention_UseTypeLicense_System_IApplicationBuilder_System_Action_H_Extensions_TypeLicense_TypeLicenseOptions__
  name: UseTypeLicense
  nameWithType: Extention.UseTypeLicense
  fullName: System.Extention.UseTypeLicense
- uid: System.Extention.AddNewtonsoftJsonSerializerService*
  commentId: Overload:System.Extention.AddNewtonsoftJsonSerializerService
  href: System.Extention.html#System_Extention_AddNewtonsoftJsonSerializerService_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Action_H_Extensions_NewtonsoftJson_NewtonsoftJsonOptions__
  name: AddNewtonsoftJsonSerializerService
  nameWithType: Extention.AddNewtonsoftJsonSerializerService
  fullName: System.Extention.AddNewtonsoftJsonSerializerService
- uid: System.Action{H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions}
  commentId: T:System.Action{H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<NewtonsoftJsonOptions>
  nameWithType: Action<NewtonsoftJsonOptions>
  fullName: System.Action<H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions>
  nameWithType.vb: Action(Of NewtonsoftJsonOptions)
  fullName.vb: System.Action(Of H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions)
  name.vb: Action(Of NewtonsoftJsonOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions
    name: NewtonsoftJsonOptions
    href: H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions
    name: NewtonsoftJsonOptions
    href: H.Extensions.NewtonsoftJson.NewtonsoftJsonOptions.html
  - name: )
- uid: System.Extention.UseNewtonsoftJson*
  commentId: Overload:System.Extention.UseNewtonsoftJson
  href: System.Extention.html#System_Extention_UseNewtonsoftJson_System_IApplicationBuilder_System_Action_H_Extensions_NewtonsoftJson_NewtonsoftJsonOptions__
  name: UseNewtonsoftJson
  nameWithType: Extention.UseNewtonsoftJson
  fullName: System.Extention.UseNewtonsoftJson
- uid: System.Extention.AddIOFolderDialogService*
  commentId: Overload:System.Extention.AddIOFolderDialogService
  href: System.Extention.html#System_Extention_AddIOFolderDialogService_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddIOFolderDialogService
  nameWithType: Extention.AddIOFolderDialogService
  fullName: System.Extention.AddIOFolderDialogService
