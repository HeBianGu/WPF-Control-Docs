### YamlMime:ManagedReference
items:
- uid: System.Windows.ElementExtention
  commentId: T:System.Windows.ElementExtention
  id: ElementExtention
  parent: System.Windows
  children:
  - System.Windows.ElementExtention.AddAdorner(System.Windows.UIElement,System.Windows.Documents.Adorner)
  - System.Windows.ElementExtention.Ancestors(System.Windows.DependencyObject)
  - System.Windows.ElementExtention.AncestorsAndSelf(System.Windows.DependencyObject)
  - System.Windows.ElementExtention.BeginAnimationAngle(System.Windows.UIElement,System.Double,System.Double)
  - System.Windows.ElementExtention.BeginAnimationAngle(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  - System.Windows.ElementExtention.BeginAnimationOpacity(System.Windows.UIElement,System.Double,System.Double)
  - System.Windows.ElementExtention.BeginAnimationOpacity(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  - System.Windows.ElementExtention.BeginAnimationPath(System.Windows.UIElement,System.Windows.Media.PathGeometry,System.Double,System.Boolean,System.Boolean)
  - System.Windows.ElementExtention.BeginAnimationScale(System.Windows.UIElement,System.Double,System.Double,System.Double)
  - System.Windows.ElementExtention.BeginAnimationScaleX(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  - System.Windows.ElementExtention.BeginAnimationScaleY(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  - System.Windows.ElementExtention.BeginAnimationSkew(System.Windows.UIElement,System.Double,System.Double,System.Double)
  - System.Windows.ElementExtention.BeginAnimationSkewX(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  - System.Windows.ElementExtention.BeginAnimationSkewY(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  - System.Windows.ElementExtention.BeginAnimationX(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  - System.Windows.ElementExtention.BeginAnimationXY(System.Windows.UIElement,System.Double,System.Double,System.Double)
  - System.Windows.ElementExtention.BeginAnimationY(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  - System.Windows.ElementExtention.BegionDoubleStoryBoard(System.Windows.UIElement,System.Double,System.Double,System.Double,System.String,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  - System.Windows.ElementExtention.BindCommand(System.Windows.UIElement,System.Windows.Input.ICommand)
  - System.Windows.ElementExtention.BindCommand(System.Windows.UIElement,System.Windows.Input.ICommand,System.Action{System.Object,System.Windows.Input.ExecutedRoutedEventArgs})
  - System.Windows.ElementExtention.CheckDefaultTransformGroup(System.Windows.UIElement)
  - System.Windows.ElementExtention.ClearAdorner(System.Windows.UIElement,System.Predicate{System.Windows.Documents.Adorner})
  - System.Windows.ElementExtention.Collapsed(System.Windows.UIElement)
  - System.Windows.ElementExtention.FindAllVisualChild``1(System.Windows.DependencyObject,System.Predicate{``0})
  - System.Windows.ElementExtention.GetAdorner(System.Windows.UIElement,System.Predicate{System.Windows.Documents.Adorner})
  - System.Windows.ElementExtention.GetAdorners(System.Windows.UIElement,System.Predicate{System.Windows.Documents.Adorner})
  - System.Windows.ElementExtention.GetChild``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})
  - System.Windows.ElementExtention.GetChildren``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean},System.Boolean)
  - System.Windows.ElementExtention.GetContent(System.Windows.UIElement)
  - System.Windows.ElementExtention.GetDataContext(System.Windows.UIElement)
  - System.Windows.ElementExtention.GetElement``1(System.Windows.DependencyObject)
  - System.Windows.ElementExtention.GetElements``1(System.Windows.DependencyObject)
  - System.Windows.ElementExtention.GetImage(System.Windows.UIElement)
  - System.Windows.ElementExtention.GetImplementationRoot(System.Windows.DependencyObject)
  - System.Windows.ElementExtention.GetItemsSource``1(System.Windows.UIElement)
  - System.Windows.ElementExtention.GetParent(System.Windows.DependencyObject)
  - System.Windows.ElementExtention.GetParent(System.Windows.DependencyObject,System.Type)
  - System.Windows.ElementExtention.GetParent``1(System.Windows.DependencyObject)
  - System.Windows.ElementExtention.GetParent``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})
  - System.Windows.ElementExtention.GetTemplateByName``1(System.Windows.Controls.Control,System.String)
  - System.Windows.ElementExtention.GetTransform``1(System.Windows.UIElement)
  - System.Windows.ElementExtention.GetValueSync``1(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.ElementExtention.Hidden(System.Windows.UIElement)
  - System.Windows.ElementExtention.HitTest``1(System.Windows.UIElement,System.Windows.Media.Geometry,System.Predicate{``0})
  - System.Windows.ElementExtention.HitTest``1(System.Windows.UIElement,System.Windows.Point)
  - System.Windows.ElementExtention.HitTest``1(System.Windows.UIElement,System.Windows.Point,System.Predicate{``0})
  - System.Windows.ElementExtention.PrintLogicalTree(System.Windows.DependencyObject)
  - System.Windows.ElementExtention.PrintVisualTree(System.Windows.DependencyObject)
  - System.Windows.ElementExtention.SetValueSync``1(System.Windows.DependencyObject,System.Windows.DependencyProperty,``0)
  - System.Windows.ElementExtention.TryGetVisualStateGroup(System.Windows.DependencyObject,System.String)
  - System.Windows.ElementExtention.VisibilityWith(System.Windows.UIElement,System.Boolean)
  - System.Windows.ElementExtention.Visible(System.Windows.UIElement)
  - System.Windows.ElementExtention.Wait(System.Windows.UIElement,System.Double,System.Action{System.Windows.UIElement})
  langs:
  - csharp
  - vb
  name: ElementExtention
  nameWithType: ElementExtention
  fullName: System.Windows.ElementExtention
  type: Class
  source:
    id: ElementExtention
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 15
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static class ElementExtention
    content.vb: Public Module ElementExtention
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Windows.ElementExtention.BindCommand(System.Windows.UIElement,System.Windows.Input.ICommand,System.Action{System.Object,System.Windows.Input.ExecutedRoutedEventArgs})
  commentId: M:System.Windows.ElementExtention.BindCommand(System.Windows.UIElement,System.Windows.Input.ICommand,System.Action{System.Object,System.Windows.Input.ExecutedRoutedEventArgs})
  id: BindCommand(System.Windows.UIElement,System.Windows.Input.ICommand,System.Action{System.Object,System.Windows.Input.ExecutedRoutedEventArgs})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: BindCommand(UIElement, ICommand, Action<object, ExecutedRoutedEventArgs>)
  nameWithType: ElementExtention.BindCommand(UIElement, ICommand, Action<object, ExecutedRoutedEventArgs>)
  fullName: System.Windows.ElementExtention.BindCommand(System.Windows.UIElement, System.Windows.Input.ICommand, System.Action<object, System.Windows.Input.ExecutedRoutedEventArgs>)
  type: Method
  source:
    id: BindCommand
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 17
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static void BindCommand(this UIElement ui, ICommand com, Action<object, ExecutedRoutedEventArgs> call)
    parameters:
    - id: ui
      type: System.Windows.UIElement
    - id: com
      type: System.Windows.Input.ICommand
    - id: call
      type: System.Action{System.Object,System.Windows.Input.ExecutedRoutedEventArgs}
    content.vb: Public Shared Sub BindCommand(ui As UIElement, com As ICommand, [call] As Action(Of Object, ExecutedRoutedEventArgs))
  overload: System.Windows.ElementExtention.BindCommand*
  nameWithType.vb: ElementExtention.BindCommand(UIElement, ICommand, Action(Of Object, ExecutedRoutedEventArgs))
  fullName.vb: System.Windows.ElementExtention.BindCommand(System.Windows.UIElement, System.Windows.Input.ICommand, System.Action(Of Object, System.Windows.Input.ExecutedRoutedEventArgs))
  name.vb: BindCommand(UIElement, ICommand, Action(Of Object, ExecutedRoutedEventArgs))
- uid: System.Windows.ElementExtention.BindCommand(System.Windows.UIElement,System.Windows.Input.ICommand)
  commentId: M:System.Windows.ElementExtention.BindCommand(System.Windows.UIElement,System.Windows.Input.ICommand)
  id: BindCommand(System.Windows.UIElement,System.Windows.Input.ICommand)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: BindCommand(UIElement, ICommand)
  nameWithType: ElementExtention.BindCommand(UIElement, ICommand)
  fullName: System.Windows.ElementExtention.BindCommand(System.Windows.UIElement, System.Windows.Input.ICommand)
  type: Method
  source:
    id: BindCommand
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 23
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static void BindCommand(this UIElement ui, ICommand com)
    parameters:
    - id: ui
      type: System.Windows.UIElement
    - id: com
      type: System.Windows.Input.ICommand
    content.vb: Public Shared Sub BindCommand(ui As UIElement, com As ICommand)
  overload: System.Windows.ElementExtention.BindCommand*
- uid: System.Windows.ElementExtention.Visible(System.Windows.UIElement)
  commentId: M:System.Windows.ElementExtention.Visible(System.Windows.UIElement)
  id: Visible(System.Windows.UIElement)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: Visible(UIElement)
  nameWithType: ElementExtention.Visible(UIElement)
  fullName: System.Windows.ElementExtention.Visible(System.Windows.UIElement)
  type: Method
  source:
    id: Visible
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 29
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static void Visible(this UIElement ui)
    parameters:
    - id: ui
      type: System.Windows.UIElement
    content.vb: Public Shared Sub Visible(ui As UIElement)
  overload: System.Windows.ElementExtention.Visible*
- uid: System.Windows.ElementExtention.VisibilityWith(System.Windows.UIElement,System.Boolean)
  commentId: M:System.Windows.ElementExtention.VisibilityWith(System.Windows.UIElement,System.Boolean)
  id: VisibilityWith(System.Windows.UIElement,System.Boolean)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: VisibilityWith(UIElement, bool)
  nameWithType: ElementExtention.VisibilityWith(UIElement, bool)
  fullName: System.Windows.ElementExtention.VisibilityWith(System.Windows.UIElement, bool)
  type: Method
  source:
    id: VisibilityWith
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 34
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static void VisibilityWith(this UIElement ui, bool from)
    parameters:
    - id: ui
      type: System.Windows.UIElement
    - id: from
      type: System.Boolean
    content.vb: Public Shared Sub VisibilityWith(ui As UIElement, from As Boolean)
  overload: System.Windows.ElementExtention.VisibilityWith*
  nameWithType.vb: ElementExtention.VisibilityWith(UIElement, Boolean)
  fullName.vb: System.Windows.ElementExtention.VisibilityWith(System.Windows.UIElement, Boolean)
  name.vb: VisibilityWith(UIElement, Boolean)
- uid: System.Windows.ElementExtention.Hidden(System.Windows.UIElement)
  commentId: M:System.Windows.ElementExtention.Hidden(System.Windows.UIElement)
  id: Hidden(System.Windows.UIElement)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: Hidden(UIElement)
  nameWithType: ElementExtention.Hidden(UIElement)
  fullName: System.Windows.ElementExtention.Hidden(System.Windows.UIElement)
  type: Method
  source:
    id: Hidden
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 46
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static void Hidden(this UIElement ui)
    parameters:
    - id: ui
      type: System.Windows.UIElement
    content.vb: Public Shared Sub Hidden(ui As UIElement)
  overload: System.Windows.ElementExtention.Hidden*
- uid: System.Windows.ElementExtention.Collapsed(System.Windows.UIElement)
  commentId: M:System.Windows.ElementExtention.Collapsed(System.Windows.UIElement)
  id: Collapsed(System.Windows.UIElement)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: Collapsed(UIElement)
  nameWithType: ElementExtention.Collapsed(UIElement)
  fullName: System.Windows.ElementExtention.Collapsed(System.Windows.UIElement)
  type: Method
  source:
    id: Collapsed
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 51
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static void Collapsed(this UIElement ui)
    parameters:
    - id: ui
      type: System.Windows.UIElement
    content.vb: Public Shared Sub Collapsed(ui As UIElement)
  overload: System.Windows.ElementExtention.Collapsed*
- uid: System.Windows.ElementExtention.GetChild``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})
  commentId: M:System.Windows.ElementExtention.GetChild``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})
  id: GetChild``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetChild<T>(DependencyObject, Func<T, bool>)
  nameWithType: ElementExtention.GetChild<T>(DependencyObject, Func<T, bool>)
  fullName: System.Windows.ElementExtention.GetChild<T>(System.Windows.DependencyObject, System.Func<T, bool>)
  type: Method
  source:
    id: GetChild
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 56
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: 'public static T GetChild<T>(this DependencyObject p_element, Func<T, bool> p_func = null) where T : UIElement'
    parameters:
    - id: p_element
      type: System.Windows.DependencyObject
    - id: p_func
      type: System.Func{{T},System.Boolean}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetChild(Of T As UIElement)(p_element As DependencyObject, p_func As Func(Of T, Boolean) = Nothing) As T
  overload: System.Windows.ElementExtention.GetChild*
  nameWithType.vb: ElementExtention.GetChild(Of T)(DependencyObject, Func(Of T, Boolean))
  fullName.vb: System.Windows.ElementExtention.GetChild(Of T)(System.Windows.DependencyObject, System.Func(Of T, Boolean))
  name.vb: GetChild(Of T)(DependencyObject, Func(Of T, Boolean))
- uid: System.Windows.ElementExtention.GetChildren``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean},System.Boolean)
  commentId: M:System.Windows.ElementExtention.GetChildren``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean},System.Boolean)
  id: GetChildren``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean},System.Boolean)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetChildren<T>(DependencyObject, Func<T, bool>, bool)
  nameWithType: ElementExtention.GetChildren<T>(DependencyObject, Func<T, bool>, bool)
  fullName: System.Windows.ElementExtention.GetChildren<T>(System.Windows.DependencyObject, System.Func<T, bool>, bool)
  type: Method
  source:
    id: GetChildren
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 82
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: 'public static IEnumerable<T> GetChildren<T>(this DependencyObject p_element, Func<T, bool> p_func = null, bool filterContain = false) where T : UIElement'
    parameters:
    - id: p_element
      type: System.Windows.DependencyObject
    - id: p_func
      type: System.Func{{T},System.Boolean}
    - id: filterContain
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Shared Function GetChildren(Of T As UIElement)(p_element As DependencyObject, p_func As Func(Of T, Boolean) = Nothing, filterContain As Boolean = False) As IEnumerable(Of T)
  overload: System.Windows.ElementExtention.GetChildren*
  nameWithType.vb: ElementExtention.GetChildren(Of T)(DependencyObject, Func(Of T, Boolean), Boolean)
  fullName.vb: System.Windows.ElementExtention.GetChildren(Of T)(System.Windows.DependencyObject, System.Func(Of T, Boolean), Boolean)
  name.vb: GetChildren(Of T)(DependencyObject, Func(Of T, Boolean), Boolean)
- uid: System.Windows.ElementExtention.GetParent``1(System.Windows.DependencyObject)
  commentId: M:System.Windows.ElementExtention.GetParent``1(System.Windows.DependencyObject)
  id: GetParent``1(System.Windows.DependencyObject)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetParent<T>(DependencyObject)
  nameWithType: ElementExtention.GetParent<T>(DependencyObject)
  fullName: System.Windows.ElementExtention.GetParent<T>(System.Windows.DependencyObject)
  type: Method
  source:
    id: GetParent
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 124
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: 'public static T GetParent<T>(this DependencyObject element) where T : DependencyObject'
    parameters:
    - id: element
      type: System.Windows.DependencyObject
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetParent(Of T As DependencyObject)(element As DependencyObject) As T
  overload: System.Windows.ElementExtention.GetParent*
  nameWithType.vb: ElementExtention.GetParent(Of T)(DependencyObject)
  fullName.vb: System.Windows.ElementExtention.GetParent(Of T)(System.Windows.DependencyObject)
  name.vb: GetParent(Of T)(DependencyObject)
- uid: System.Windows.ElementExtention.GetParent``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})
  commentId: M:System.Windows.ElementExtention.GetParent``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})
  id: GetParent``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetParent<T>(DependencyObject, Func<T, bool>)
  nameWithType: ElementExtention.GetParent<T>(DependencyObject, Func<T, bool>)
  fullName: System.Windows.ElementExtention.GetParent<T>(System.Windows.DependencyObject, System.Func<T, bool>)
  type: Method
  source:
    id: GetParent
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 150
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: 'public static T GetParent<T>(this DependencyObject element, Func<T, bool> p_func) where T : DependencyObject'
    parameters:
    - id: element
      type: System.Windows.DependencyObject
    - id: p_func
      type: System.Func{{T},System.Boolean}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetParent(Of T As DependencyObject)(element As DependencyObject, p_func As Func(Of T, Boolean)) As T
  overload: System.Windows.ElementExtention.GetParent*
  nameWithType.vb: ElementExtention.GetParent(Of T)(DependencyObject, Func(Of T, Boolean))
  fullName.vb: System.Windows.ElementExtention.GetParent(Of T)(System.Windows.DependencyObject, System.Func(Of T, Boolean))
  name.vb: GetParent(Of T)(DependencyObject, Func(Of T, Boolean))
- uid: System.Windows.ElementExtention.GetTemplateByName``1(System.Windows.Controls.Control,System.String)
  commentId: M:System.Windows.ElementExtention.GetTemplateByName``1(System.Windows.Controls.Control,System.String)
  id: GetTemplateByName``1(System.Windows.Controls.Control,System.String)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetTemplateByName<T>(Control, string)
  nameWithType: ElementExtention.GetTemplateByName<T>(Control, string)
  fullName: System.Windows.ElementExtention.GetTemplateByName<T>(System.Windows.Controls.Control, string)
  type: Method
  source:
    id: GetTemplateByName
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 177
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: 'public static T GetTemplateByName<T>(this Control control, string name) where T : FrameworkElement'
    parameters:
    - id: control
      type: System.Windows.Controls.Control
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetTemplateByName(Of T As FrameworkElement)(control As Control, name As String) As T
  overload: System.Windows.ElementExtention.GetTemplateByName*
  nameWithType.vb: ElementExtention.GetTemplateByName(Of T)(Control, String)
  fullName.vb: System.Windows.ElementExtention.GetTemplateByName(Of T)(System.Windows.Controls.Control, String)
  name.vb: GetTemplateByName(Of T)(Control, String)
- uid: System.Windows.ElementExtention.GetElement``1(System.Windows.DependencyObject)
  commentId: M:System.Windows.ElementExtention.GetElement``1(System.Windows.DependencyObject)
  id: GetElement``1(System.Windows.DependencyObject)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetElement<T>(DependencyObject)
  nameWithType: ElementExtention.GetElement<T>(DependencyObject)
  fullName: System.Windows.ElementExtention.GetElement<T>(System.Windows.DependencyObject)
  type: Method
  source:
    id: GetElement
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 188
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: 'public static T GetElement<T>(this DependencyObject element) where T : FrameworkElement'
    parameters:
    - id: element
      type: System.Windows.DependencyObject
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetElement(Of T As FrameworkElement)(element As DependencyObject) As T
  overload: System.Windows.ElementExtention.GetElement*
  nameWithType.vb: ElementExtention.GetElement(Of T)(DependencyObject)
  fullName.vb: System.Windows.ElementExtention.GetElement(Of T)(System.Windows.DependencyObject)
  name.vb: GetElement(Of T)(DependencyObject)
- uid: System.Windows.ElementExtention.GetElements``1(System.Windows.DependencyObject)
  commentId: M:System.Windows.ElementExtention.GetElements``1(System.Windows.DependencyObject)
  id: GetElements``1(System.Windows.DependencyObject)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetElements<T>(DependencyObject)
  nameWithType: ElementExtention.GetElements<T>(DependencyObject)
  fullName: System.Windows.ElementExtention.GetElements<T>(System.Windows.DependencyObject)
  type: Method
  source:
    id: GetElements
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 221
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: 'public static IEnumerable<T> GetElements<T>(this DependencyObject element) where T : FrameworkElement'
    parameters:
    - id: element
      type: System.Windows.DependencyObject
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Shared Function GetElements(Of T As FrameworkElement)(element As DependencyObject) As IEnumerable(Of T)
  overload: System.Windows.ElementExtention.GetElements*
  nameWithType.vb: ElementExtention.GetElements(Of T)(DependencyObject)
  fullName.vb: System.Windows.ElementExtention.GetElements(Of T)(System.Windows.DependencyObject)
  name.vb: GetElements(Of T)(DependencyObject)
- uid: System.Windows.ElementExtention.TryGetVisualStateGroup(System.Windows.DependencyObject,System.String)
  commentId: M:System.Windows.ElementExtention.TryGetVisualStateGroup(System.Windows.DependencyObject,System.String)
  id: TryGetVisualStateGroup(System.Windows.DependencyObject,System.String)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: TryGetVisualStateGroup(DependencyObject, string)
  nameWithType: ElementExtention.TryGetVisualStateGroup(DependencyObject, string)
  fullName: System.Windows.ElementExtention.TryGetVisualStateGroup(System.Windows.DependencyObject, string)
  type: Method
  source:
    id: TryGetVisualStateGroup
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 254
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static VisualStateGroup TryGetVisualStateGroup(this DependencyObject d, string groupName)
    parameters:
    - id: d
      type: System.Windows.DependencyObject
    - id: groupName
      type: System.String
    return:
      type: System.Windows.VisualStateGroup
    content.vb: Public Shared Function TryGetVisualStateGroup(d As DependencyObject, groupName As String) As VisualStateGroup
  overload: System.Windows.ElementExtention.TryGetVisualStateGroup*
  nameWithType.vb: ElementExtention.TryGetVisualStateGroup(DependencyObject, String)
  fullName.vb: System.Windows.ElementExtention.TryGetVisualStateGroup(System.Windows.DependencyObject, String)
  name.vb: TryGetVisualStateGroup(DependencyObject, String)
- uid: System.Windows.ElementExtention.GetImplementationRoot(System.Windows.DependencyObject)
  commentId: M:System.Windows.ElementExtention.GetImplementationRoot(System.Windows.DependencyObject)
  id: GetImplementationRoot(System.Windows.DependencyObject)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetImplementationRoot(DependencyObject)
  nameWithType: ElementExtention.GetImplementationRoot(DependencyObject)
  fullName: System.Windows.ElementExtention.GetImplementationRoot(System.Windows.DependencyObject)
  type: Method
  source:
    id: GetImplementationRoot
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 268
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static FrameworkElement GetImplementationRoot(this DependencyObject d)
    parameters:
    - id: d
      type: System.Windows.DependencyObject
    return:
      type: System.Windows.FrameworkElement
    content.vb: Public Shared Function GetImplementationRoot(d As DependencyObject) As FrameworkElement
  overload: System.Windows.ElementExtention.GetImplementationRoot*
- uid: System.Windows.ElementExtention.PrintVisualTree(System.Windows.DependencyObject)
  commentId: M:System.Windows.ElementExtention.PrintVisualTree(System.Windows.DependencyObject)
  id: PrintVisualTree(System.Windows.DependencyObject)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: PrintVisualTree(DependencyObject)
  nameWithType: ElementExtention.PrintVisualTree(DependencyObject)
  fullName: System.Windows.ElementExtention.PrintVisualTree(System.Windows.DependencyObject)
  type: Method
  source:
    id: PrintVisualTree
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 275
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static IEnumerable<DependencyObject> PrintVisualTree(this DependencyObject obj)
    parameters:
    - id: obj
      type: System.Windows.DependencyObject
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.DependencyObject}
    content.vb: Public Shared Function PrintVisualTree(obj As DependencyObject) As IEnumerable(Of DependencyObject)
  overload: System.Windows.ElementExtention.PrintVisualTree*
- uid: System.Windows.ElementExtention.PrintLogicalTree(System.Windows.DependencyObject)
  commentId: M:System.Windows.ElementExtention.PrintLogicalTree(System.Windows.DependencyObject)
  id: PrintLogicalTree(System.Windows.DependencyObject)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: PrintLogicalTree(DependencyObject)
  nameWithType: ElementExtention.PrintLogicalTree(DependencyObject)
  fullName: System.Windows.ElementExtention.PrintLogicalTree(System.Windows.DependencyObject)
  type: Method
  source:
    id: PrintLogicalTree
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 291
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static IEnumerable<DependencyObject> PrintLogicalTree(this DependencyObject obj)
    parameters:
    - id: obj
      type: System.Windows.DependencyObject
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.DependencyObject}
    content.vb: Public Shared Function PrintLogicalTree(obj As DependencyObject) As IEnumerable(Of DependencyObject)
  overload: System.Windows.ElementExtention.PrintLogicalTree*
- uid: System.Windows.ElementExtention.FindAllVisualChild``1(System.Windows.DependencyObject,System.Predicate{``0})
  commentId: M:System.Windows.ElementExtention.FindAllVisualChild``1(System.Windows.DependencyObject,System.Predicate{``0})
  id: FindAllVisualChild``1(System.Windows.DependencyObject,System.Predicate{``0})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: FindAllVisualChild<T>(DependencyObject, Predicate<T>)
  nameWithType: ElementExtention.FindAllVisualChild<T>(DependencyObject, Predicate<T>)
  fullName: System.Windows.ElementExtention.FindAllVisualChild<T>(System.Windows.DependencyObject, System.Predicate<T>)
  type: Method
  source:
    id: FindAllVisualChild
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 311
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: 'public static IEnumerable<T> FindAllVisualChild<T>(this DependencyObject obj, Predicate<T> match) where T : DependencyObject'
    parameters:
    - id: obj
      type: System.Windows.DependencyObject
    - id: match
      type: System.Predicate{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Shared Function FindAllVisualChild(Of T As DependencyObject)(obj As DependencyObject, match As Predicate(Of T)) As IEnumerable(Of T)
  overload: System.Windows.ElementExtention.FindAllVisualChild*
  nameWithType.vb: ElementExtention.FindAllVisualChild(Of T)(DependencyObject, Predicate(Of T))
  fullName.vb: System.Windows.ElementExtention.FindAllVisualChild(Of T)(System.Windows.DependencyObject, System.Predicate(Of T))
  name.vb: FindAllVisualChild(Of T)(DependencyObject, Predicate(Of T))
- uid: System.Windows.ElementExtention.Ancestors(System.Windows.DependencyObject)
  commentId: M:System.Windows.ElementExtention.Ancestors(System.Windows.DependencyObject)
  id: Ancestors(System.Windows.DependencyObject)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: Ancestors(DependencyObject)
  nameWithType: ElementExtention.Ancestors(DependencyObject)
  fullName: System.Windows.ElementExtention.Ancestors(System.Windows.DependencyObject)
  type: Method
  source:
    id: Ancestors
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 335
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static IEnumerable<DependencyObject> Ancestors(this DependencyObject dependencyObject)
    parameters:
    - id: dependencyObject
      type: System.Windows.DependencyObject
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.DependencyObject}
    content.vb: Public Shared Function Ancestors(dependencyObject As DependencyObject) As IEnumerable(Of DependencyObject)
  overload: System.Windows.ElementExtention.Ancestors*
- uid: System.Windows.ElementExtention.AncestorsAndSelf(System.Windows.DependencyObject)
  commentId: M:System.Windows.ElementExtention.AncestorsAndSelf(System.Windows.DependencyObject)
  id: AncestorsAndSelf(System.Windows.DependencyObject)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: AncestorsAndSelf(DependencyObject)
  nameWithType: ElementExtention.AncestorsAndSelf(DependencyObject)
  fullName: System.Windows.ElementExtention.AncestorsAndSelf(System.Windows.DependencyObject)
  type: Method
  source:
    id: AncestorsAndSelf
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 352
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static IEnumerable<DependencyObject> AncestorsAndSelf(this DependencyObject dependencyObject)
    parameters:
    - id: dependencyObject
      type: System.Windows.DependencyObject
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.DependencyObject}
    content.vb: Public Shared Function AncestorsAndSelf(dependencyObject As DependencyObject) As IEnumerable(Of DependencyObject)
  overload: System.Windows.ElementExtention.AncestorsAndSelf*
- uid: System.Windows.ElementExtention.GetParent(System.Windows.DependencyObject)
  commentId: M:System.Windows.ElementExtention.GetParent(System.Windows.DependencyObject)
  id: GetParent(System.Windows.DependencyObject)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetParent(DependencyObject)
  nameWithType: ElementExtention.GetParent(DependencyObject)
  fullName: System.Windows.ElementExtention.GetParent(System.Windows.DependencyObject)
  type: Method
  source:
    id: GetParent
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 374
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static DependencyObject GetParent(this DependencyObject dependencyObject)
    parameters:
    - id: dependencyObject
      type: System.Windows.DependencyObject
    return:
      type: System.Windows.DependencyObject
    content.vb: Public Shared Function GetParent(dependencyObject As DependencyObject) As DependencyObject
  overload: System.Windows.ElementExtention.GetParent*
- uid: System.Windows.ElementExtention.GetParent(System.Windows.DependencyObject,System.Type)
  commentId: M:System.Windows.ElementExtention.GetParent(System.Windows.DependencyObject,System.Type)
  id: GetParent(System.Windows.DependencyObject,System.Type)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetParent(DependencyObject, Type)
  nameWithType: ElementExtention.GetParent(DependencyObject, Type)
  fullName: System.Windows.ElementExtention.GetParent(System.Windows.DependencyObject, System.Type)
  type: Method
  source:
    id: GetParent
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 397
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static DependencyObject GetParent(this DependencyObject fe, Type lookForType)
    parameters:
    - id: fe
      type: System.Windows.DependencyObject
    - id: lookForType
      type: System.Type
    return:
      type: System.Windows.DependencyObject
    content.vb: Public Shared Function GetParent(fe As DependencyObject, lookForType As Type) As DependencyObject
  overload: System.Windows.ElementExtention.GetParent*
- uid: System.Windows.ElementExtention.GetValueSync``1(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  commentId: M:System.Windows.ElementExtention.GetValueSync``1(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  id: GetValueSync``1(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetValueSync<T>(DependencyObject, DependencyProperty)
  nameWithType: ElementExtention.GetValueSync<T>(DependencyObject, DependencyProperty)
  fullName: System.Windows.ElementExtention.GetValueSync<T>(System.Windows.DependencyObject, System.Windows.DependencyProperty)
  type: Method
  source:
    id: GetValueSync
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 410
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static T GetValueSync<T>(this DependencyObject obj, DependencyProperty property)
    parameters:
    - id: obj
      type: System.Windows.DependencyObject
    - id: property
      type: System.Windows.DependencyProperty
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetValueSync(Of T)(obj As DependencyObject, [property] As DependencyProperty) As T
  overload: System.Windows.ElementExtention.GetValueSync*
  nameWithType.vb: ElementExtention.GetValueSync(Of T)(DependencyObject, DependencyProperty)
  fullName.vb: System.Windows.ElementExtention.GetValueSync(Of T)(System.Windows.DependencyObject, System.Windows.DependencyProperty)
  name.vb: GetValueSync(Of T)(DependencyObject, DependencyProperty)
- uid: System.Windows.ElementExtention.SetValueSync``1(System.Windows.DependencyObject,System.Windows.DependencyProperty,``0)
  commentId: M:System.Windows.ElementExtention.SetValueSync``1(System.Windows.DependencyObject,System.Windows.DependencyProperty,``0)
  id: SetValueSync``1(System.Windows.DependencyObject,System.Windows.DependencyProperty,``0)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: SetValueSync<T>(DependencyObject, DependencyProperty, T)
  nameWithType: ElementExtention.SetValueSync<T>(DependencyObject, DependencyProperty, T)
  fullName: System.Windows.ElementExtention.SetValueSync<T>(System.Windows.DependencyObject, System.Windows.DependencyProperty, T)
  type: Method
  source:
    id: SetValueSync
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 418
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static void SetValueSync<T>(this DependencyObject obj, DependencyProperty property, T value)
    parameters:
    - id: obj
      type: System.Windows.DependencyObject
    - id: property
      type: System.Windows.DependencyProperty
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Shared Sub SetValueSync(Of T)(obj As DependencyObject, [property] As DependencyProperty, value As T)
  overload: System.Windows.ElementExtention.SetValueSync*
  nameWithType.vb: ElementExtention.SetValueSync(Of T)(DependencyObject, DependencyProperty, T)
  fullName.vb: System.Windows.ElementExtention.SetValueSync(Of T)(System.Windows.DependencyObject, System.Windows.DependencyProperty, T)
  name.vb: SetValueSync(Of T)(DependencyObject, DependencyProperty, T)
- uid: System.Windows.ElementExtention.GetImage(System.Windows.UIElement)
  commentId: M:System.Windows.ElementExtention.GetImage(System.Windows.UIElement)
  id: GetImage(System.Windows.UIElement)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetImage(UIElement)
  nameWithType: ElementExtention.GetImage(UIElement)
  fullName: System.Windows.ElementExtention.GetImage(System.Windows.UIElement)
  type: Method
  source:
    id: GetImage
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 426
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static BitmapSource GetImage(this UIElement element)
    parameters:
    - id: element
      type: System.Windows.UIElement
    return:
      type: System.Windows.Media.Imaging.BitmapSource
    content.vb: Public Shared Function GetImage(element As UIElement) As BitmapSource
  overload: System.Windows.ElementExtention.GetImage*
- uid: System.Windows.ElementExtention.GetAdorners(System.Windows.UIElement,System.Predicate{System.Windows.Documents.Adorner})
  commentId: M:System.Windows.ElementExtention.GetAdorners(System.Windows.UIElement,System.Predicate{System.Windows.Documents.Adorner})
  id: GetAdorners(System.Windows.UIElement,System.Predicate{System.Windows.Documents.Adorner})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetAdorners(UIElement, Predicate<Adorner>)
  nameWithType: ElementExtention.GetAdorners(UIElement, Predicate<Adorner>)
  fullName: System.Windows.ElementExtention.GetAdorners(System.Windows.UIElement, System.Predicate<System.Windows.Documents.Adorner>)
  type: Method
  source:
    id: GetAdorners
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 439
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static IEnumerable<Adorner> GetAdorners(this UIElement element, Predicate<Adorner> predicate = null)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: predicate
      type: System.Predicate{System.Windows.Documents.Adorner}
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Documents.Adorner}
    content.vb: Public Shared Function GetAdorners(element As UIElement, predicate As Predicate(Of Adorner) = Nothing) As IEnumerable(Of Adorner)
  overload: System.Windows.ElementExtention.GetAdorners*
  nameWithType.vb: ElementExtention.GetAdorners(UIElement, Predicate(Of Adorner))
  fullName.vb: System.Windows.ElementExtention.GetAdorners(System.Windows.UIElement, System.Predicate(Of System.Windows.Documents.Adorner))
  name.vb: GetAdorners(UIElement, Predicate(Of Adorner))
- uid: System.Windows.ElementExtention.GetAdorner(System.Windows.UIElement,System.Predicate{System.Windows.Documents.Adorner})
  commentId: M:System.Windows.ElementExtention.GetAdorner(System.Windows.UIElement,System.Predicate{System.Windows.Documents.Adorner})
  id: GetAdorner(System.Windows.UIElement,System.Predicate{System.Windows.Documents.Adorner})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetAdorner(UIElement, Predicate<Adorner>)
  nameWithType: ElementExtention.GetAdorner(UIElement, Predicate<Adorner>)
  fullName: System.Windows.ElementExtention.GetAdorner(System.Windows.UIElement, System.Predicate<System.Windows.Documents.Adorner>)
  type: Method
  source:
    id: GetAdorner
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 448
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static Adorner GetAdorner(this UIElement element, Predicate<Adorner> predicate = null)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: predicate
      type: System.Predicate{System.Windows.Documents.Adorner}
    return:
      type: System.Windows.Documents.Adorner
    content.vb: Public Shared Function GetAdorner(element As UIElement, predicate As Predicate(Of Adorner) = Nothing) As Adorner
  overload: System.Windows.ElementExtention.GetAdorner*
  nameWithType.vb: ElementExtention.GetAdorner(UIElement, Predicate(Of Adorner))
  fullName.vb: System.Windows.ElementExtention.GetAdorner(System.Windows.UIElement, System.Predicate(Of System.Windows.Documents.Adorner))
  name.vb: GetAdorner(UIElement, Predicate(Of Adorner))
- uid: System.Windows.ElementExtention.AddAdorner(System.Windows.UIElement,System.Windows.Documents.Adorner)
  commentId: M:System.Windows.ElementExtention.AddAdorner(System.Windows.UIElement,System.Windows.Documents.Adorner)
  id: AddAdorner(System.Windows.UIElement,System.Windows.Documents.Adorner)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: AddAdorner(UIElement, Adorner)
  nameWithType: ElementExtention.AddAdorner(UIElement, Adorner)
  fullName: System.Windows.ElementExtention.AddAdorner(System.Windows.UIElement, System.Windows.Documents.Adorner)
  type: Method
  source:
    id: AddAdorner
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 453
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static bool AddAdorner(this UIElement element, Adorner adorner)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: adorner
      type: System.Windows.Documents.Adorner
    return:
      type: System.Boolean
    content.vb: Public Shared Function AddAdorner(element As UIElement, adorner As Adorner) As Boolean
  overload: System.Windows.ElementExtention.AddAdorner*
- uid: System.Windows.ElementExtention.ClearAdorner(System.Windows.UIElement,System.Predicate{System.Windows.Documents.Adorner})
  commentId: M:System.Windows.ElementExtention.ClearAdorner(System.Windows.UIElement,System.Predicate{System.Windows.Documents.Adorner})
  id: ClearAdorner(System.Windows.UIElement,System.Predicate{System.Windows.Documents.Adorner})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: ClearAdorner(UIElement, Predicate<Adorner>)
  nameWithType: ElementExtention.ClearAdorner(UIElement, Predicate<Adorner>)
  fullName: System.Windows.ElementExtention.ClearAdorner(System.Windows.UIElement, System.Predicate<System.Windows.Documents.Adorner>)
  type: Method
  source:
    id: ClearAdorner
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 462
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static bool ClearAdorner(this UIElement element, Predicate<Adorner> predicate = null)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: predicate
      type: System.Predicate{System.Windows.Documents.Adorner}
    return:
      type: System.Boolean
    content.vb: Public Shared Function ClearAdorner(element As UIElement, predicate As Predicate(Of Adorner) = Nothing) As Boolean
  overload: System.Windows.ElementExtention.ClearAdorner*
  nameWithType.vb: ElementExtention.ClearAdorner(UIElement, Predicate(Of Adorner))
  fullName.vb: System.Windows.ElementExtention.ClearAdorner(System.Windows.UIElement, System.Predicate(Of System.Windows.Documents.Adorner))
  name.vb: ClearAdorner(UIElement, Predicate(Of Adorner))
- uid: System.Windows.ElementExtention.HitTest``1(System.Windows.UIElement,System.Windows.Point,System.Predicate{``0})
  commentId: M:System.Windows.ElementExtention.HitTest``1(System.Windows.UIElement,System.Windows.Point,System.Predicate{``0})
  id: HitTest``1(System.Windows.UIElement,System.Windows.Point,System.Predicate{``0})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: HitTest<T>(UIElement, Point, Predicate<T>)
  nameWithType: ElementExtention.HitTest<T>(UIElement, Point, Predicate<T>)
  fullName: System.Windows.ElementExtention.HitTest<T>(System.Windows.UIElement, System.Windows.Point, System.Predicate<T>)
  type: Method
  source:
    id: HitTest
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 478
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: 'public static T HitTest<T>(this UIElement element, Point point, Predicate<T> predicate = null) where T : DependencyObject'
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: point
      type: System.Windows.Point
    - id: predicate
      type: System.Predicate{{T}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function HitTest(Of T As DependencyObject)(element As UIElement, point As Point, predicate As Predicate(Of T) = Nothing) As T
  overload: System.Windows.ElementExtention.HitTest*
  nameWithType.vb: ElementExtention.HitTest(Of T)(UIElement, Point, Predicate(Of T))
  fullName.vb: System.Windows.ElementExtention.HitTest(Of T)(System.Windows.UIElement, System.Windows.Point, System.Predicate(Of T))
  name.vb: HitTest(Of T)(UIElement, Point, Predicate(Of T))
- uid: System.Windows.ElementExtention.HitTest``1(System.Windows.UIElement,System.Windows.Point)
  commentId: M:System.Windows.ElementExtention.HitTest``1(System.Windows.UIElement,System.Windows.Point)
  id: HitTest``1(System.Windows.UIElement,System.Windows.Point)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: HitTest<T>(UIElement, Point)
  nameWithType: ElementExtention.HitTest<T>(UIElement, Point)
  fullName: System.Windows.ElementExtention.HitTest<T>(System.Windows.UIElement, System.Windows.Point)
  type: Method
  source:
    id: HitTest
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 513
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: 'public static T HitTest<T>(this UIElement element, Point point) where T : DependencyObject'
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: point
      type: System.Windows.Point
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function HitTest(Of T As DependencyObject)(element As UIElement, point As Point) As T
  overload: System.Windows.ElementExtention.HitTest*
  nameWithType.vb: ElementExtention.HitTest(Of T)(UIElement, Point)
  fullName.vb: System.Windows.ElementExtention.HitTest(Of T)(System.Windows.UIElement, System.Windows.Point)
  name.vb: HitTest(Of T)(UIElement, Point)
- uid: System.Windows.ElementExtention.HitTest``1(System.Windows.UIElement,System.Windows.Media.Geometry,System.Predicate{``0})
  commentId: M:System.Windows.ElementExtention.HitTest``1(System.Windows.UIElement,System.Windows.Media.Geometry,System.Predicate{``0})
  id: HitTest``1(System.Windows.UIElement,System.Windows.Media.Geometry,System.Predicate{``0})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: HitTest<T>(UIElement, Geometry, Predicate<T>)
  nameWithType: ElementExtention.HitTest<T>(UIElement, Geometry, Predicate<T>)
  fullName: System.Windows.ElementExtention.HitTest<T>(System.Windows.UIElement, System.Windows.Media.Geometry, System.Predicate<T>)
  type: Method
  source:
    id: HitTest
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 520
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: 'public static T HitTest<T>(this UIElement element, Geometry geometry, Predicate<T> predicate = null) where T : DependencyObject'
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: geometry
      type: System.Windows.Media.Geometry
    - id: predicate
      type: System.Predicate{{T}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function HitTest(Of T As DependencyObject)(element As UIElement, geometry As Geometry, predicate As Predicate(Of T) = Nothing) As T
  overload: System.Windows.ElementExtention.HitTest*
  nameWithType.vb: ElementExtention.HitTest(Of T)(UIElement, Geometry, Predicate(Of T))
  fullName.vb: System.Windows.ElementExtention.HitTest(Of T)(System.Windows.UIElement, System.Windows.Media.Geometry, System.Predicate(Of T))
  name.vb: HitTest(Of T)(UIElement, Geometry, Predicate(Of T))
- uid: System.Windows.ElementExtention.GetDataContext(System.Windows.UIElement)
  commentId: M:System.Windows.ElementExtention.GetDataContext(System.Windows.UIElement)
  id: GetDataContext(System.Windows.UIElement)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetDataContext(UIElement)
  nameWithType: ElementExtention.GetDataContext(UIElement)
  fullName: System.Windows.ElementExtention.GetDataContext(System.Windows.UIElement)
  type: Method
  source:
    id: GetDataContext
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 555
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static object GetDataContext(this UIElement element)
    parameters:
    - id: element
      type: System.Windows.UIElement
    return:
      type: System.Object
    content.vb: Public Shared Function GetDataContext(element As UIElement) As Object
  overload: System.Windows.ElementExtention.GetDataContext*
- uid: System.Windows.ElementExtention.GetContent(System.Windows.UIElement)
  commentId: M:System.Windows.ElementExtention.GetContent(System.Windows.UIElement)
  id: GetContent(System.Windows.UIElement)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetContent(UIElement)
  nameWithType: ElementExtention.GetContent(UIElement)
  fullName: System.Windows.ElementExtention.GetContent(System.Windows.UIElement)
  type: Method
  source:
    id: GetContent
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 560
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: public static object GetContent(this UIElement element)
    parameters:
    - id: element
      type: System.Windows.UIElement
    return:
      type: System.Object
    content.vb: Public Shared Function GetContent(element As UIElement) As Object
  overload: System.Windows.ElementExtention.GetContent*
- uid: System.Windows.ElementExtention.GetItemsSource``1(System.Windows.UIElement)
  commentId: M:System.Windows.ElementExtention.GetItemsSource``1(System.Windows.UIElement)
  id: GetItemsSource``1(System.Windows.UIElement)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetItemsSource<T>(UIElement)
  nameWithType: ElementExtention.GetItemsSource<T>(UIElement)
  fullName: System.Windows.ElementExtention.GetItemsSource<T>(System.Windows.UIElement)
  type: Method
  source:
    id: GetItemsSource
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.Common\Extention.Element.cs
    startLine: 571
  assemblies:
  - H.Extensions.Common
  namespace: System.Windows
  syntax:
    content: 'public static T GetItemsSource<T>(this UIElement element) where T : IEnumerable'
    parameters:
    - id: element
      type: System.Windows.UIElement
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetItemsSource(Of T As IEnumerable)(element As UIElement) As T
  overload: System.Windows.ElementExtention.GetItemsSource*
  nameWithType.vb: ElementExtention.GetItemsSource(Of T)(UIElement)
  fullName.vb: System.Windows.ElementExtention.GetItemsSource(Of T)(System.Windows.UIElement)
  name.vb: GetItemsSource(Of T)(UIElement)
- uid: System.Windows.ElementExtention.BegionDoubleStoryBoard(System.Windows.UIElement,System.Double,System.Double,System.Double,System.String,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  commentId: M:System.Windows.ElementExtention.BegionDoubleStoryBoard(System.Windows.UIElement,System.Double,System.Double,System.Double,System.String,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  id: BegionDoubleStoryBoard(System.Windows.UIElement,System.Double,System.Double,System.Double,System.String,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: BegionDoubleStoryBoard(UIElement, double, double, double, string, Action<UIElement>, Action<StoryboardEngineBase>)
  nameWithType: ElementExtention.BegionDoubleStoryBoard(UIElement, double, double, double, string, Action<UIElement>, Action<StoryboardEngineBase>)
  fullName: System.Windows.ElementExtention.BegionDoubleStoryBoard(System.Windows.UIElement, double, double, double, string, System.Action<System.Windows.UIElement>, System.Action<H.Extensions.StoryBoard.StoryboardEngineBase>)
  type: Method
  source:
    id: BegionDoubleStoryBoard
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 13
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  summary: 执行动画
  example: []
  syntax:
    content: public static StoryboardEngineBase BegionDoubleStoryBoard(this UIElement element, double start, double end, double duration, string propertyName, Action<UIElement> Completed = null, Action<StoryboardEngineBase> init = null)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: start
      type: System.Double
    - id: end
      type: System.Double
    - id: duration
      type: System.Double
    - id: propertyName
      type: System.String
    - id: Completed
      type: System.Action{System.Windows.UIElement}
    - id: init
      type: System.Action{H.Extensions.StoryBoard.StoryboardEngineBase}
    return:
      type: H.Extensions.StoryBoard.StoryboardEngineBase
    content.vb: Public Shared Function BegionDoubleStoryBoard(element As UIElement, start As Double, [end] As Double, duration As Double, propertyName As String, Completed As Action(Of UIElement) = Nothing, init As Action(Of StoryboardEngineBase) = Nothing) As StoryboardEngineBase
  overload: System.Windows.ElementExtention.BegionDoubleStoryBoard*
  nameWithType.vb: ElementExtention.BegionDoubleStoryBoard(UIElement, Double, Double, Double, String, Action(Of UIElement), Action(Of StoryboardEngineBase))
  fullName.vb: System.Windows.ElementExtention.BegionDoubleStoryBoard(System.Windows.UIElement, Double, Double, Double, String, System.Action(Of System.Windows.UIElement), System.Action(Of H.Extensions.StoryBoard.StoryboardEngineBase))
  name.vb: BegionDoubleStoryBoard(UIElement, Double, Double, Double, String, Action(Of UIElement), Action(Of StoryboardEngineBase))
- uid: System.Windows.ElementExtention.GetTransform``1(System.Windows.UIElement)
  commentId: M:System.Windows.ElementExtention.GetTransform``1(System.Windows.UIElement)
  id: GetTransform``1(System.Windows.UIElement)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: GetTransform<T>(UIElement)
  nameWithType: ElementExtention.GetTransform<T>(UIElement)
  fullName: System.Windows.ElementExtention.GetTransform<T>(System.Windows.UIElement)
  type: Method
  source:
    id: GetTransform
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 20
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  summary: 获取 RenderTransform 中 Transform 元素
  example: []
  syntax:
    content: 'public static T GetTransform<T>(this UIElement element) where T : Transform'
    parameters:
    - id: element
      type: System.Windows.UIElement
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetTransform(Of T As Transform)(element As UIElement) As T
  overload: System.Windows.ElementExtention.GetTransform*
  nameWithType.vb: ElementExtention.GetTransform(Of T)(UIElement)
  fullName.vb: System.Windows.ElementExtention.GetTransform(Of T)(System.Windows.UIElement)
  name.vb: GetTransform(Of T)(UIElement)
- uid: System.Windows.ElementExtention.CheckDefaultTransformGroup(System.Windows.UIElement)
  commentId: M:System.Windows.ElementExtention.CheckDefaultTransformGroup(System.Windows.UIElement)
  id: CheckDefaultTransformGroup(System.Windows.UIElement)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: CheckDefaultTransformGroup(UIElement)
  nameWithType: ElementExtention.CheckDefaultTransformGroup(UIElement)
  fullName: System.Windows.ElementExtention.CheckDefaultTransformGroup(System.Windows.UIElement)
  type: Method
  source:
    id: CheckDefaultTransformGroup
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 27
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  syntax:
    content: public static bool CheckDefaultTransformGroup(this UIElement element)
    parameters:
    - id: element
      type: System.Windows.UIElement
    return:
      type: System.Boolean
    content.vb: Public Shared Function CheckDefaultTransformGroup(element As UIElement) As Boolean
  overload: System.Windows.ElementExtention.CheckDefaultTransformGroup*
- uid: System.Windows.ElementExtention.BeginAnimationXY(System.Windows.UIElement,System.Double,System.Double,System.Double)
  commentId: M:System.Windows.ElementExtention.BeginAnimationXY(System.Windows.UIElement,System.Double,System.Double,System.Double)
  id: BeginAnimationXY(System.Windows.UIElement,System.Double,System.Double,System.Double)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: BeginAnimationXY(UIElement, double, double, double)
  nameWithType: ElementExtention.BeginAnimationXY(UIElement, double, double, double)
  fullName: System.Windows.ElementExtention.BeginAnimationXY(System.Windows.UIElement, double, double, double)
  type: Method
  source:
    id: BeginAnimationXY
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 49
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  syntax:
    content: public static void BeginAnimationXY(this UIElement element, double toX, double toY, double duration = 1000)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: toX
      type: System.Double
    - id: toY
      type: System.Double
    - id: duration
      type: System.Double
    content.vb: Public Shared Sub BeginAnimationXY(element As UIElement, toX As Double, toY As Double, duration As Double = 1000)
  overload: System.Windows.ElementExtention.BeginAnimationXY*
  nameWithType.vb: ElementExtention.BeginAnimationXY(UIElement, Double, Double, Double)
  fullName.vb: System.Windows.ElementExtention.BeginAnimationXY(System.Windows.UIElement, Double, Double, Double)
  name.vb: BeginAnimationXY(UIElement, Double, Double, Double)
- uid: System.Windows.ElementExtention.BeginAnimationScale(System.Windows.UIElement,System.Double,System.Double,System.Double)
  commentId: M:System.Windows.ElementExtention.BeginAnimationScale(System.Windows.UIElement,System.Double,System.Double,System.Double)
  id: BeginAnimationScale(System.Windows.UIElement,System.Double,System.Double,System.Double)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: BeginAnimationScale(UIElement, double, double, double)
  nameWithType: ElementExtention.BeginAnimationScale(UIElement, double, double, double)
  fullName: System.Windows.ElementExtention.BeginAnimationScale(System.Windows.UIElement, double, double, double)
  type: Method
  source:
    id: BeginAnimationScale
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 60
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  syntax:
    content: public static void BeginAnimationScale(this UIElement element, double scaleX, double scaleY, double duration = 1000)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: scaleX
      type: System.Double
    - id: scaleY
      type: System.Double
    - id: duration
      type: System.Double
    content.vb: Public Shared Sub BeginAnimationScale(element As UIElement, scaleX As Double, scaleY As Double, duration As Double = 1000)
  overload: System.Windows.ElementExtention.BeginAnimationScale*
  nameWithType.vb: ElementExtention.BeginAnimationScale(UIElement, Double, Double, Double)
  fullName.vb: System.Windows.ElementExtention.BeginAnimationScale(System.Windows.UIElement, Double, Double, Double)
  name.vb: BeginAnimationScale(UIElement, Double, Double, Double)
- uid: System.Windows.ElementExtention.BeginAnimationAngle(System.Windows.UIElement,System.Double,System.Double)
  commentId: M:System.Windows.ElementExtention.BeginAnimationAngle(System.Windows.UIElement,System.Double,System.Double)
  id: BeginAnimationAngle(System.Windows.UIElement,System.Double,System.Double)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: BeginAnimationAngle(UIElement, double, double)
  nameWithType: ElementExtention.BeginAnimationAngle(UIElement, double, double)
  fullName: System.Windows.ElementExtention.BeginAnimationAngle(System.Windows.UIElement, double, double)
  type: Method
  source:
    id: BeginAnimationAngle
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 71
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  syntax:
    content: public static void BeginAnimationAngle(this UIElement element, double toAngle, double duration = 1000)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: toAngle
      type: System.Double
    - id: duration
      type: System.Double
    content.vb: Public Shared Sub BeginAnimationAngle(element As UIElement, toAngle As Double, duration As Double = 1000)
  overload: System.Windows.ElementExtention.BeginAnimationAngle*
  nameWithType.vb: ElementExtention.BeginAnimationAngle(UIElement, Double, Double)
  fullName.vb: System.Windows.ElementExtention.BeginAnimationAngle(System.Windows.UIElement, Double, Double)
  name.vb: BeginAnimationAngle(UIElement, Double, Double)
- uid: System.Windows.ElementExtention.BeginAnimationOpacity(System.Windows.UIElement,System.Double,System.Double)
  commentId: M:System.Windows.ElementExtention.BeginAnimationOpacity(System.Windows.UIElement,System.Double,System.Double)
  id: BeginAnimationOpacity(System.Windows.UIElement,System.Double,System.Double)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: BeginAnimationOpacity(UIElement, double, double)
  nameWithType: ElementExtention.BeginAnimationOpacity(UIElement, double, double)
  fullName: System.Windows.ElementExtention.BeginAnimationOpacity(System.Windows.UIElement, double, double)
  type: Method
  source:
    id: BeginAnimationOpacity
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 80
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  syntax:
    content: public static void BeginAnimationOpacity(this UIElement element, double to, double duration = 1000)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: to
      type: System.Double
    - id: duration
      type: System.Double
    content.vb: Public Shared Sub BeginAnimationOpacity(element As UIElement, [to] As Double, duration As Double = 1000)
  overload: System.Windows.ElementExtention.BeginAnimationOpacity*
  nameWithType.vb: ElementExtention.BeginAnimationOpacity(UIElement, Double, Double)
  fullName.vb: System.Windows.ElementExtention.BeginAnimationOpacity(System.Windows.UIElement, Double, Double)
  name.vb: BeginAnimationOpacity(UIElement, Double, Double)
- uid: System.Windows.ElementExtention.BeginAnimationSkew(System.Windows.UIElement,System.Double,System.Double,System.Double)
  commentId: M:System.Windows.ElementExtention.BeginAnimationSkew(System.Windows.UIElement,System.Double,System.Double,System.Double)
  id: BeginAnimationSkew(System.Windows.UIElement,System.Double,System.Double,System.Double)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: BeginAnimationSkew(UIElement, double, double, double)
  nameWithType: ElementExtention.BeginAnimationSkew(UIElement, double, double, double)
  fullName: System.Windows.ElementExtention.BeginAnimationSkew(System.Windows.UIElement, double, double, double)
  type: Method
  source:
    id: BeginAnimationSkew
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 86
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  syntax:
    content: public static void BeginAnimationSkew(this UIElement element, double toAngleX, double toAngleY, double duration = 1000)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: toAngleX
      type: System.Double
    - id: toAngleY
      type: System.Double
    - id: duration
      type: System.Double
    content.vb: Public Shared Sub BeginAnimationSkew(element As UIElement, toAngleX As Double, toAngleY As Double, duration As Double = 1000)
  overload: System.Windows.ElementExtention.BeginAnimationSkew*
  nameWithType.vb: ElementExtention.BeginAnimationSkew(UIElement, Double, Double, Double)
  fullName.vb: System.Windows.ElementExtention.BeginAnimationSkew(System.Windows.UIElement, Double, Double, Double)
  name.vb: BeginAnimationSkew(UIElement, Double, Double, Double)
- uid: System.Windows.ElementExtention.BeginAnimationPath(System.Windows.UIElement,System.Windows.Media.PathGeometry,System.Double,System.Boolean,System.Boolean)
  commentId: M:System.Windows.ElementExtention.BeginAnimationPath(System.Windows.UIElement,System.Windows.Media.PathGeometry,System.Double,System.Boolean,System.Boolean)
  id: BeginAnimationPath(System.Windows.UIElement,System.Windows.Media.PathGeometry,System.Double,System.Boolean,System.Boolean)
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: BeginAnimationPath(UIElement, PathGeometry, double, bool, bool)
  nameWithType: ElementExtention.BeginAnimationPath(UIElement, PathGeometry, double, bool, bool)
  fullName: System.Windows.ElementExtention.BeginAnimationPath(System.Windows.UIElement, System.Windows.Media.PathGeometry, double, bool, bool)
  type: Method
  source:
    id: BeginAnimationPath
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 97
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  syntax:
    content: public static void BeginAnimationPath(this UIElement element, PathGeometry geometry, double duration = 1000, bool useAngle = true, bool reverse = false)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: geometry
      type: System.Windows.Media.PathGeometry
    - id: duration
      type: System.Double
    - id: useAngle
      type: System.Boolean
    - id: reverse
      type: System.Boolean
    content.vb: Public Shared Sub BeginAnimationPath(element As UIElement, geometry As PathGeometry, duration As Double = 1000, useAngle As Boolean = True, reverse As Boolean = False)
  overload: System.Windows.ElementExtention.BeginAnimationPath*
  nameWithType.vb: ElementExtention.BeginAnimationPath(UIElement, PathGeometry, Double, Boolean, Boolean)
  fullName.vb: System.Windows.ElementExtention.BeginAnimationPath(System.Windows.UIElement, System.Windows.Media.PathGeometry, Double, Boolean, Boolean)
  name.vb: BeginAnimationPath(UIElement, PathGeometry, Double, Boolean, Boolean)
- uid: System.Windows.ElementExtention.BeginAnimationOpacity(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  commentId: M:System.Windows.ElementExtention.BeginAnimationOpacity(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  id: BeginAnimationOpacity(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: BeginAnimationOpacity(UIElement, double, double, double, Action<UIElement>, Action<StoryboardEngineBase>)
  nameWithType: ElementExtention.BeginAnimationOpacity(UIElement, double, double, double, Action<UIElement>, Action<StoryboardEngineBase>)
  fullName: System.Windows.ElementExtention.BeginAnimationOpacity(System.Windows.UIElement, double, double, double, System.Action<System.Windows.UIElement>, System.Action<H.Extensions.StoryBoard.StoryboardEngineBase>)
  type: Method
  source:
    id: BeginAnimationOpacity
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 143
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  syntax:
    content: public static StoryboardEngineBase BeginAnimationOpacity(this UIElement element, double from, double to, double duration = 1000, Action<UIElement> Completed = null, Action<StoryboardEngineBase> init = null)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: from
      type: System.Double
    - id: to
      type: System.Double
    - id: duration
      type: System.Double
    - id: Completed
      type: System.Action{System.Windows.UIElement}
    - id: init
      type: System.Action{H.Extensions.StoryBoard.StoryboardEngineBase}
    return:
      type: H.Extensions.StoryBoard.StoryboardEngineBase
    content.vb: Public Shared Function BeginAnimationOpacity(element As UIElement, from As Double, [to] As Double, duration As Double = 1000, Completed As Action(Of UIElement) = Nothing, init As Action(Of StoryboardEngineBase) = Nothing) As StoryboardEngineBase
  overload: System.Windows.ElementExtention.BeginAnimationOpacity*
  nameWithType.vb: ElementExtention.BeginAnimationOpacity(UIElement, Double, Double, Double, Action(Of UIElement), Action(Of StoryboardEngineBase))
  fullName.vb: System.Windows.ElementExtention.BeginAnimationOpacity(System.Windows.UIElement, Double, Double, Double, System.Action(Of System.Windows.UIElement), System.Action(Of H.Extensions.StoryBoard.StoryboardEngineBase))
  name.vb: BeginAnimationOpacity(UIElement, Double, Double, Double, Action(Of UIElement), Action(Of StoryboardEngineBase))
- uid: System.Windows.ElementExtention.BeginAnimationX(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  commentId: M:System.Windows.ElementExtention.BeginAnimationX(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  id: BeginAnimationX(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: BeginAnimationX(UIElement, double, double, double, Action<UIElement>, Action<StoryboardEngineBase>)
  nameWithType: ElementExtention.BeginAnimationX(UIElement, double, double, double, Action<UIElement>, Action<StoryboardEngineBase>)
  fullName: System.Windows.ElementExtention.BeginAnimationX(System.Windows.UIElement, double, double, double, System.Action<System.Windows.UIElement>, System.Action<H.Extensions.StoryBoard.StoryboardEngineBase>)
  type: Method
  source:
    id: BeginAnimationX
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 148
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  syntax:
    content: public static StoryboardEngineBase BeginAnimationX(this UIElement element, double from, double to, double duration = 1000, Action<UIElement> Completed = null, Action<StoryboardEngineBase> init = null)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: from
      type: System.Double
    - id: to
      type: System.Double
    - id: duration
      type: System.Double
    - id: Completed
      type: System.Action{System.Windows.UIElement}
    - id: init
      type: System.Action{H.Extensions.StoryBoard.StoryboardEngineBase}
    return:
      type: H.Extensions.StoryBoard.StoryboardEngineBase
    content.vb: Public Shared Function BeginAnimationX(element As UIElement, from As Double, [to] As Double, duration As Double = 1000, Completed As Action(Of UIElement) = Nothing, init As Action(Of StoryboardEngineBase) = Nothing) As StoryboardEngineBase
  overload: System.Windows.ElementExtention.BeginAnimationX*
  nameWithType.vb: ElementExtention.BeginAnimationX(UIElement, Double, Double, Double, Action(Of UIElement), Action(Of StoryboardEngineBase))
  fullName.vb: System.Windows.ElementExtention.BeginAnimationX(System.Windows.UIElement, Double, Double, Double, System.Action(Of System.Windows.UIElement), System.Action(Of H.Extensions.StoryBoard.StoryboardEngineBase))
  name.vb: BeginAnimationX(UIElement, Double, Double, Double, Action(Of UIElement), Action(Of StoryboardEngineBase))
- uid: System.Windows.ElementExtention.BeginAnimationY(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  commentId: M:System.Windows.ElementExtention.BeginAnimationY(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  id: BeginAnimationY(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: BeginAnimationY(UIElement, double, double, double, Action<UIElement>, Action<StoryboardEngineBase>)
  nameWithType: ElementExtention.BeginAnimationY(UIElement, double, double, double, Action<UIElement>, Action<StoryboardEngineBase>)
  fullName: System.Windows.ElementExtention.BeginAnimationY(System.Windows.UIElement, double, double, double, System.Action<System.Windows.UIElement>, System.Action<H.Extensions.StoryBoard.StoryboardEngineBase>)
  type: Method
  source:
    id: BeginAnimationY
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 157
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  syntax:
    content: public static StoryboardEngineBase BeginAnimationY(this UIElement element, double from, double to, double duration = 1000, Action<UIElement> Completed = null, Action<StoryboardEngineBase> init = null)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: from
      type: System.Double
    - id: to
      type: System.Double
    - id: duration
      type: System.Double
    - id: Completed
      type: System.Action{System.Windows.UIElement}
    - id: init
      type: System.Action{H.Extensions.StoryBoard.StoryboardEngineBase}
    return:
      type: H.Extensions.StoryBoard.StoryboardEngineBase
    content.vb: Public Shared Function BeginAnimationY(element As UIElement, from As Double, [to] As Double, duration As Double = 1000, Completed As Action(Of UIElement) = Nothing, init As Action(Of StoryboardEngineBase) = Nothing) As StoryboardEngineBase
  overload: System.Windows.ElementExtention.BeginAnimationY*
  nameWithType.vb: ElementExtention.BeginAnimationY(UIElement, Double, Double, Double, Action(Of UIElement), Action(Of StoryboardEngineBase))
  fullName.vb: System.Windows.ElementExtention.BeginAnimationY(System.Windows.UIElement, Double, Double, Double, System.Action(Of System.Windows.UIElement), System.Action(Of H.Extensions.StoryBoard.StoryboardEngineBase))
  name.vb: BeginAnimationY(UIElement, Double, Double, Double, Action(Of UIElement), Action(Of StoryboardEngineBase))
- uid: System.Windows.ElementExtention.BeginAnimationScaleY(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  commentId: M:System.Windows.ElementExtention.BeginAnimationScaleY(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  id: BeginAnimationScaleY(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: BeginAnimationScaleY(UIElement, double, double, double, Action<UIElement>, Action<StoryboardEngineBase>)
  nameWithType: ElementExtention.BeginAnimationScaleY(UIElement, double, double, double, Action<UIElement>, Action<StoryboardEngineBase>)
  fullName: System.Windows.ElementExtention.BeginAnimationScaleY(System.Windows.UIElement, double, double, double, System.Action<System.Windows.UIElement>, System.Action<H.Extensions.StoryBoard.StoryboardEngineBase>)
  type: Method
  source:
    id: BeginAnimationScaleY
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 166
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  syntax:
    content: public static StoryboardEngineBase BeginAnimationScaleY(this UIElement element, double from, double to, double duration = 1000, Action<UIElement> Completed = null, Action<StoryboardEngineBase> init = null)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: from
      type: System.Double
    - id: to
      type: System.Double
    - id: duration
      type: System.Double
    - id: Completed
      type: System.Action{System.Windows.UIElement}
    - id: init
      type: System.Action{H.Extensions.StoryBoard.StoryboardEngineBase}
    return:
      type: H.Extensions.StoryBoard.StoryboardEngineBase
    content.vb: Public Shared Function BeginAnimationScaleY(element As UIElement, from As Double, [to] As Double, duration As Double = 1000, Completed As Action(Of UIElement) = Nothing, init As Action(Of StoryboardEngineBase) = Nothing) As StoryboardEngineBase
  overload: System.Windows.ElementExtention.BeginAnimationScaleY*
  nameWithType.vb: ElementExtention.BeginAnimationScaleY(UIElement, Double, Double, Double, Action(Of UIElement), Action(Of StoryboardEngineBase))
  fullName.vb: System.Windows.ElementExtention.BeginAnimationScaleY(System.Windows.UIElement, Double, Double, Double, System.Action(Of System.Windows.UIElement), System.Action(Of H.Extensions.StoryBoard.StoryboardEngineBase))
  name.vb: BeginAnimationScaleY(UIElement, Double, Double, Double, Action(Of UIElement), Action(Of StoryboardEngineBase))
- uid: System.Windows.ElementExtention.BeginAnimationScaleX(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  commentId: M:System.Windows.ElementExtention.BeginAnimationScaleX(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  id: BeginAnimationScaleX(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: BeginAnimationScaleX(UIElement, double, double, double, Action<UIElement>, Action<StoryboardEngineBase>)
  nameWithType: ElementExtention.BeginAnimationScaleX(UIElement, double, double, double, Action<UIElement>, Action<StoryboardEngineBase>)
  fullName: System.Windows.ElementExtention.BeginAnimationScaleX(System.Windows.UIElement, double, double, double, System.Action<System.Windows.UIElement>, System.Action<H.Extensions.StoryBoard.StoryboardEngineBase>)
  type: Method
  source:
    id: BeginAnimationScaleX
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 175
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  syntax:
    content: public static StoryboardEngineBase BeginAnimationScaleX(this UIElement element, double from, double to, double duration = 1000, Action<UIElement> Completed = null, Action<StoryboardEngineBase> init = null)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: from
      type: System.Double
    - id: to
      type: System.Double
    - id: duration
      type: System.Double
    - id: Completed
      type: System.Action{System.Windows.UIElement}
    - id: init
      type: System.Action{H.Extensions.StoryBoard.StoryboardEngineBase}
    return:
      type: H.Extensions.StoryBoard.StoryboardEngineBase
    content.vb: Public Shared Function BeginAnimationScaleX(element As UIElement, from As Double, [to] As Double, duration As Double = 1000, Completed As Action(Of UIElement) = Nothing, init As Action(Of StoryboardEngineBase) = Nothing) As StoryboardEngineBase
  overload: System.Windows.ElementExtention.BeginAnimationScaleX*
  nameWithType.vb: ElementExtention.BeginAnimationScaleX(UIElement, Double, Double, Double, Action(Of UIElement), Action(Of StoryboardEngineBase))
  fullName.vb: System.Windows.ElementExtention.BeginAnimationScaleX(System.Windows.UIElement, Double, Double, Double, System.Action(Of System.Windows.UIElement), System.Action(Of H.Extensions.StoryBoard.StoryboardEngineBase))
  name.vb: BeginAnimationScaleX(UIElement, Double, Double, Double, Action(Of UIElement), Action(Of StoryboardEngineBase))
- uid: System.Windows.ElementExtention.BeginAnimationSkewX(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  commentId: M:System.Windows.ElementExtention.BeginAnimationSkewX(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  id: BeginAnimationSkewX(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: BeginAnimationSkewX(UIElement, double, double, double, Action<UIElement>, Action<StoryboardEngineBase>)
  nameWithType: ElementExtention.BeginAnimationSkewX(UIElement, double, double, double, Action<UIElement>, Action<StoryboardEngineBase>)
  fullName: System.Windows.ElementExtention.BeginAnimationSkewX(System.Windows.UIElement, double, double, double, System.Action<System.Windows.UIElement>, System.Action<H.Extensions.StoryBoard.StoryboardEngineBase>)
  type: Method
  source:
    id: BeginAnimationSkewX
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 184
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  syntax:
    content: public static StoryboardEngineBase BeginAnimationSkewX(this UIElement element, double from, double to, double duration = 1000, Action<UIElement> Completed = null, Action<StoryboardEngineBase> init = null)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: from
      type: System.Double
    - id: to
      type: System.Double
    - id: duration
      type: System.Double
    - id: Completed
      type: System.Action{System.Windows.UIElement}
    - id: init
      type: System.Action{H.Extensions.StoryBoard.StoryboardEngineBase}
    return:
      type: H.Extensions.StoryBoard.StoryboardEngineBase
    content.vb: Public Shared Function BeginAnimationSkewX(element As UIElement, from As Double, [to] As Double, duration As Double = 1000, Completed As Action(Of UIElement) = Nothing, init As Action(Of StoryboardEngineBase) = Nothing) As StoryboardEngineBase
  overload: System.Windows.ElementExtention.BeginAnimationSkewX*
  nameWithType.vb: ElementExtention.BeginAnimationSkewX(UIElement, Double, Double, Double, Action(Of UIElement), Action(Of StoryboardEngineBase))
  fullName.vb: System.Windows.ElementExtention.BeginAnimationSkewX(System.Windows.UIElement, Double, Double, Double, System.Action(Of System.Windows.UIElement), System.Action(Of H.Extensions.StoryBoard.StoryboardEngineBase))
  name.vb: BeginAnimationSkewX(UIElement, Double, Double, Double, Action(Of UIElement), Action(Of StoryboardEngineBase))
- uid: System.Windows.ElementExtention.BeginAnimationSkewY(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  commentId: M:System.Windows.ElementExtention.BeginAnimationSkewY(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  id: BeginAnimationSkewY(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: BeginAnimationSkewY(UIElement, double, double, double, Action<UIElement>, Action<StoryboardEngineBase>)
  nameWithType: ElementExtention.BeginAnimationSkewY(UIElement, double, double, double, Action<UIElement>, Action<StoryboardEngineBase>)
  fullName: System.Windows.ElementExtention.BeginAnimationSkewY(System.Windows.UIElement, double, double, double, System.Action<System.Windows.UIElement>, System.Action<H.Extensions.StoryBoard.StoryboardEngineBase>)
  type: Method
  source:
    id: BeginAnimationSkewY
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 193
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  syntax:
    content: public static void BeginAnimationSkewY(this UIElement element, double from, double to, double duration = 1000, Action<UIElement> Completed = null, Action<StoryboardEngineBase> init = null)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: from
      type: System.Double
    - id: to
      type: System.Double
    - id: duration
      type: System.Double
    - id: Completed
      type: System.Action{System.Windows.UIElement}
    - id: init
      type: System.Action{H.Extensions.StoryBoard.StoryboardEngineBase}
    content.vb: Public Shared Sub BeginAnimationSkewY(element As UIElement, from As Double, [to] As Double, duration As Double = 1000, Completed As Action(Of UIElement) = Nothing, init As Action(Of StoryboardEngineBase) = Nothing)
  overload: System.Windows.ElementExtention.BeginAnimationSkewY*
  nameWithType.vb: ElementExtention.BeginAnimationSkewY(UIElement, Double, Double, Double, Action(Of UIElement), Action(Of StoryboardEngineBase))
  fullName.vb: System.Windows.ElementExtention.BeginAnimationSkewY(System.Windows.UIElement, Double, Double, Double, System.Action(Of System.Windows.UIElement), System.Action(Of H.Extensions.StoryBoard.StoryboardEngineBase))
  name.vb: BeginAnimationSkewY(UIElement, Double, Double, Double, Action(Of UIElement), Action(Of StoryboardEngineBase))
- uid: System.Windows.ElementExtention.BeginAnimationAngle(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  commentId: M:System.Windows.ElementExtention.BeginAnimationAngle(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  id: BeginAnimationAngle(System.Windows.UIElement,System.Double,System.Double,System.Double,System.Action{System.Windows.UIElement},System.Action{H.Extensions.StoryBoard.StoryboardEngineBase})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: BeginAnimationAngle(UIElement, double, double, double, Action<UIElement>, Action<StoryboardEngineBase>)
  nameWithType: ElementExtention.BeginAnimationAngle(UIElement, double, double, double, Action<UIElement>, Action<StoryboardEngineBase>)
  fullName: System.Windows.ElementExtention.BeginAnimationAngle(System.Windows.UIElement, double, double, double, System.Action<System.Windows.UIElement>, System.Action<H.Extensions.StoryBoard.StoryboardEngineBase>)
  type: Method
  source:
    id: BeginAnimationAngle
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 202
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  syntax:
    content: public static StoryboardEngineBase BeginAnimationAngle(this UIElement element, double from, double to, double duration = 1000, Action<UIElement> Completed = null, Action<StoryboardEngineBase> init = null)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: from
      type: System.Double
    - id: to
      type: System.Double
    - id: duration
      type: System.Double
    - id: Completed
      type: System.Action{System.Windows.UIElement}
    - id: init
      type: System.Action{H.Extensions.StoryBoard.StoryboardEngineBase}
    return:
      type: H.Extensions.StoryBoard.StoryboardEngineBase
    content.vb: Public Shared Function BeginAnimationAngle(element As UIElement, from As Double, [to] As Double, duration As Double = 1000, Completed As Action(Of UIElement) = Nothing, init As Action(Of StoryboardEngineBase) = Nothing) As StoryboardEngineBase
  overload: System.Windows.ElementExtention.BeginAnimationAngle*
  nameWithType.vb: ElementExtention.BeginAnimationAngle(UIElement, Double, Double, Double, Action(Of UIElement), Action(Of StoryboardEngineBase))
  fullName.vb: System.Windows.ElementExtention.BeginAnimationAngle(System.Windows.UIElement, Double, Double, Double, System.Action(Of System.Windows.UIElement), System.Action(Of H.Extensions.StoryBoard.StoryboardEngineBase))
  name.vb: BeginAnimationAngle(UIElement, Double, Double, Double, Action(Of UIElement), Action(Of StoryboardEngineBase))
- uid: System.Windows.ElementExtention.Wait(System.Windows.UIElement,System.Double,System.Action{System.Windows.UIElement})
  commentId: M:System.Windows.ElementExtention.Wait(System.Windows.UIElement,System.Double,System.Action{System.Windows.UIElement})
  id: Wait(System.Windows.UIElement,System.Double,System.Action{System.Windows.UIElement})
  isExtensionMethod: true
  parent: System.Windows.ElementExtention
  langs:
  - csharp
  - vb
  name: Wait(UIElement, double, Action<UIElement>)
  nameWithType: ElementExtention.Wait(UIElement, double, Action<UIElement>)
  fullName: System.Windows.ElementExtention.Wait(System.Windows.UIElement, double, System.Action<System.Windows.UIElement>)
  type: Method
  source:
    id: Wait
    path: H:\Github\WPF-Control-Docs\Source\WPF-Control\Source\Extensions\H.Extensions.StoryBoard\ElementExtention.cs
    startLine: 211
  assemblies:
  - H.Extensions.StoryBoard
  namespace: System.Windows
  syntax:
    content: public static void Wait(this UIElement element, double duration = 1000, Action<UIElement> Completed = null)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: duration
      type: System.Double
    - id: Completed
      type: System.Action{System.Windows.UIElement}
    content.vb: Public Shared Sub Wait(element As UIElement, duration As Double = 1000, Completed As Action(Of UIElement) = Nothing)
  overload: System.Windows.ElementExtention.Wait*
  nameWithType.vb: ElementExtention.Wait(UIElement, Double, Action(Of UIElement))
  fullName.vb: System.Windows.ElementExtention.Wait(System.Windows.UIElement, Double, System.Action(Of System.Windows.UIElement))
  name.vb: Wait(UIElement, Double, Action(Of UIElement))
references:
- uid: System.Windows
  commentId: N:System.Windows
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
  spec.csharp:
  - uid: System
    name: System
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    href: https://learn.microsoft.com/dotnet/api/system.windows
  spec.vb:
  - uid: System
    name: System
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    href: https://learn.microsoft.com/dotnet/api/system.windows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.ElementExtention.BindCommand*
  commentId: Overload:System.Windows.ElementExtention.BindCommand
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_BindCommand_System_Windows_UIElement_System_Windows_Input_ICommand_System_Action_System_Object_System_Windows_Input_ExecutedRoutedEventArgs__
  name: BindCommand
  nameWithType: ElementExtention.BindCommand
  fullName: System.Windows.ElementExtention.BindCommand
- uid: System.Windows.UIElement
  commentId: T:System.Windows.UIElement
  parent: System.Windows
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.uielement
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Windows.Input.ICommand
  commentId: T:System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.Action{System.Object,System.Windows.Input.ExecutedRoutedEventArgs}
  commentId: T:System.Action{System.Object,System.Windows.Input.ExecutedRoutedEventArgs}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<object, ExecutedRoutedEventArgs>
  nameWithType: Action<object, ExecutedRoutedEventArgs>
  fullName: System.Action<object, System.Windows.Input.ExecutedRoutedEventArgs>
  nameWithType.vb: Action(Of Object, ExecutedRoutedEventArgs)
  fullName.vb: System.Action(Of Object, System.Windows.Input.ExecutedRoutedEventArgs)
  name.vb: Action(Of Object, ExecutedRoutedEventArgs)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Windows.Input.ExecutedRoutedEventArgs
    name: ExecutedRoutedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.executedroutedeventargs
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Windows.Input.ExecutedRoutedEventArgs
    name: ExecutedRoutedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.executedroutedeventargs
  - name: )
- uid: System.Windows.Input
  commentId: N:System.Windows.Input
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Input
  nameWithType: System.Windows.Input
  fullName: System.Windows.Input
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Input
    name: Input
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Input
    name: Input
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.Windows.ElementExtention.Visible*
  commentId: Overload:System.Windows.ElementExtention.Visible
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_Visible_System_Windows_UIElement_
  name: Visible
  nameWithType: ElementExtention.Visible
  fullName: System.Windows.ElementExtention.Visible
- uid: System.Windows.ElementExtention.VisibilityWith*
  commentId: Overload:System.Windows.ElementExtention.VisibilityWith
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_VisibilityWith_System_Windows_UIElement_System_Boolean_
  name: VisibilityWith
  nameWithType: ElementExtention.VisibilityWith
  fullName: System.Windows.ElementExtention.VisibilityWith
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Windows.ElementExtention.Hidden*
  commentId: Overload:System.Windows.ElementExtention.Hidden
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_Hidden_System_Windows_UIElement_
  name: Hidden
  nameWithType: ElementExtention.Hidden
  fullName: System.Windows.ElementExtention.Hidden
- uid: System.Windows.ElementExtention.Collapsed*
  commentId: Overload:System.Windows.ElementExtention.Collapsed
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_Collapsed_System_Windows_UIElement_
  name: Collapsed
  nameWithType: ElementExtention.Collapsed
  fullName: System.Windows.ElementExtention.Collapsed
- uid: System.Windows.ElementExtention.GetChild*
  commentId: Overload:System.Windows.ElementExtention.GetChild
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_GetChild__1_System_Windows_DependencyObject_System_Func___0_System_Boolean__
  name: GetChild
  nameWithType: ElementExtention.GetChild
  fullName: System.Windows.ElementExtention.GetChild
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.dependencyobject
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Func{{T},System.Boolean}
  commentId: T:System.Func{``0,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, bool>
  nameWithType: Func<T, bool>
  fullName: System.Func<T, bool>
  nameWithType.vb: Func(Of T, Boolean)
  fullName.vb: System.Func(Of T, Boolean)
  name.vb: Func(Of T, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Windows.ElementExtention.GetChildren*
  commentId: Overload:System.Windows.ElementExtention.GetChildren
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_GetChildren__1_System_Windows_DependencyObject_System_Func___0_System_Boolean__System_Boolean_
  name: GetChildren
  nameWithType: ElementExtention.GetChildren
  fullName: System.Windows.ElementExtention.GetChildren
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Windows.ElementExtention.GetParent*
  commentId: Overload:System.Windows.ElementExtention.GetParent
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_GetParent__1_System_Windows_DependencyObject_
  name: GetParent
  nameWithType: ElementExtention.GetParent
  fullName: System.Windows.ElementExtention.GetParent
- uid: System.Windows.ElementExtention.GetTemplateByName*
  commentId: Overload:System.Windows.ElementExtention.GetTemplateByName
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_GetTemplateByName__1_System_Windows_Controls_Control_System_String_
  name: GetTemplateByName
  nameWithType: ElementExtention.GetTemplateByName
  fullName: System.Windows.ElementExtention.GetTemplateByName
- uid: System.Windows.Controls.Control
  commentId: T:System.Windows.Controls.Control
  parent: System.Windows.Controls
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.controls.control
  name: Control
  nameWithType: Control
  fullName: System.Windows.Controls.Control
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Controls
    name: Controls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.controls
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Controls
    name: Controls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.controls
- uid: System.Windows.ElementExtention.GetElement*
  commentId: Overload:System.Windows.ElementExtention.GetElement
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_GetElement__1_System_Windows_DependencyObject_
  name: GetElement
  nameWithType: ElementExtention.GetElement
  fullName: System.Windows.ElementExtention.GetElement
- uid: System.Windows.ElementExtention.GetElements*
  commentId: Overload:System.Windows.ElementExtention.GetElements
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_GetElements__1_System_Windows_DependencyObject_
  name: GetElements
  nameWithType: ElementExtention.GetElements
  fullName: System.Windows.ElementExtention.GetElements
- uid: System.Windows.ElementExtention.TryGetVisualStateGroup*
  commentId: Overload:System.Windows.ElementExtention.TryGetVisualStateGroup
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_TryGetVisualStateGroup_System_Windows_DependencyObject_System_String_
  name: TryGetVisualStateGroup
  nameWithType: ElementExtention.TryGetVisualStateGroup
  fullName: System.Windows.ElementExtention.TryGetVisualStateGroup
- uid: System.Windows.VisualStateGroup
  commentId: T:System.Windows.VisualStateGroup
  parent: System.Windows
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.visualstategroup
  name: VisualStateGroup
  nameWithType: VisualStateGroup
  fullName: System.Windows.VisualStateGroup
- uid: System.Windows.ElementExtention.GetImplementationRoot*
  commentId: Overload:System.Windows.ElementExtention.GetImplementationRoot
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_GetImplementationRoot_System_Windows_DependencyObject_
  name: GetImplementationRoot
  nameWithType: ElementExtention.GetImplementationRoot
  fullName: System.Windows.ElementExtention.GetImplementationRoot
- uid: System.Windows.FrameworkElement
  commentId: T:System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.frameworkelement
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.ElementExtention.PrintVisualTree*
  commentId: Overload:System.Windows.ElementExtention.PrintVisualTree
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_PrintVisualTree_System_Windows_DependencyObject_
  name: PrintVisualTree
  nameWithType: ElementExtention.PrintVisualTree
  fullName: System.Windows.ElementExtention.PrintVisualTree
- uid: System.Collections.Generic.IEnumerable{System.Windows.DependencyObject}
  commentId: T:System.Collections.Generic.IEnumerable{System.Windows.DependencyObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<DependencyObject>
  nameWithType: IEnumerable<DependencyObject>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.DependencyObject>
  nameWithType.vb: IEnumerable(Of DependencyObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Windows.DependencyObject)
  name.vb: IEnumerable(Of DependencyObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.dependencyobject
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.dependencyobject
  - name: )
- uid: System.Windows.ElementExtention.PrintLogicalTree*
  commentId: Overload:System.Windows.ElementExtention.PrintLogicalTree
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_PrintLogicalTree_System_Windows_DependencyObject_
  name: PrintLogicalTree
  nameWithType: ElementExtention.PrintLogicalTree
  fullName: System.Windows.ElementExtention.PrintLogicalTree
- uid: System.Windows.ElementExtention.FindAllVisualChild*
  commentId: Overload:System.Windows.ElementExtention.FindAllVisualChild
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_FindAllVisualChild__1_System_Windows_DependencyObject_System_Predicate___0__
  name: FindAllVisualChild
  nameWithType: ElementExtention.FindAllVisualChild
  fullName: System.Windows.ElementExtention.FindAllVisualChild
- uid: System.Predicate{{T}}
  commentId: T:System.Predicate{``0}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Windows.ElementExtention.Ancestors*
  commentId: Overload:System.Windows.ElementExtention.Ancestors
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_Ancestors_System_Windows_DependencyObject_
  name: Ancestors
  nameWithType: ElementExtention.Ancestors
  fullName: System.Windows.ElementExtention.Ancestors
- uid: System.Windows.ElementExtention.AncestorsAndSelf*
  commentId: Overload:System.Windows.ElementExtention.AncestorsAndSelf
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_AncestorsAndSelf_System_Windows_DependencyObject_
  name: AncestorsAndSelf
  nameWithType: ElementExtention.AncestorsAndSelf
  fullName: System.Windows.ElementExtention.AncestorsAndSelf
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.ElementExtention.GetValueSync*
  commentId: Overload:System.Windows.ElementExtention.GetValueSync
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_GetValueSync__1_System_Windows_DependencyObject_System_Windows_DependencyProperty_
  name: GetValueSync
  nameWithType: ElementExtention.GetValueSync
  fullName: System.Windows.ElementExtention.GetValueSync
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.dependencyproperty
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.ElementExtention.SetValueSync*
  commentId: Overload:System.Windows.ElementExtention.SetValueSync
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_SetValueSync__1_System_Windows_DependencyObject_System_Windows_DependencyProperty___0_
  name: SetValueSync
  nameWithType: ElementExtention.SetValueSync
  fullName: System.Windows.ElementExtention.SetValueSync
- uid: System.Windows.ElementExtention.GetImage*
  commentId: Overload:System.Windows.ElementExtention.GetImage
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_GetImage_System_Windows_UIElement_
  name: GetImage
  nameWithType: ElementExtention.GetImage
  fullName: System.Windows.ElementExtention.GetImage
- uid: System.Windows.Media.Imaging.BitmapSource
  commentId: T:System.Windows.Media.Imaging.BitmapSource
  parent: System.Windows.Media.Imaging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.media.imaging.bitmapsource
  name: BitmapSource
  nameWithType: BitmapSource
  fullName: System.Windows.Media.Imaging.BitmapSource
- uid: System.Windows.Media.Imaging
  commentId: N:System.Windows.Media.Imaging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Media.Imaging
  nameWithType: System.Windows.Media.Imaging
  fullName: System.Windows.Media.Imaging
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Media
    name: Media
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.media
  - name: .
  - uid: System.Windows.Media.Imaging
    name: Imaging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.media.imaging
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Media
    name: Media
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.media
  - name: .
  - uid: System.Windows.Media.Imaging
    name: Imaging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.media.imaging
- uid: System.Windows.ElementExtention.GetAdorners*
  commentId: Overload:System.Windows.ElementExtention.GetAdorners
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_GetAdorners_System_Windows_UIElement_System_Predicate_System_Windows_Documents_Adorner__
  name: GetAdorners
  nameWithType: ElementExtention.GetAdorners
  fullName: System.Windows.ElementExtention.GetAdorners
- uid: System.Predicate{System.Windows.Documents.Adorner}
  commentId: T:System.Predicate{System.Windows.Documents.Adorner}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<Adorner>
  nameWithType: Predicate<Adorner>
  fullName: System.Predicate<System.Windows.Documents.Adorner>
  nameWithType.vb: Predicate(Of Adorner)
  fullName.vb: System.Predicate(Of System.Windows.Documents.Adorner)
  name.vb: Predicate(Of Adorner)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Windows.Documents.Adorner
    name: Adorner
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.documents.adorner
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Windows.Documents.Adorner
    name: Adorner
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.documents.adorner
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Windows.Documents.Adorner}
  commentId: T:System.Collections.Generic.IEnumerable{System.Windows.Documents.Adorner}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Adorner>
  nameWithType: IEnumerable<Adorner>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Documents.Adorner>
  nameWithType.vb: IEnumerable(Of Adorner)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Windows.Documents.Adorner)
  name.vb: IEnumerable(Of Adorner)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Windows.Documents.Adorner
    name: Adorner
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.documents.adorner
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Windows.Documents.Adorner
    name: Adorner
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.documents.adorner
  - name: )
- uid: System.Windows.ElementExtention.GetAdorner*
  commentId: Overload:System.Windows.ElementExtention.GetAdorner
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_GetAdorner_System_Windows_UIElement_System_Predicate_System_Windows_Documents_Adorner__
  name: GetAdorner
  nameWithType: ElementExtention.GetAdorner
  fullName: System.Windows.ElementExtention.GetAdorner
- uid: System.Windows.Documents.Adorner
  commentId: T:System.Windows.Documents.Adorner
  parent: System.Windows.Documents
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.documents.adorner
  name: Adorner
  nameWithType: Adorner
  fullName: System.Windows.Documents.Adorner
- uid: System.Windows.Documents
  commentId: N:System.Windows.Documents
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Documents
  nameWithType: System.Windows.Documents
  fullName: System.Windows.Documents
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Documents
    name: Documents
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.documents
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Documents
    name: Documents
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.documents
- uid: System.Windows.ElementExtention.AddAdorner*
  commentId: Overload:System.Windows.ElementExtention.AddAdorner
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_AddAdorner_System_Windows_UIElement_System_Windows_Documents_Adorner_
  name: AddAdorner
  nameWithType: ElementExtention.AddAdorner
  fullName: System.Windows.ElementExtention.AddAdorner
- uid: System.Windows.ElementExtention.ClearAdorner*
  commentId: Overload:System.Windows.ElementExtention.ClearAdorner
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_ClearAdorner_System_Windows_UIElement_System_Predicate_System_Windows_Documents_Adorner__
  name: ClearAdorner
  nameWithType: ElementExtention.ClearAdorner
  fullName: System.Windows.ElementExtention.ClearAdorner
- uid: System.Windows.ElementExtention.HitTest*
  commentId: Overload:System.Windows.ElementExtention.HitTest
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_HitTest__1_System_Windows_UIElement_System_Windows_Point_System_Predicate___0__
  name: HitTest
  nameWithType: ElementExtention.HitTest
  fullName: System.Windows.ElementExtention.HitTest
- uid: System.Windows.Point
  commentId: T:System.Windows.Point
  parent: System.Windows
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.point
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Media.Geometry
  commentId: T:System.Windows.Media.Geometry
  parent: System.Windows.Media
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.media.geometry
  name: Geometry
  nameWithType: Geometry
  fullName: System.Windows.Media.Geometry
- uid: System.Windows.Media
  commentId: N:System.Windows.Media
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Media
  nameWithType: System.Windows.Media
  fullName: System.Windows.Media
  spec.csharp:
  - uid: System
    name: System
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Media
    name: Media
    href: https://learn.microsoft.com/dotnet/api/system.windows.media
  spec.vb:
  - uid: System
    name: System
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Media
    name: Media
    href: https://learn.microsoft.com/dotnet/api/system.windows.media
- uid: System.Windows.ElementExtention.GetDataContext*
  commentId: Overload:System.Windows.ElementExtention.GetDataContext
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_GetDataContext_System_Windows_UIElement_
  name: GetDataContext
  nameWithType: ElementExtention.GetDataContext
  fullName: System.Windows.ElementExtention.GetDataContext
- uid: System.Windows.ElementExtention.GetContent*
  commentId: Overload:System.Windows.ElementExtention.GetContent
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_GetContent_System_Windows_UIElement_
  name: GetContent
  nameWithType: ElementExtention.GetContent
  fullName: System.Windows.ElementExtention.GetContent
- uid: System.Windows.ElementExtention.GetItemsSource*
  commentId: Overload:System.Windows.ElementExtention.GetItemsSource
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_GetItemsSource__1_System_Windows_UIElement_
  name: GetItemsSource
  nameWithType: ElementExtention.GetItemsSource
  fullName: System.Windows.ElementExtention.GetItemsSource
- uid: System.Windows.ElementExtention.BegionDoubleStoryBoard*
  commentId: Overload:System.Windows.ElementExtention.BegionDoubleStoryBoard
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_BegionDoubleStoryBoard_System_Windows_UIElement_System_Double_System_Double_System_Double_System_String_System_Action_System_Windows_UIElement__System_Action_H_Extensions_StoryBoard_StoryboardEngineBase__
  name: BegionDoubleStoryBoard
  nameWithType: ElementExtention.BegionDoubleStoryBoard
  fullName: System.Windows.ElementExtention.BegionDoubleStoryBoard
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Action{System.Windows.UIElement}
  commentId: T:System.Action{System.Windows.UIElement}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<UIElement>
  nameWithType: Action<UIElement>
  fullName: System.Action<System.Windows.UIElement>
  nameWithType.vb: Action(Of UIElement)
  fullName.vb: System.Action(Of System.Windows.UIElement)
  name.vb: Action(Of UIElement)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Windows.UIElement
    name: UIElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.uielement
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Windows.UIElement
    name: UIElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.uielement
  - name: )
- uid: System.Action{H.Extensions.StoryBoard.StoryboardEngineBase}
  commentId: T:System.Action{H.Extensions.StoryBoard.StoryboardEngineBase}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<StoryboardEngineBase>
  nameWithType: Action<StoryboardEngineBase>
  fullName: System.Action<H.Extensions.StoryBoard.StoryboardEngineBase>
  nameWithType.vb: Action(Of StoryboardEngineBase)
  fullName.vb: System.Action(Of H.Extensions.StoryBoard.StoryboardEngineBase)
  name.vb: Action(Of StoryboardEngineBase)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: H.Extensions.StoryBoard.StoryboardEngineBase
    name: StoryboardEngineBase
    href: H.Extensions.StoryBoard.StoryboardEngineBase.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: H.Extensions.StoryBoard.StoryboardEngineBase
    name: StoryboardEngineBase
    href: H.Extensions.StoryBoard.StoryboardEngineBase.html
  - name: )
- uid: H.Extensions.StoryBoard.StoryboardEngineBase
  commentId: T:H.Extensions.StoryBoard.StoryboardEngineBase
  parent: H.Extensions.StoryBoard
  href: H.Extensions.StoryBoard.StoryboardEngineBase.html
  name: StoryboardEngineBase
  nameWithType: StoryboardEngineBase
  fullName: H.Extensions.StoryBoard.StoryboardEngineBase
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: H.Extensions.StoryBoard
  commentId: N:H.Extensions.StoryBoard
  href: H.html
  name: H.Extensions.StoryBoard
  nameWithType: H.Extensions.StoryBoard
  fullName: H.Extensions.StoryBoard
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.StoryBoard
    name: StoryBoard
    href: H.Extensions.StoryBoard.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Extensions
    name: Extensions
    href: H.Extensions.html
  - name: .
  - uid: H.Extensions.StoryBoard
    name: StoryBoard
    href: H.Extensions.StoryBoard.html
- uid: System.Windows.ElementExtention.GetTransform*
  commentId: Overload:System.Windows.ElementExtention.GetTransform
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_GetTransform__1_System_Windows_UIElement_
  name: GetTransform
  nameWithType: ElementExtention.GetTransform
  fullName: System.Windows.ElementExtention.GetTransform
- uid: System.Windows.ElementExtention.CheckDefaultTransformGroup*
  commentId: Overload:System.Windows.ElementExtention.CheckDefaultTransformGroup
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_CheckDefaultTransformGroup_System_Windows_UIElement_
  name: CheckDefaultTransformGroup
  nameWithType: ElementExtention.CheckDefaultTransformGroup
  fullName: System.Windows.ElementExtention.CheckDefaultTransformGroup
- uid: System.Windows.ElementExtention.BeginAnimationXY*
  commentId: Overload:System.Windows.ElementExtention.BeginAnimationXY
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_BeginAnimationXY_System_Windows_UIElement_System_Double_System_Double_System_Double_
  name: BeginAnimationXY
  nameWithType: ElementExtention.BeginAnimationXY
  fullName: System.Windows.ElementExtention.BeginAnimationXY
- uid: System.Windows.ElementExtention.BeginAnimationScale*
  commentId: Overload:System.Windows.ElementExtention.BeginAnimationScale
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_BeginAnimationScale_System_Windows_UIElement_System_Double_System_Double_System_Double_
  name: BeginAnimationScale
  nameWithType: ElementExtention.BeginAnimationScale
  fullName: System.Windows.ElementExtention.BeginAnimationScale
- uid: System.Windows.ElementExtention.BeginAnimationAngle*
  commentId: Overload:System.Windows.ElementExtention.BeginAnimationAngle
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_BeginAnimationAngle_System_Windows_UIElement_System_Double_System_Double_
  name: BeginAnimationAngle
  nameWithType: ElementExtention.BeginAnimationAngle
  fullName: System.Windows.ElementExtention.BeginAnimationAngle
- uid: System.Windows.ElementExtention.BeginAnimationOpacity*
  commentId: Overload:System.Windows.ElementExtention.BeginAnimationOpacity
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_BeginAnimationOpacity_System_Windows_UIElement_System_Double_System_Double_
  name: BeginAnimationOpacity
  nameWithType: ElementExtention.BeginAnimationOpacity
  fullName: System.Windows.ElementExtention.BeginAnimationOpacity
- uid: System.Windows.ElementExtention.BeginAnimationSkew*
  commentId: Overload:System.Windows.ElementExtention.BeginAnimationSkew
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_BeginAnimationSkew_System_Windows_UIElement_System_Double_System_Double_System_Double_
  name: BeginAnimationSkew
  nameWithType: ElementExtention.BeginAnimationSkew
  fullName: System.Windows.ElementExtention.BeginAnimationSkew
- uid: System.Windows.ElementExtention.BeginAnimationPath*
  commentId: Overload:System.Windows.ElementExtention.BeginAnimationPath
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_BeginAnimationPath_System_Windows_UIElement_System_Windows_Media_PathGeometry_System_Double_System_Boolean_System_Boolean_
  name: BeginAnimationPath
  nameWithType: ElementExtention.BeginAnimationPath
  fullName: System.Windows.ElementExtention.BeginAnimationPath
- uid: System.Windows.Media.PathGeometry
  commentId: T:System.Windows.Media.PathGeometry
  parent: System.Windows.Media
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.media.pathgeometry
  name: PathGeometry
  nameWithType: PathGeometry
  fullName: System.Windows.Media.PathGeometry
- uid: System.Windows.ElementExtention.BeginAnimationX*
  commentId: Overload:System.Windows.ElementExtention.BeginAnimationX
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_BeginAnimationX_System_Windows_UIElement_System_Double_System_Double_System_Double_System_Action_System_Windows_UIElement__System_Action_H_Extensions_StoryBoard_StoryboardEngineBase__
  name: BeginAnimationX
  nameWithType: ElementExtention.BeginAnimationX
  fullName: System.Windows.ElementExtention.BeginAnimationX
- uid: System.Windows.ElementExtention.BeginAnimationY*
  commentId: Overload:System.Windows.ElementExtention.BeginAnimationY
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_BeginAnimationY_System_Windows_UIElement_System_Double_System_Double_System_Double_System_Action_System_Windows_UIElement__System_Action_H_Extensions_StoryBoard_StoryboardEngineBase__
  name: BeginAnimationY
  nameWithType: ElementExtention.BeginAnimationY
  fullName: System.Windows.ElementExtention.BeginAnimationY
- uid: System.Windows.ElementExtention.BeginAnimationScaleY*
  commentId: Overload:System.Windows.ElementExtention.BeginAnimationScaleY
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_BeginAnimationScaleY_System_Windows_UIElement_System_Double_System_Double_System_Double_System_Action_System_Windows_UIElement__System_Action_H_Extensions_StoryBoard_StoryboardEngineBase__
  name: BeginAnimationScaleY
  nameWithType: ElementExtention.BeginAnimationScaleY
  fullName: System.Windows.ElementExtention.BeginAnimationScaleY
- uid: System.Windows.ElementExtention.BeginAnimationScaleX*
  commentId: Overload:System.Windows.ElementExtention.BeginAnimationScaleX
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_BeginAnimationScaleX_System_Windows_UIElement_System_Double_System_Double_System_Double_System_Action_System_Windows_UIElement__System_Action_H_Extensions_StoryBoard_StoryboardEngineBase__
  name: BeginAnimationScaleX
  nameWithType: ElementExtention.BeginAnimationScaleX
  fullName: System.Windows.ElementExtention.BeginAnimationScaleX
- uid: System.Windows.ElementExtention.BeginAnimationSkewX*
  commentId: Overload:System.Windows.ElementExtention.BeginAnimationSkewX
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_BeginAnimationSkewX_System_Windows_UIElement_System_Double_System_Double_System_Double_System_Action_System_Windows_UIElement__System_Action_H_Extensions_StoryBoard_StoryboardEngineBase__
  name: BeginAnimationSkewX
  nameWithType: ElementExtention.BeginAnimationSkewX
  fullName: System.Windows.ElementExtention.BeginAnimationSkewX
- uid: System.Windows.ElementExtention.BeginAnimationSkewY*
  commentId: Overload:System.Windows.ElementExtention.BeginAnimationSkewY
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_BeginAnimationSkewY_System_Windows_UIElement_System_Double_System_Double_System_Double_System_Action_System_Windows_UIElement__System_Action_H_Extensions_StoryBoard_StoryboardEngineBase__
  name: BeginAnimationSkewY
  nameWithType: ElementExtention.BeginAnimationSkewY
  fullName: System.Windows.ElementExtention.BeginAnimationSkewY
- uid: System.Windows.ElementExtention.Wait*
  commentId: Overload:System.Windows.ElementExtention.Wait
  href: System.Windows.ElementExtention.html#System_Windows_ElementExtention_Wait_System_Windows_UIElement_System_Double_System_Action_System_Windows_UIElement__
  name: Wait
  nameWithType: ElementExtention.Wait
  fullName: System.Windows.ElementExtention.Wait
