### YamlMime:ManagedReference
items:
- uid: H.Mvvm.InvokeCommand
  commentId: T:H.Mvvm.InvokeCommand
  id: InvokeCommand
  parent: H.Mvvm
  children:
  - H.Mvvm.InvokeCommand.#ctor(System.Action{H.Mvvm.IInvokeCommand,System.Object})
  - H.Mvvm.InvokeCommand.#ctor(System.Action{H.Mvvm.IInvokeCommand,System.Object},System.Func{H.Mvvm.IInvokeCommand,System.Object,System.Boolean})
  - H.Mvvm.InvokeCommand.#ctor(System.Action{System.Object})
  - H.Mvvm.InvokeCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})
  - H.Mvvm.InvokeCommand.CanExecute(System.Object)
  - H.Mvvm.InvokeCommand.CanExecuteChanged
  - H.Mvvm.InvokeCommand.Execute(System.Object)
  - H.Mvvm.InvokeCommand.GroupName
  - H.Mvvm.InvokeCommand.IsBusy
  - H.Mvvm.InvokeCommand.IsEnabled
  - H.Mvvm.InvokeCommand.IsIndeterminate
  - H.Mvvm.InvokeCommand.IsVisible
  - H.Mvvm.InvokeCommand.Message
  - H.Mvvm.InvokeCommand.Name
  - H.Mvvm.InvokeCommand.Percent
  - H.Mvvm.InvokeCommand.PropertyChanged
  - H.Mvvm.InvokeCommand.RaisePropertyChanged(System.String)
  - H.Mvvm.InvokeCommand.Refresh
  - H.Mvvm.InvokeCommand._action
  - H.Mvvm.InvokeCommand._actionCommand
  - H.Mvvm.InvokeCommand._canExecute
  - H.Mvvm.InvokeCommand._canExecuteCommand
  - H.Mvvm.InvokeCommand.op_Implicit(System.Action{H.Mvvm.IInvokeCommand,System.Object})~H.Mvvm.InvokeCommand
  - H.Mvvm.InvokeCommand.op_Implicit(System.Action{System.Object})~H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: InvokeCommand
  nameWithType: InvokeCommand
  fullName: H.Mvvm.InvokeCommand
  type: Class
  source:
    id: InvokeCommand
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 6
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  syntax:
    content: >-
      [Obsolete]

      public class InvokeCommand : INotifyPropertyChanged, IInvokeCommand, ICommand
    content.vb: >-
      <Obsolete>

      Public Class InvokeCommand Implements INotifyPropertyChanged, IInvokeCommand, ICommand
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  - H.Mvvm.IInvokeCommand
  - System.Windows.Input.ICommand
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
- uid: H.Mvvm.InvokeCommand._action
  commentId: F:H.Mvvm.InvokeCommand._action
  id: _action
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: _action
  nameWithType: InvokeCommand._action
  fullName: H.Mvvm.InvokeCommand._action
  type: Field
  source:
    id: _action
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 9
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  syntax:
    content: protected Action<object> _action
    return:
      type: System.Action{System.Object}
    content.vb: Protected _action As Action(Of Object)
- uid: H.Mvvm.InvokeCommand._canExecute
  commentId: F:H.Mvvm.InvokeCommand._canExecute
  id: _canExecute
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: _canExecute
  nameWithType: InvokeCommand._canExecute
  fullName: H.Mvvm.InvokeCommand._canExecute
  type: Field
  source:
    id: _canExecute
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 10
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  syntax:
    content: protected readonly Predicate<object> _canExecute
    return:
      type: System.Predicate{System.Object}
    content.vb: Protected ReadOnly _canExecute As Predicate(Of Object)
- uid: H.Mvvm.InvokeCommand._actionCommand
  commentId: F:H.Mvvm.InvokeCommand._actionCommand
  id: _actionCommand
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: _actionCommand
  nameWithType: InvokeCommand._actionCommand
  fullName: H.Mvvm.InvokeCommand._actionCommand
  type: Field
  source:
    id: _actionCommand
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 11
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  syntax:
    content: protected Action<IInvokeCommand, object> _actionCommand
    return:
      type: System.Action{H.Mvvm.IInvokeCommand,System.Object}
    content.vb: Protected _actionCommand As Action(Of IInvokeCommand, Object)
- uid: H.Mvvm.InvokeCommand._canExecuteCommand
  commentId: F:H.Mvvm.InvokeCommand._canExecuteCommand
  id: _canExecuteCommand
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: _canExecuteCommand
  nameWithType: InvokeCommand._canExecuteCommand
  fullName: H.Mvvm.InvokeCommand._canExecuteCommand
  type: Field
  source:
    id: _canExecuteCommand
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 12
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  syntax:
    content: protected readonly Func<IInvokeCommand, object, bool> _canExecuteCommand
    return:
      type: System.Func{H.Mvvm.IInvokeCommand,System.Object,System.Boolean}
    content.vb: Protected ReadOnly _canExecuteCommand As Func(Of IInvokeCommand, Object, Boolean)
- uid: H.Mvvm.InvokeCommand.#ctor(System.Action{System.Object})
  commentId: M:H.Mvvm.InvokeCommand.#ctor(System.Action{System.Object})
  id: '#ctor(System.Action{System.Object})'
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: InvokeCommand(Action<object>)
  nameWithType: InvokeCommand.InvokeCommand(Action<object>)
  fullName: H.Mvvm.InvokeCommand.InvokeCommand(System.Action<object>)
  type: Constructor
  source:
    id: .ctor
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 13
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  syntax:
    content: public InvokeCommand(Action<object> action)
    parameters:
    - id: action
      type: System.Action{System.Object}
    content.vb: Public Sub New(action As Action(Of Object))
  overload: H.Mvvm.InvokeCommand.#ctor*
  nameWithType.vb: InvokeCommand.New(Action(Of Object))
  fullName.vb: H.Mvvm.InvokeCommand.New(System.Action(Of Object))
  name.vb: New(Action(Of Object))
- uid: H.Mvvm.InvokeCommand.#ctor(System.Action{H.Mvvm.IInvokeCommand,System.Object})
  commentId: M:H.Mvvm.InvokeCommand.#ctor(System.Action{H.Mvvm.IInvokeCommand,System.Object})
  id: '#ctor(System.Action{H.Mvvm.IInvokeCommand,System.Object})'
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: InvokeCommand(Action<IInvokeCommand, object>)
  nameWithType: InvokeCommand.InvokeCommand(Action<IInvokeCommand, object>)
  fullName: H.Mvvm.InvokeCommand.InvokeCommand(System.Action<H.Mvvm.IInvokeCommand, object>)
  type: Constructor
  source:
    id: .ctor
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 18
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  syntax:
    content: public InvokeCommand(Action<IInvokeCommand, object> action)
    parameters:
    - id: action
      type: System.Action{H.Mvvm.IInvokeCommand,System.Object}
    content.vb: Public Sub New(action As Action(Of IInvokeCommand, Object))
  overload: H.Mvvm.InvokeCommand.#ctor*
  nameWithType.vb: InvokeCommand.New(Action(Of IInvokeCommand, Object))
  fullName.vb: H.Mvvm.InvokeCommand.New(System.Action(Of H.Mvvm.IInvokeCommand, Object))
  name.vb: New(Action(Of IInvokeCommand, Object))
- uid: H.Mvvm.InvokeCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})
  commentId: M:H.Mvvm.InvokeCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})
  id: '#ctor(System.Action{System.Object},System.Predicate{System.Object})'
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: InvokeCommand(Action<object>, Predicate<object>)
  nameWithType: InvokeCommand.InvokeCommand(Action<object>, Predicate<object>)
  fullName: H.Mvvm.InvokeCommand.InvokeCommand(System.Action<object>, System.Predicate<object>)
  type: Constructor
  source:
    id: .ctor
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 23
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  syntax:
    content: public InvokeCommand(Action<object> execute, Predicate<object> canExecute)
    parameters:
    - id: execute
      type: System.Action{System.Object}
    - id: canExecute
      type: System.Predicate{System.Object}
    content.vb: Public Sub New(execute As Action(Of Object), canExecute As Predicate(Of Object))
  overload: H.Mvvm.InvokeCommand.#ctor*
  nameWithType.vb: InvokeCommand.New(Action(Of Object), Predicate(Of Object))
  fullName.vb: H.Mvvm.InvokeCommand.New(System.Action(Of Object), System.Predicate(Of Object))
  name.vb: New(Action(Of Object), Predicate(Of Object))
- uid: H.Mvvm.InvokeCommand.#ctor(System.Action{H.Mvvm.IInvokeCommand,System.Object},System.Func{H.Mvvm.IInvokeCommand,System.Object,System.Boolean})
  commentId: M:H.Mvvm.InvokeCommand.#ctor(System.Action{H.Mvvm.IInvokeCommand,System.Object},System.Func{H.Mvvm.IInvokeCommand,System.Object,System.Boolean})
  id: '#ctor(System.Action{H.Mvvm.IInvokeCommand,System.Object},System.Func{H.Mvvm.IInvokeCommand,System.Object,System.Boolean})'
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: InvokeCommand(Action<IInvokeCommand, object>, Func<IInvokeCommand, object, bool>)
  nameWithType: InvokeCommand.InvokeCommand(Action<IInvokeCommand, object>, Func<IInvokeCommand, object, bool>)
  fullName: H.Mvvm.InvokeCommand.InvokeCommand(System.Action<H.Mvvm.IInvokeCommand, object>, System.Func<H.Mvvm.IInvokeCommand, object, bool>)
  type: Constructor
  source:
    id: .ctor
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 28
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  syntax:
    content: public InvokeCommand(Action<IInvokeCommand, object> execute, Func<IInvokeCommand, object, bool> canExecute)
    parameters:
    - id: execute
      type: System.Action{H.Mvvm.IInvokeCommand,System.Object}
    - id: canExecute
      type: System.Func{H.Mvvm.IInvokeCommand,System.Object,System.Boolean}
    content.vb: Public Sub New(execute As Action(Of IInvokeCommand, Object), canExecute As Func(Of IInvokeCommand, Object, Boolean))
  overload: H.Mvvm.InvokeCommand.#ctor*
  nameWithType.vb: InvokeCommand.New(Action(Of IInvokeCommand, Object), Func(Of IInvokeCommand, Object, Boolean))
  fullName.vb: H.Mvvm.InvokeCommand.New(System.Action(Of H.Mvvm.IInvokeCommand, Object), System.Func(Of H.Mvvm.IInvokeCommand, Object, Boolean))
  name.vb: New(Action(Of IInvokeCommand, Object), Func(Of IInvokeCommand, Object, Boolean))
- uid: H.Mvvm.InvokeCommand.CanExecute(System.Object)
  commentId: M:H.Mvvm.InvokeCommand.CanExecute(System.Object)
  id: CanExecute(System.Object)
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: CanExecute(object)
  nameWithType: InvokeCommand.CanExecute(object)
  fullName: H.Mvvm.InvokeCommand.CanExecute(object)
  type: Method
  source:
    id: CanExecute
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 33
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  summary: Defines the method that determines whether the command can execute in its current state.
  example: []
  syntax:
    content: public bool CanExecute(object parameter)
    parameters:
    - id: parameter
      type: System.Object
      description: Data used by the command.  If the command does not require data to be passed, this object can be set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if this command can be executed; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function CanExecute(parameter As Object) As Boolean
  overload: H.Mvvm.InvokeCommand.CanExecute*
  implements:
  - System.Windows.Input.ICommand.CanExecute(System.Object)
  nameWithType.vb: InvokeCommand.CanExecute(Object)
  fullName.vb: H.Mvvm.InvokeCommand.CanExecute(Object)
  name.vb: CanExecute(Object)
- uid: H.Mvvm.InvokeCommand.CanExecuteChanged
  commentId: E:H.Mvvm.InvokeCommand.CanExecuteChanged
  id: CanExecuteChanged
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: CanExecuteChanged
  nameWithType: InvokeCommand.CanExecuteChanged
  fullName: H.Mvvm.InvokeCommand.CanExecuteChanged
  type: Event
  source:
    id: CanExecuteChanged
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 43
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  summary: Occurs when changes occur that affect whether or not the command should execute.
  example: []
  syntax:
    content: public event EventHandler CanExecuteChanged
    return:
      type: System.EventHandler
    content.vb: Public Event CanExecuteChanged As EventHandler
  implements:
  - System.Windows.Input.ICommand.CanExecuteChanged
- uid: H.Mvvm.InvokeCommand.Execute(System.Object)
  commentId: M:H.Mvvm.InvokeCommand.Execute(System.Object)
  id: Execute(System.Object)
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: Execute(object)
  nameWithType: InvokeCommand.Execute(object)
  fullName: H.Mvvm.InvokeCommand.Execute(object)
  type: Method
  source:
    id: Execute
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 56
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  summary: 执行命令
  example: []
  syntax:
    content: public virtual void Execute(object parameter)
    parameters:
    - id: parameter
      type: System.Object
    content.vb: Public Overridable Sub Execute(parameter As Object)
  overload: H.Mvvm.InvokeCommand.Execute*
  implements:
  - System.Windows.Input.ICommand.Execute(System.Object)
  nameWithType.vb: InvokeCommand.Execute(Object)
  fullName.vb: H.Mvvm.InvokeCommand.Execute(Object)
  name.vb: Execute(Object)
- uid: H.Mvvm.InvokeCommand.op_Implicit(System.Action{System.Object})~H.Mvvm.InvokeCommand
  commentId: M:H.Mvvm.InvokeCommand.op_Implicit(System.Action{System.Object})~H.Mvvm.InvokeCommand
  id: op_Implicit(System.Action{System.Object})~H.Mvvm.InvokeCommand
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: implicit operator InvokeCommand(Action<object>)
  nameWithType: InvokeCommand.implicit operator InvokeCommand(Action<object>)
  fullName: H.Mvvm.InvokeCommand.implicit operator H.Mvvm.InvokeCommand(System.Action<object>)
  type: Operator
  source:
    id: op_Implicit
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 85
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  syntax:
    content: public static implicit operator InvokeCommand(Action<object> action)
    parameters:
    - id: action
      type: System.Action{System.Object}
    return:
      type: H.Mvvm.InvokeCommand
    content.vb: Public Shared Widening Operator CType(action As Action(Of Object)) As InvokeCommand
  overload: H.Mvvm.InvokeCommand.op_Implicit*
  nameWithType.vb: InvokeCommand.CType(Action(Of Object))
  fullName.vb: H.Mvvm.InvokeCommand.CType(System.Action(Of Object))
  name.vb: CType(Action(Of Object))
- uid: H.Mvvm.InvokeCommand.op_Implicit(System.Action{H.Mvvm.IInvokeCommand,System.Object})~H.Mvvm.InvokeCommand
  commentId: M:H.Mvvm.InvokeCommand.op_Implicit(System.Action{H.Mvvm.IInvokeCommand,System.Object})~H.Mvvm.InvokeCommand
  id: op_Implicit(System.Action{H.Mvvm.IInvokeCommand,System.Object})~H.Mvvm.InvokeCommand
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: implicit operator InvokeCommand(Action<IInvokeCommand, object>)
  nameWithType: InvokeCommand.implicit operator InvokeCommand(Action<IInvokeCommand, object>)
  fullName: H.Mvvm.InvokeCommand.implicit operator H.Mvvm.InvokeCommand(System.Action<H.Mvvm.IInvokeCommand, object>)
  type: Operator
  source:
    id: op_Implicit
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 90
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  syntax:
    content: public static implicit operator InvokeCommand(Action<IInvokeCommand, object> action)
    parameters:
    - id: action
      type: System.Action{H.Mvvm.IInvokeCommand,System.Object}
    return:
      type: H.Mvvm.InvokeCommand
    content.vb: Public Shared Widening Operator CType(action As Action(Of IInvokeCommand, Object)) As InvokeCommand
  overload: H.Mvvm.InvokeCommand.op_Implicit*
  nameWithType.vb: InvokeCommand.CType(Action(Of IInvokeCommand, Object))
  fullName.vb: H.Mvvm.InvokeCommand.CType(System.Action(Of H.Mvvm.IInvokeCommand, Object))
  name.vb: CType(Action(Of IInvokeCommand, Object))
- uid: H.Mvvm.InvokeCommand.Name
  commentId: P:H.Mvvm.InvokeCommand.Name
  id: Name
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: InvokeCommand.Name
  fullName: H.Mvvm.InvokeCommand.Name
  type: Property
  source:
    id: Name
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 97
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: H.Mvvm.InvokeCommand.Name*
  implements:
  - H.Mvvm.IInvokeCommand.Name
- uid: H.Mvvm.InvokeCommand.IsEnabled
  commentId: P:H.Mvvm.InvokeCommand.IsEnabled
  id: IsEnabled
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: IsEnabled
  nameWithType: InvokeCommand.IsEnabled
  fullName: H.Mvvm.InvokeCommand.IsEnabled
  type: Property
  source:
    id: IsEnabled
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 100
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  example: []
  syntax:
    content: public bool IsEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsEnabled As Boolean
  overload: H.Mvvm.InvokeCommand.IsEnabled*
  implements:
  - H.Mvvm.IInvokeCommand.IsEnabled
- uid: H.Mvvm.InvokeCommand.IsVisible
  commentId: P:H.Mvvm.InvokeCommand.IsVisible
  id: IsVisible
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: IsVisible
  nameWithType: InvokeCommand.IsVisible
  fullName: H.Mvvm.InvokeCommand.IsVisible
  type: Property
  source:
    id: IsVisible
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 111
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  example: []
  syntax:
    content: public bool IsVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsVisible As Boolean
  overload: H.Mvvm.InvokeCommand.IsVisible*
  implements:
  - H.Mvvm.IInvokeCommand.IsVisible
- uid: H.Mvvm.InvokeCommand.IsIndeterminate
  commentId: P:H.Mvvm.InvokeCommand.IsIndeterminate
  id: IsIndeterminate
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: IsIndeterminate
  nameWithType: InvokeCommand.IsIndeterminate
  fullName: H.Mvvm.InvokeCommand.IsIndeterminate
  type: Property
  source:
    id: IsIndeterminate
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 122
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  example: []
  syntax:
    content: public bool IsIndeterminate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsIndeterminate As Boolean
  overload: H.Mvvm.InvokeCommand.IsIndeterminate*
  implements:
  - H.Mvvm.IInvokeCommand.IsIndeterminate
- uid: H.Mvvm.InvokeCommand.IsBusy
  commentId: P:H.Mvvm.InvokeCommand.IsBusy
  id: IsBusy
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: IsBusy
  nameWithType: InvokeCommand.IsBusy
  fullName: H.Mvvm.InvokeCommand.IsBusy
  type: Property
  source:
    id: IsBusy
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 133
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  example: []
  syntax:
    content: public bool IsBusy { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsBusy As Boolean
  overload: H.Mvvm.InvokeCommand.IsBusy*
  implements:
  - H.Mvvm.IInvokeCommand.IsBusy
- uid: H.Mvvm.InvokeCommand.Percent
  commentId: P:H.Mvvm.InvokeCommand.Percent
  id: Percent
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: Percent
  nameWithType: InvokeCommand.Percent
  fullName: H.Mvvm.InvokeCommand.Percent
  type: Property
  source:
    id: Percent
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 144
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  example: []
  syntax:
    content: public double Percent { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Percent As Double
  overload: H.Mvvm.InvokeCommand.Percent*
  implements:
  - H.Mvvm.IInvokeCommand.Percent
- uid: H.Mvvm.InvokeCommand.Message
  commentId: P:H.Mvvm.InvokeCommand.Message
  id: Message
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: InvokeCommand.Message
  fullName: H.Mvvm.InvokeCommand.Message
  type: Property
  source:
    id: Message
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 155
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  example: []
  syntax:
    content: public string Message { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Message As String
  overload: H.Mvvm.InvokeCommand.Message*
  implements:
  - H.Mvvm.IInvokeCommand.Message
- uid: H.Mvvm.InvokeCommand.GroupName
  commentId: P:H.Mvvm.InvokeCommand.GroupName
  id: GroupName
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: GroupName
  nameWithType: InvokeCommand.GroupName
  fullName: H.Mvvm.InvokeCommand.GroupName
  type: Property
  source:
    id: GroupName
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 166
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      [Browsable(false)]

      public string GroupName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonIgnore>

      <Browsable(False)>

      Public Property GroupName As String
  overload: H.Mvvm.InvokeCommand.GroupName*
  implements:
  - H.Mvvm.IInvokeCommand.GroupName
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
- uid: H.Mvvm.InvokeCommand.PropertyChanged
  commentId: E:H.Mvvm.InvokeCommand.PropertyChanged
  id: PropertyChanged
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: InvokeCommand.PropertyChanged
  fullName: H.Mvvm.InvokeCommand.PropertyChanged
  type: Event
  source:
    id: PropertyChanged
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 180
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  summary: Occurs when a property value changes.
  example: []
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: H.Mvvm.InvokeCommand.RaisePropertyChanged(System.String)
  commentId: M:H.Mvvm.InvokeCommand.RaisePropertyChanged(System.String)
  id: RaisePropertyChanged(System.String)
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: RaisePropertyChanged(string)
  nameWithType: InvokeCommand.RaisePropertyChanged(string)
  fullName: H.Mvvm.InvokeCommand.RaisePropertyChanged(string)
  type: Method
  source:
    id: RaisePropertyChanged
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 182
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  syntax:
    content: public void RaisePropertyChanged(string propertyName = "")
    parameters:
    - id: propertyName
      type: System.String
    content.vb: Public Sub RaisePropertyChanged(propertyName As String = "")
  overload: H.Mvvm.InvokeCommand.RaisePropertyChanged*
  nameWithType.vb: InvokeCommand.RaisePropertyChanged(String)
  fullName.vb: H.Mvvm.InvokeCommand.RaisePropertyChanged(String)
  name.vb: RaisePropertyChanged(String)
- uid: H.Mvvm.InvokeCommand.Refresh
  commentId: M:H.Mvvm.InvokeCommand.Refresh
  id: Refresh
  parent: H.Mvvm.InvokeCommand
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: InvokeCommand.Refresh()
  fullName: H.Mvvm.InvokeCommand.Refresh()
  type: Method
  source:
    id: Refresh
    path: D:\GitHub\WPF-VisionMaster\Source\WPF-Control\Source\Providers\H.Mvvm\Commands\InvokeCommand.cs
    startLine: 191
  assemblies:
  - H.Mvvm
  namespace: H.Mvvm
  summary: 刷新命令可执行状态 (会调用CanExecute方法)
  example: []
  syntax:
    content: public void Refresh()
    content.vb: Public Sub Refresh()
  overload: H.Mvvm.InvokeCommand.Refresh*
references:
- uid: H.Mvvm
  commentId: N:H.Mvvm
  href: H.html
  name: H.Mvvm
  nameWithType: H.Mvvm
  fullName: H.Mvvm
  spec.csharp:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Mvvm
    name: Mvvm
    href: H.Mvvm.html
  spec.vb:
  - uid: H
    name: H
    href: H.html
  - name: .
  - uid: H.Mvvm
    name: Mvvm
    href: H.Mvvm.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: H.Mvvm.IInvokeCommand
  commentId: T:H.Mvvm.IInvokeCommand
  parent: H.Mvvm
  href: H.Mvvm.IInvokeCommand.html
  name: IInvokeCommand
  nameWithType: IInvokeCommand
  fullName: H.Mvvm.IInvokeCommand
- uid: System.Windows.Input.ICommand
  commentId: T:System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: System.Windows.Input
  commentId: N:System.Windows.Input
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Input
  nameWithType: System.Windows.Input
  fullName: System.Windows.Input
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Input
    name: Input
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Input
    name: Input
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input
- uid: System.Action{System.Object}
  commentId: T:System.Action{System.Object}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<object>
  nameWithType: Action<object>
  fullName: System.Action<object>
  nameWithType.vb: Action(Of Object)
  fullName.vb: System.Action(Of Object)
  name.vb: Action(Of Object)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Predicate{System.Object}
  commentId: T:System.Predicate{System.Object}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<object>
  nameWithType: Predicate<object>
  fullName: System.Predicate<object>
  nameWithType.vb: Predicate(Of Object)
  fullName.vb: System.Predicate(Of Object)
  name.vb: Predicate(Of Object)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action{H.Mvvm.IInvokeCommand,System.Object}
  commentId: T:System.Action{H.Mvvm.IInvokeCommand,System.Object}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<IInvokeCommand, object>
  nameWithType: Action<IInvokeCommand, object>
  fullName: System.Action<H.Mvvm.IInvokeCommand, object>
  nameWithType.vb: Action(Of IInvokeCommand, Object)
  fullName.vb: System.Action(Of H.Mvvm.IInvokeCommand, Object)
  name.vb: Action(Of IInvokeCommand, Object)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: H.Mvvm.IInvokeCommand
    name: IInvokeCommand
    href: H.Mvvm.IInvokeCommand.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: H.Mvvm.IInvokeCommand
    name: IInvokeCommand
    href: H.Mvvm.IInvokeCommand.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.Func{H.Mvvm.IInvokeCommand,System.Object,System.Boolean}
  commentId: T:System.Func{H.Mvvm.IInvokeCommand,System.Object,System.Boolean}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<IInvokeCommand, object, bool>
  nameWithType: Func<IInvokeCommand, object, bool>
  fullName: System.Func<H.Mvvm.IInvokeCommand, object, bool>
  nameWithType.vb: Func(Of IInvokeCommand, Object, Boolean)
  fullName.vb: System.Func(Of H.Mvvm.IInvokeCommand, Object, Boolean)
  name.vb: Func(Of IInvokeCommand, Object, Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: H.Mvvm.IInvokeCommand
    name: IInvokeCommand
    href: H.Mvvm.IInvokeCommand.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: H.Mvvm.IInvokeCommand
    name: IInvokeCommand
    href: H.Mvvm.IInvokeCommand.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: H.Mvvm.InvokeCommand.#ctor*
  commentId: Overload:H.Mvvm.InvokeCommand.#ctor
  href: H.Mvvm.InvokeCommand.html#H_Mvvm_InvokeCommand__ctor_System_Action_System_Object__
  name: InvokeCommand
  nameWithType: InvokeCommand.InvokeCommand
  fullName: H.Mvvm.InvokeCommand.InvokeCommand
  nameWithType.vb: InvokeCommand.New
  fullName.vb: H.Mvvm.InvokeCommand.New
  name.vb: New
- uid: H.Mvvm.InvokeCommand.CanExecute*
  commentId: Overload:H.Mvvm.InvokeCommand.CanExecute
  href: H.Mvvm.InvokeCommand.html#H_Mvvm_InvokeCommand_CanExecute_System_Object_
  name: CanExecute
  nameWithType: InvokeCommand.CanExecute
  fullName: H.Mvvm.InvokeCommand.CanExecute
- uid: System.Windows.Input.ICommand.CanExecute(System.Object)
  commentId: M:System.Windows.Input.ICommand.CanExecute(System.Object)
  parent: System.Windows.Input.ICommand
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.canexecute
  name: CanExecute(object)
  nameWithType: ICommand.CanExecute(object)
  fullName: System.Windows.Input.ICommand.CanExecute(object)
  nameWithType.vb: ICommand.CanExecute(Object)
  fullName.vb: System.Windows.Input.ICommand.CanExecute(Object)
  name.vb: CanExecute(Object)
  spec.csharp:
  - uid: System.Windows.Input.ICommand.CanExecute(System.Object)
    name: CanExecute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.canexecute
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Windows.Input.ICommand.CanExecute(System.Object)
    name: CanExecute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.canexecute
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Windows.Input.ICommand.CanExecuteChanged
  commentId: E:System.Windows.Input.ICommand.CanExecuteChanged
  parent: System.Windows.Input.ICommand
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.canexecutechanged
  name: CanExecuteChanged
  nameWithType: ICommand.CanExecuteChanged
  fullName: System.Windows.Input.ICommand.CanExecuteChanged
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: H.Mvvm.InvokeCommand.Execute*
  commentId: Overload:H.Mvvm.InvokeCommand.Execute
  href: H.Mvvm.InvokeCommand.html#H_Mvvm_InvokeCommand_Execute_System_Object_
  name: Execute
  nameWithType: InvokeCommand.Execute
  fullName: H.Mvvm.InvokeCommand.Execute
- uid: System.Windows.Input.ICommand.Execute(System.Object)
  commentId: M:System.Windows.Input.ICommand.Execute(System.Object)
  parent: System.Windows.Input.ICommand
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.execute
  name: Execute(object)
  nameWithType: ICommand.Execute(object)
  fullName: System.Windows.Input.ICommand.Execute(object)
  nameWithType.vb: ICommand.Execute(Object)
  fullName.vb: System.Windows.Input.ICommand.Execute(Object)
  name.vb: Execute(Object)
  spec.csharp:
  - uid: System.Windows.Input.ICommand.Execute(System.Object)
    name: Execute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.execute
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Windows.Input.ICommand.Execute(System.Object)
    name: Execute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.input.icommand.execute
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: H.Mvvm.InvokeCommand.op_Implicit*
  commentId: Overload:H.Mvvm.InvokeCommand.op_Implicit
  name: implicit operator
  nameWithType: InvokeCommand.implicit operator
  fullName: H.Mvvm.InvokeCommand.implicit operator
  nameWithType.vb: InvokeCommand.CType
  fullName.vb: H.Mvvm.InvokeCommand.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: H.Mvvm.InvokeCommand
  commentId: T:H.Mvvm.InvokeCommand
  parent: H.Mvvm
  href: H.Mvvm.InvokeCommand.html
  name: InvokeCommand
  nameWithType: InvokeCommand
  fullName: H.Mvvm.InvokeCommand
- uid: H.Mvvm.InvokeCommand.Name*
  commentId: Overload:H.Mvvm.InvokeCommand.Name
  href: H.Mvvm.InvokeCommand.html#H_Mvvm_InvokeCommand_Name
  name: Name
  nameWithType: InvokeCommand.Name
  fullName: H.Mvvm.InvokeCommand.Name
- uid: H.Mvvm.IInvokeCommand.Name
  commentId: P:H.Mvvm.IInvokeCommand.Name
  parent: H.Mvvm.IInvokeCommand
  href: H.Mvvm.IInvokeCommand.html#H_Mvvm_IInvokeCommand_Name
  name: Name
  nameWithType: IInvokeCommand.Name
  fullName: H.Mvvm.IInvokeCommand.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: H.Mvvm.InvokeCommand.IsEnabled*
  commentId: Overload:H.Mvvm.InvokeCommand.IsEnabled
  href: H.Mvvm.InvokeCommand.html#H_Mvvm_InvokeCommand_IsEnabled
  name: IsEnabled
  nameWithType: InvokeCommand.IsEnabled
  fullName: H.Mvvm.InvokeCommand.IsEnabled
- uid: H.Mvvm.IInvokeCommand.IsEnabled
  commentId: P:H.Mvvm.IInvokeCommand.IsEnabled
  parent: H.Mvvm.IInvokeCommand
  href: H.Mvvm.IInvokeCommand.html#H_Mvvm_IInvokeCommand_IsEnabled
  name: IsEnabled
  nameWithType: IInvokeCommand.IsEnabled
  fullName: H.Mvvm.IInvokeCommand.IsEnabled
- uid: H.Mvvm.InvokeCommand.IsVisible*
  commentId: Overload:H.Mvvm.InvokeCommand.IsVisible
  href: H.Mvvm.InvokeCommand.html#H_Mvvm_InvokeCommand_IsVisible
  name: IsVisible
  nameWithType: InvokeCommand.IsVisible
  fullName: H.Mvvm.InvokeCommand.IsVisible
- uid: H.Mvvm.IInvokeCommand.IsVisible
  commentId: P:H.Mvvm.IInvokeCommand.IsVisible
  parent: H.Mvvm.IInvokeCommand
  href: H.Mvvm.IInvokeCommand.html#H_Mvvm_IInvokeCommand_IsVisible
  name: IsVisible
  nameWithType: IInvokeCommand.IsVisible
  fullName: H.Mvvm.IInvokeCommand.IsVisible
- uid: H.Mvvm.InvokeCommand.IsIndeterminate*
  commentId: Overload:H.Mvvm.InvokeCommand.IsIndeterminate
  href: H.Mvvm.InvokeCommand.html#H_Mvvm_InvokeCommand_IsIndeterminate
  name: IsIndeterminate
  nameWithType: InvokeCommand.IsIndeterminate
  fullName: H.Mvvm.InvokeCommand.IsIndeterminate
- uid: H.Mvvm.IInvokeCommand.IsIndeterminate
  commentId: P:H.Mvvm.IInvokeCommand.IsIndeterminate
  parent: H.Mvvm.IInvokeCommand
  href: H.Mvvm.IInvokeCommand.html#H_Mvvm_IInvokeCommand_IsIndeterminate
  name: IsIndeterminate
  nameWithType: IInvokeCommand.IsIndeterminate
  fullName: H.Mvvm.IInvokeCommand.IsIndeterminate
- uid: H.Mvvm.InvokeCommand.IsBusy*
  commentId: Overload:H.Mvvm.InvokeCommand.IsBusy
  href: H.Mvvm.InvokeCommand.html#H_Mvvm_InvokeCommand_IsBusy
  name: IsBusy
  nameWithType: InvokeCommand.IsBusy
  fullName: H.Mvvm.InvokeCommand.IsBusy
- uid: H.Mvvm.IInvokeCommand.IsBusy
  commentId: P:H.Mvvm.IInvokeCommand.IsBusy
  parent: H.Mvvm.IInvokeCommand
  href: H.Mvvm.IInvokeCommand.html#H_Mvvm_IInvokeCommand_IsBusy
  name: IsBusy
  nameWithType: IInvokeCommand.IsBusy
  fullName: H.Mvvm.IInvokeCommand.IsBusy
- uid: H.Mvvm.InvokeCommand.Percent*
  commentId: Overload:H.Mvvm.InvokeCommand.Percent
  href: H.Mvvm.InvokeCommand.html#H_Mvvm_InvokeCommand_Percent
  name: Percent
  nameWithType: InvokeCommand.Percent
  fullName: H.Mvvm.InvokeCommand.Percent
- uid: H.Mvvm.IInvokeCommand.Percent
  commentId: P:H.Mvvm.IInvokeCommand.Percent
  parent: H.Mvvm.IInvokeCommand
  href: H.Mvvm.IInvokeCommand.html#H_Mvvm_IInvokeCommand_Percent
  name: Percent
  nameWithType: IInvokeCommand.Percent
  fullName: H.Mvvm.IInvokeCommand.Percent
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: H.Mvvm.InvokeCommand.Message*
  commentId: Overload:H.Mvvm.InvokeCommand.Message
  href: H.Mvvm.InvokeCommand.html#H_Mvvm_InvokeCommand_Message
  name: Message
  nameWithType: InvokeCommand.Message
  fullName: H.Mvvm.InvokeCommand.Message
- uid: H.Mvvm.IInvokeCommand.Message
  commentId: P:H.Mvvm.IInvokeCommand.Message
  parent: H.Mvvm.IInvokeCommand
  href: H.Mvvm.IInvokeCommand.html#H_Mvvm_IInvokeCommand_Message
  name: Message
  nameWithType: IInvokeCommand.Message
  fullName: H.Mvvm.IInvokeCommand.Message
- uid: H.Mvvm.InvokeCommand.GroupName*
  commentId: Overload:H.Mvvm.InvokeCommand.GroupName
  href: H.Mvvm.InvokeCommand.html#H_Mvvm_InvokeCommand_GroupName
  name: GroupName
  nameWithType: InvokeCommand.GroupName
  fullName: H.Mvvm.InvokeCommand.GroupName
- uid: H.Mvvm.IInvokeCommand.GroupName
  commentId: P:H.Mvvm.IInvokeCommand.GroupName
  parent: H.Mvvm.IInvokeCommand
  href: H.Mvvm.IInvokeCommand.html#H_Mvvm_IInvokeCommand_GroupName
  name: GroupName
  nameWithType: IInvokeCommand.GroupName
  fullName: H.Mvvm.IInvokeCommand.GroupName
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged.propertychanged
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventhandler
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: H.Mvvm.InvokeCommand.RaisePropertyChanged*
  commentId: Overload:H.Mvvm.InvokeCommand.RaisePropertyChanged
  href: H.Mvvm.InvokeCommand.html#H_Mvvm_InvokeCommand_RaisePropertyChanged_System_String_
  name: RaisePropertyChanged
  nameWithType: InvokeCommand.RaisePropertyChanged
  fullName: H.Mvvm.InvokeCommand.RaisePropertyChanged
- uid: H.Mvvm.InvokeCommand.Refresh*
  commentId: Overload:H.Mvvm.InvokeCommand.Refresh
  href: H.Mvvm.InvokeCommand.html#H_Mvvm_InvokeCommand_Refresh
  name: Refresh
  nameWithType: InvokeCommand.Refresh
  fullName: H.Mvvm.InvokeCommand.Refresh
