{
  "api/H.Iocable.Ioc-1.html": {
    "href": "api/H.Iocable.Ioc-1.html",
    "title": "Class Ioc<Interface> | 我的文档",
    "summary": "Class Ioc<Interface> Inheritance object Ioc<Interface> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Iocable Assembly: H.Iocable.dll Syntax public abstract class Ioc<Interface> Type Parameters Name Description Interface Properties Instance Declaration public static Interface Instance { get; } Property Value Type Description Interface"
  },
  "api/H.Iocable.Ioc-2.html": {
    "href": "api/H.Iocable.Ioc-2.html",
    "title": "Class Ioc<T, Interface> | 我的文档",
    "summary": "Class Ioc<T, Interface> Inheritance object Ioc<T, Interface> IocBindable<T, Interface> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Iocable Assembly: H.Iocable.dll Syntax public abstract class Ioc<T, Interface> where T : class, Interface, new() Type Parameters Name Description T Interface Properties Instance Declaration public static T Instance { get; } Property Value Type Description T"
  },
  "api/H.Iocable.Ioc.html": {
    "href": "api/H.Iocable.Ioc.html",
    "title": "Class Ioc | 我的文档",
    "summary": "Class Ioc Inheritance object Ioc Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Iocable Assembly: H.Iocable.dll Syntax public static class Ioc Properties Services Declaration public static IServiceProvider Services { get; } Property Value Type Description IServiceProvider Methods Build(IServiceCollection) Declaration public static void Build(IServiceCollection serviceCollection) Parameters Type Name Description IServiceCollection serviceCollection ConfigureServices(Action<IServiceCollection>) Declaration public static void ConfigureServices(Action<IServiceCollection> action) Parameters Type Name Description Action<IServiceCollection> action Exist<T>() Declaration public static bool Exist<T>() Returns Type Description bool Type Parameters Name Description T FindAll(Func<ServiceDescriptor, bool>) Declaration public static IEnumerable<ServiceDescriptor> FindAll(Func<ServiceDescriptor, bool> predicate = null) Parameters Type Name Description Func<ServiceDescriptor, bool> predicate Returns Type Description IEnumerable<ServiceDescriptor> GetAssignableFromServices<T>(Func<T, bool>) Declaration public static IEnumerable<T> GetAssignableFromServices<T>(Func<T, bool> predicate = null) Parameters Type Name Description Func<T, bool> predicate Returns Type Description IEnumerable<T> Type Parameters Name Description T GetService<T>(bool) Declaration public static T GetService<T>(bool throwIfNone = true) Parameters Type Name Description bool throwIfNone Returns Type Description T Type Parameters Name Description T GetService<T>(Type, bool) Declaration public static T GetService<T>(Type type, bool throwIfNone = true) Parameters Type Name Description Type type bool throwIfNone Returns Type Description T Type Parameters Name Description T"
  },
  "api/H.Iocable.IocBindable-2.html": {
    "href": "api/H.Iocable.IocBindable-2.html",
    "title": "Class IocBindable<T, Interface> | 我的文档",
    "summary": "Class IocBindable<T, Interface> Inheritance object Ioc<T, Interface> IocBindable<T, Interface> Implements INotifyPropertyChanged Inherited Members Ioc<T, Interface>.Instance object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Iocable Assembly: H.Iocable.dll Syntax public abstract class IocBindable<T, Interface> : Ioc<T, Interface>, INotifyPropertyChanged where T : class, Interface, new() Type Parameters Name Description T Interface Methods RaisePropertyChanged(string) Declaration public virtual void RaisePropertyChanged(string propertyName = \"\") Parameters Type Name Description string propertyName Events PropertyChanged Occurs when a property value changes. Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements INotifyPropertyChanged"
  },
  "api/H.Iocable.IocExtension.html": {
    "href": "api/H.Iocable.IocExtension.html",
    "title": "Class IocExtension | 我的文档",
    "summary": "Class IocExtension Inheritance object MarkupExtension IocExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Iocable Assembly: H.Iocable.dll Syntax public class IocExtension : MarkupExtension Properties Type Declaration public Type Type { get; set; } Property Value Type Description Type Methods ProvideValue(IServiceProvider) When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension. Declaration public override object ProvideValue(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider A service provider helper that can provide services for the markup extension. Returns Type Description object The object value to set on the property where the extension is applied. Overrides MarkupExtension.ProvideValue(IServiceProvider)"
  },
  "api/H.Iocable.IocThrowIfNone-1.html": {
    "href": "api/H.Iocable.IocThrowIfNone-1.html",
    "title": "Class IocThrowIfNone<Interface> | 我的文档",
    "summary": "Class IocThrowIfNone<Interface> Inheritance object IocThrowIfNone<Interface> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Iocable Assembly: H.Iocable.dll Syntax public abstract class IocThrowIfNone<Interface> Type Parameters Name Description Interface Properties Instance Declaration public static Interface Instance { get; } Property Value Type Description Interface"
  },
  "api/H.Iocable.html": {
    "href": "api/H.Iocable.html",
    "title": "Namespace H.Iocable | 我的文档",
    "summary": "Namespace H.Iocable Classes Ioc IocBindable<T, Interface> IocExtension IocThrowIfNone<Interface> Ioc<Interface> Ioc<T, Interface>"
  },
  "api/H.Mvvm.AsyncMarkupCommandBase.html": {
    "href": "api/H.Mvvm.AsyncMarkupCommandBase.html",
    "title": "Class AsyncMarkupCommandBase | 我的文档",
    "summary": "Class AsyncMarkupCommandBase Inheritance object MarkupExtension MarkupCommandBase AsyncMarkupCommandBase DisplayMarkupCommandBase Implements ICommand INotifyPropertyChanged Inherited Members MarkupCommandBase.CanExecuteChanged MarkupCommandBase.GetTargetElement(object) MarkupCommandBase.Target MarkupCommandBase.ProvideValue(IServiceProvider) MarkupCommandBase.PropertyChanged MarkupCommandBase.RaisePropertyChanged(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public abstract class AsyncMarkupCommandBase : MarkupCommandBase, ICommand, INotifyPropertyChanged Methods CanExecute(object) Defines the method that determines whether the command can execute in its current state. Declaration public override bool CanExecute(object parameter) Parameters Type Name Description object parameter Data used by the command. If the command does not require data to be passed, this object can be set to null. Returns Type Description bool true if this command can be executed; otherwise, false. Overrides MarkupCommandBase.CanExecute(object) Execute(object) Defines the method to be called when the command is invoked. Declaration public override void Execute(object parameter) Parameters Type Name Description object parameter Data used by the command. If the command does not require data to be passed, this object can be set to null. Overrides MarkupCommandBase.Execute(object) ExecuteAsync(object) Declaration public virtual Task ExecuteAsync(object parameter) Parameters Type Name Description object parameter Returns Type Description Task Implements ICommand INotifyPropertyChanged"
  },
  "api/H.Mvvm.Attributes.IDAttribute.html": {
    "href": "api/H.Mvvm.Attributes.IDAttribute.html",
    "title": "Class IDAttribute | 我的文档",
    "summary": "Class IDAttribute Inheritance object Attribute IDAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm.Attributes Assembly: H.Mvvm.dll Syntax public class IDAttribute : Attribute Properties ID Declaration public string ID { get; set; } Property Value Type Description string"
  },
  "api/H.Mvvm.Attributes.IconAttribute.html": {
    "href": "api/H.Mvvm.Attributes.IconAttribute.html",
    "title": "Class IconAttribute | 我的文档",
    "summary": "Class IconAttribute Inheritance object Attribute IconAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm.Attributes Assembly: H.Mvvm.dll Syntax public class IconAttribute : Attribute Constructors IconAttribute(string) Declaration public IconAttribute(string icon) Parameters Type Name Description string icon Properties Icon Declaration public string Icon { get; set; } Property Value Type Description string"
  },
  "api/H.Mvvm.Attributes.html": {
    "href": "api/H.Mvvm.Attributes.html",
    "title": "Namespace H.Mvvm.Attributes | 我的文档",
    "summary": "Namespace H.Mvvm.Attributes Classes IDAttribute IconAttribute"
  },
  "api/H.Mvvm.BindingProxy.html": {
    "href": "api/H.Mvvm.BindingProxy.html",
    "title": "Class BindingProxy | 我的文档",
    "summary": "Class BindingProxy Inheritance object DispatcherObject DependencyObject Freezable BindingProxy Inherited Members Freezable.Clone() Freezable.CloneCore(Freezable) Freezable.CloneCurrentValue() Freezable.CloneCurrentValueCore(Freezable) Freezable.CreateInstance() Freezable.Freeze() Freezable.Freeze(Freezable, bool) Freezable.FreezeCore(bool) Freezable.GetAsFrozen() Freezable.GetAsFrozenCore(Freezable) Freezable.GetCurrentValueAsFrozen() Freezable.GetCurrentValueAsFrozenCore(Freezable) Freezable.OnChanged() Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject) Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty) Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs) Freezable.ReadPreamble() Freezable.WritePostscript() Freezable.WritePreamble() Freezable.CanFreeze Freezable.IsFrozen Freezable.Changed DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetLocalValueEnumerator() DependencyObject.GetValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public class BindingProxy : Freezable Fields DataProperty Declaration public static readonly DependencyProperty DataProperty Field Value Type Description DependencyProperty Properties Data Declaration public object Data { get; set; } Property Value Type Description object Methods CreateInstanceCore() When implemented in a derived class, creates a new instance of the Freezable derived class. Declaration protected override Freezable CreateInstanceCore() Returns Type Description Freezable The new instance. Overrides Freezable.CreateInstanceCore()"
  },
  "api/H.Mvvm.CommandBase.html": {
    "href": "api/H.Mvvm.CommandBase.html",
    "title": "Class CommandBase | 我的文档",
    "summary": "Class CommandBase Inheritance object CommandBase RelayCommand Implements ICommand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public abstract class CommandBase : ICommand Methods CanExecute(object) Defines the method that determines whether the command can execute in its current state. Declaration public virtual bool CanExecute(object parameter) Parameters Type Name Description object parameter Data used by the command. If the command does not require data to be passed, this object can be set to null. Returns Type Description bool true if this command can be executed; otherwise, false. Execute(object) Defines the method to be called when the command is invoked. Declaration public abstract void Execute(object parameter) Parameters Type Name Description object parameter Data used by the command. If the command does not require data to be passed, this object can be set to null. Events CanExecuteChanged Occurs when changes occur that affect whether or not the command should execute. Declaration public event EventHandler CanExecuteChanged Event Type Type Description EventHandler Implements ICommand"
  },
  "api/H.Mvvm.Commands.html": {
    "href": "api/H.Mvvm.Commands.html",
    "title": "Class Commands | 我的文档",
    "summary": "Class Commands Inheritance object Commands Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public static class Commands Properties Am 上午 Declaration public static RoutedCommand Am { get; } Property Value Type Description RoutedCommand Cancel 取消 Declaration public static RoutedCommand Cancel { get; } Property Value Type Description RoutedCommand CheckAll 全选 Declaration public static RoutedCommand CheckAll { get; } Property Value Type Description RoutedCommand Clear 清除 Declaration public static RoutedCommand Clear { get; } Property Value Type Description RoutedCommand Close 关闭 Declaration public static RoutedCommand Close { get; } Property Value Type Description RoutedCommand CloseAll 关闭所有 Declaration public static RoutedCommand CloseAll { get; } Property Value Type Description RoutedCommand CloseOther 关闭其他 Declaration public static RoutedCommand CloseOther { get; } Property Value Type Description RoutedCommand Confirm 确定 Declaration public static RoutedCommand Confirm { get; } Property Value Type Description RoutedCommand Delete 删除 Declaration public static RoutedCommand Delete { get; } Property Value Type Description RoutedCommand DeleteAll 全部删除 Declaration public static RoutedCommand DeleteAll { get; } Property Value Type Description RoutedCommand DeleteAllChecked 删除选中 Declaration public static RoutedCommand DeleteAllChecked { get; } Property Value Type Description RoutedCommand Edit 编辑 Declaration public static RoutedCommand Edit { get; } Property Value Type Description RoutedCommand Enlarge 大 Declaration public static RoutedCommand Enlarge { get; } Property Value Type Description RoutedCommand First 第一个 Declaration public static RoutedCommand First { get; } Property Value Type Description RoutedCommand HourChange 小时改变 Declaration public static RoutedCommand HourChange { get; } Property Value Type Description RoutedCommand Last 最后一个 Declaration public static RoutedCommand Last { get; } Property Value Type Description RoutedCommand MinuteChange 分钟改变 Declaration public static RoutedCommand MinuteChange { get; } Property Value Type Description RoutedCommand MouseMove 鼠标移动 Declaration public static RoutedCommand MouseMove { get; } Property Value Type Description RoutedCommand New 新建 Declaration public static RoutedCommand New { get; } Property Value Type Description RoutedCommand Next 下一个 Declaration public static RoutedCommand Next { get; } Property Value Type Description RoutedCommand No 否 Declaration public static RoutedCommand No { get; } Property Value Type Description RoutedCommand Open 打开 Declaration public static RoutedCommand Open { get; } Property Value Type Description RoutedCommand Paste 粘贴 Declaration public static RoutedCommand Paste { get; } Property Value Type Description RoutedCommand Pm 下午 Declaration public static RoutedCommand Pm { get; } Property Value Type Description RoutedCommand Prev 上一个 Declaration public static RoutedCommand Prev { get; } Property Value Type Description RoutedCommand Reduce 小 Declaration public static RoutedCommand Reduce { get; } Property Value Type Description RoutedCommand Refresh 刷新 Declaration public static RoutedCommand Refresh { get; } Property Value Type Description RoutedCommand Restore 还原 Declaration public static RoutedCommand Restore { get; } Property Value Type Description RoutedCommand RotateLeft 左转 Declaration public static RoutedCommand RotateLeft { get; } Property Value Type Description RoutedCommand RotateRight 右转 Declaration public static RoutedCommand RotateRight { get; } Property Value Type Description RoutedCommand Save 保存 Declaration public static RoutedCommand Save { get; } Property Value Type Description RoutedCommand Search 搜索 Declaration public static RoutedCommand Search { get; } Property Value Type Description RoutedCommand SecondChange 秒改变 Declaration public static RoutedCommand SecondChange { get; } Property Value Type Description RoutedCommand Selected 选中 Declaration public static RoutedCommand Selected { get; } Property Value Type Description RoutedCommand Setting 设置 Declaration public static RoutedCommand Setting { get; } Property Value Type Description RoutedCommand Sure 确认 Declaration public static RoutedCommand Sure { get; } Property Value Type Description RoutedCommand Switch 切换 Declaration public static RoutedCommand Switch { get; } Property Value Type Description RoutedCommand View 查看 Declaration public static RoutedCommand View { get; } Property Value Type Description RoutedCommand Yes 是 Declaration public static RoutedCommand Yes { get; } Property Value Type Description RoutedCommand Methods InvalidateRequerySuggested() Declaration public static void InvalidateRequerySuggested()"
  },
  "api/H.Mvvm.DisplayBindable-1.html": {
    "href": "api/H.Mvvm.DisplayBindable-1.html",
    "title": "Class DisplayBindable<T> | 我的文档",
    "summary": "Class DisplayBindable<T> Inheritance object BindableBase Bindable CommandsBindableBase DisplayBindableBase DisplayBindable<T> Implements INotifyPropertyChanged IDisplayBindable IIconable INameable IOrderable IGroupable IDable IDescriptionable Inherited Members DisplayBindableBase.IsLoaded DisplayBindableBase.Loaded(object) DisplayBindableBase.ID DisplayBindableBase.Name DisplayBindableBase.Icon DisplayBindableBase.ShortName DisplayBindableBase.GroupName DisplayBindableBase.Description DisplayBindableBase.Order DisplayBindableBase.LoadDefaultCommand DisplayBindableBase.LoadDefault() CommandsBindableBase.Commands CommandsBindableBase.CreateCommands() Bindable.RelayCommand Bindable.LoadedCommand Bindable.CallMethodCommand Bindable.RelayMethod(object) Bindable.GetTargetElement<T>() Bindable.CallMethod(object) BindableBase.Init() BindableBase.PropertyChanged BindableBase.RaisePropertyChanged(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public class DisplayBindable<T> : DisplayBindableBase, INotifyPropertyChanged, IDisplayBindable, IIconable, INameable, IOrderable, IGroupable, IDable, IDescriptionable Type Parameters Name Description T Constructors DisplayBindable(T) Declaration public DisplayBindable(T t) Parameters Type Name Description T t Properties Model Declaration [Browsable(false)] public T Model { get; set; } Property Value Type Description T Implements INotifyPropertyChanged IDisplayBindable IIconable INameable IOrderable IGroupable IDable IDescriptionable"
  },
  "api/H.Mvvm.DisplayCommand-1.html": {
    "href": "api/H.Mvvm.DisplayCommand-1.html",
    "title": "Class DisplayCommand<T> | 我的文档",
    "summary": "Class DisplayCommand<T> Inheritance object RelayCommand<T> DisplayCommand<T> Implements ICommand IDisplayCommand Inherited Members RelayCommand<T>.ExecuteCommand RelayCommand<T>.CanExecuteCommand RelayCommand<T>.Execute(object) RelayCommand<T>.CanExecute(object) RelayCommand<T>.CanExecuteChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public class DisplayCommand<T> : RelayCommand<T>, ICommand, IDisplayCommand Type Parameters Name Description T Constructors DisplayCommand(Action<T>) Declaration public DisplayCommand(Action<T> executeCommand) Parameters Type Name Description Action<T> executeCommand DisplayCommand(Action<T>, Predicate<T>) Declaration public DisplayCommand(Action<T> executeCommand, Predicate<T> canExecuteCommand) Parameters Type Name Description Action<T> executeCommand Predicate<T> canExecuteCommand Properties Description Declaration public string Description { get; set; } Property Value Type Description string GroupName Declaration public string GroupName { get; set; } Property Value Type Description string Icon Declaration public string Icon { get; set; } Property Value Type Description string Name Declaration public string Name { get; set; } Property Value Type Description string Order Declaration public int Order { get; set; } Property Value Type Description int Implements ICommand IDisplayCommand"
  },
  "api/H.Mvvm.DisplayCommand.html": {
    "href": "api/H.Mvvm.DisplayCommand.html",
    "title": "Class DisplayCommand | 我的文档",
    "summary": "Class DisplayCommand Inheritance object CommandBase RelayCommand DisplayCommand Implements ICommand IDisplayCommand INotifyPropertyChanged Inherited Members RelayCommand._action RelayCommand._canExecute RelayCommand.Execute(object) RelayCommand.CanExecute(object) CommandBase.CanExecuteChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public class DisplayCommand : RelayCommand, ICommand, IDisplayCommand, INotifyPropertyChanged Constructors DisplayCommand(Action<object>) Declaration public DisplayCommand(Action<object> action) Parameters Type Name Description Action<object> action DisplayCommand(Action<object>, Predicate<object>) Declaration public DisplayCommand(Action<object> execute, Predicate<object> canExecute) Parameters Type Name Description Action<object> execute Predicate<object> canExecute Properties Description Declaration [JsonIgnore] [Browsable(false)] public virtual string Description { get; set; } Property Value Type Description string GroupName Declaration [JsonIgnore] [Browsable(false)] public string GroupName { get; set; } Property Value Type Description string Icon Declaration [JsonIgnore] [Browsable(false)] public string Icon { get; set; } Property Value Type Description string Name Declaration public string Name { get; set; } Property Value Type Description string Order Declaration [JsonIgnore] [Browsable(false)] public virtual int Order { get; set; } Property Value Type Description int Methods RaisePropertyChanged(string) Declaration public void RaisePropertyChanged(string propertyName = \"\") Parameters Type Name Description string propertyName Events PropertyChanged Occurs when a property value changes. Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements ICommand IDisplayCommand INotifyPropertyChanged"
  },
  "api/H.Mvvm.DisplayMarkupCommandBase.html": {
    "href": "api/H.Mvvm.DisplayMarkupCommandBase.html",
    "title": "Class DisplayMarkupCommandBase | 我的文档",
    "summary": "Class DisplayMarkupCommandBase Inheritance object MarkupExtension MarkupCommandBase AsyncMarkupCommandBase DisplayMarkupCommandBase Implements ICommand INotifyPropertyChanged IIconable INameable IDescriptionable Inherited Members AsyncMarkupCommandBase.Execute(object) AsyncMarkupCommandBase.CanExecute(object) AsyncMarkupCommandBase.ExecuteAsync(object) MarkupCommandBase.CanExecuteChanged MarkupCommandBase.GetTargetElement(object) MarkupCommandBase.Target MarkupCommandBase.ProvideValue(IServiceProvider) MarkupCommandBase.PropertyChanged MarkupCommandBase.RaisePropertyChanged(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public abstract class DisplayMarkupCommandBase : AsyncMarkupCommandBase, ICommand, INotifyPropertyChanged, IIconable, INameable, IDescriptionable Constructors DisplayMarkupCommandBase() Declaration protected DisplayMarkupCommandBase() Properties Description Declaration public string Description { get; set; } Property Value Type Description string Icon Declaration public string Icon { get; set; } Property Value Type Description string Name Declaration public string Name { get; set; } Property Value Type Description string Implements ICommand INotifyPropertyChanged IIconable INameable IDescriptionable"
  },
  "api/H.Mvvm.IDescriptionable.html": {
    "href": "api/H.Mvvm.IDescriptionable.html",
    "title": "Interface IDescriptionable | 我的文档",
    "summary": "Interface IDescriptionable Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public interface IDescriptionable Properties Description Declaration string Description { get; set; } Property Value Type Description string"
  },
  "api/H.Mvvm.IDesignPresenterBase.html": {
    "href": "api/H.Mvvm.IDesignPresenterBase.html",
    "title": "Interface IDesignPresenterBase | 我的文档",
    "summary": "Interface IDesignPresenterBase Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public interface IDesignPresenterBase Properties Background Declaration Brush Background { get; set; } Property Value Type Description Brush BorderBrush Declaration Brush BorderBrush { get; set; } Property Value Type Description Brush BorderThickness Declaration Thickness BorderThickness { get; set; } Property Value Type Description Thickness Column Declaration int Column { get; set; } Property Value Type Description int ColumnSpan Declaration int ColumnSpan { get; set; } Property Value Type Description int DeleteCommand Declaration RelayCommand DeleteCommand { get; } Property Value Type Description RelayCommand Height Declaration double Height { get; set; } Property Value Type Description double HorizontalAlignment Declaration HorizontalAlignment HorizontalAlignment { get; set; } Property Value Type Description HorizontalAlignment HorizontalContentAlignment Declaration HorizontalAlignment HorizontalContentAlignment { get; set; } Property Value Type Description HorizontalAlignment IsEnabled Declaration bool IsEnabled { get; set; } Property Value Type Description bool IsMouseOver Declaration bool IsMouseOver { get; set; } Property Value Type Description bool IsSelected Declaration bool IsSelected { get; set; } Property Value Type Description bool IsVisible Declaration bool IsVisible { get; set; } Property Value Type Description bool Margin Declaration Thickness Margin { get; set; } Property Value Type Description Thickness MinHeight Declaration double MinHeight { get; set; } Property Value Type Description double MinWidth Declaration double MinWidth { get; set; } Property Value Type Description double Opacity Declaration double Opacity { get; set; } Property Value Type Description double Padding Declaration Thickness Padding { get; set; } Property Value Type Description Thickness Row Declaration int Row { get; set; } Property Value Type Description int RowSpan Declaration int RowSpan { get; set; } Property Value Type Description int VerticalAlignment Declaration VerticalAlignment VerticalAlignment { get; set; } Property Value Type Description VerticalAlignment VerticalContentAlignment Declaration VerticalAlignment VerticalContentAlignment { get; set; } Property Value Type Description VerticalAlignment Width Declaration double Width { get; set; } Property Value Type Description double"
  },
  "api/H.Mvvm.IDisplayBindable.html": {
    "href": "api/H.Mvvm.IDisplayBindable.html",
    "title": "Interface IDisplayBindable | 我的文档",
    "summary": "Interface IDisplayBindable Inherited Members IIconable.Icon INameable.Name IOrderable.Order IGroupable.GroupName IDable.ID IDescriptionable.Description Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public interface IDisplayBindable : IIconable, INameable, IOrderable, IGroupable, IDable, IDescriptionable Properties ShortName Declaration string ShortName { get; set; } Property Value Type Description string"
  },
  "api/H.Mvvm.IDisplayCommand.html": {
    "href": "api/H.Mvvm.IDisplayCommand.html",
    "title": "Interface IDisplayCommand | 我的文档",
    "summary": "Interface IDisplayCommand Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public interface IDisplayCommand Properties Description Declaration string Description { get; set; } Property Value Type Description string GroupName Declaration string GroupName { get; set; } Property Value Type Description string Icon Declaration string Icon { get; set; } Property Value Type Description string Name Declaration string Name { get; set; } Property Value Type Description string Order Declaration int Order { get; set; } Property Value Type Description int"
  },
  "api/H.Mvvm.IIconable.html": {
    "href": "api/H.Mvvm.IIconable.html",
    "title": "Interface IIconable | 我的文档",
    "summary": "Interface IIconable Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public interface IIconable Properties Icon Declaration string Icon { get; set; } Property Value Type Description string"
  },
  "api/H.Mvvm.IInvokeCommand.html": {
    "href": "api/H.Mvvm.IInvokeCommand.html",
    "title": "Interface IInvokeCommand | 我的文档",
    "summary": "Interface IInvokeCommand Inherited Members ICommand.CanExecute(object) ICommand.Execute(object) ICommand.CanExecuteChanged Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax [Obsolete] public interface IInvokeCommand : ICommand Properties GroupName Declaration string GroupName { get; set; } Property Value Type Description string IsBusy Declaration bool IsBusy { get; set; } Property Value Type Description bool IsEnabled Declaration bool IsEnabled { get; set; } Property Value Type Description bool IsIndeterminate Declaration bool IsIndeterminate { get; set; } Property Value Type Description bool IsVisible Declaration bool IsVisible { get; set; } Property Value Type Description bool Message Declaration string Message { get; set; } Property Value Type Description string Name Declaration string Name { get; set; } Property Value Type Description string Percent Declaration double Percent { get; set; } Property Value Type Description double"
  },
  "api/H.Mvvm.IModelBindable-1.html": {
    "href": "api/H.Mvvm.IModelBindable-1.html",
    "title": "Interface IModelBindable<T> | 我的文档",
    "summary": "Interface IModelBindable<T> Inherited Members IModelBindable.GetModel() Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public interface IModelBindable<T> : IModelBindable Type Parameters Name Description T Properties Model Declaration T Model { get; set; } Property Value Type Description T Value Declaration double Value { get; set; } Property Value Type Description double Visible Declaration bool Visible { get; set; } Property Value Type Description bool"
  },
  "api/H.Mvvm.IModelBindable.html": {
    "href": "api/H.Mvvm.IModelBindable.html",
    "title": "Interface IModelBindable | 我的文档",
    "summary": "Interface IModelBindable Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public interface IModelBindable Methods GetModel() Declaration object GetModel() Returns Type Description object"
  },
  "api/H.Mvvm.IOrderable.html": {
    "href": "api/H.Mvvm.IOrderable.html",
    "title": "Interface IOrderable | 我的文档",
    "summary": "Interface IOrderable Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public interface IOrderable Properties Order Declaration int Order { get; set; } Property Value Type Description int"
  },
  "api/H.Mvvm.ITreeNode.html": {
    "href": "api/H.Mvvm.ITreeNode.html",
    "title": "Interface ITreeNode | 我的文档",
    "summary": "Interface ITreeNode Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public interface ITreeNode Properties IsChecked Declaration bool? IsChecked { get; set; } Property Value Type Description bool? IsExpanded Declaration bool IsExpanded { get; set; } Property Value Type Description bool Visibility Declaration Visibility Visibility { get; set; } Property Value Type Description Visibility"
  },
  "api/H.Mvvm.InvokeCommand.html": {
    "href": "api/H.Mvvm.InvokeCommand.html",
    "title": "Class InvokeCommand | 我的文档",
    "summary": "Class InvokeCommand Inheritance object InvokeCommand Implements INotifyPropertyChanged IInvokeCommand ICommand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax [Obsolete] public class InvokeCommand : INotifyPropertyChanged, IInvokeCommand, ICommand Constructors InvokeCommand(Action<IInvokeCommand, object>) Declaration public InvokeCommand(Action<IInvokeCommand, object> action) Parameters Type Name Description Action<IInvokeCommand, object> action InvokeCommand(Action<IInvokeCommand, object>, Func<IInvokeCommand, object, bool>) Declaration public InvokeCommand(Action<IInvokeCommand, object> execute, Func<IInvokeCommand, object, bool> canExecute) Parameters Type Name Description Action<IInvokeCommand, object> execute Func<IInvokeCommand, object, bool> canExecute InvokeCommand(Action<object>) Declaration public InvokeCommand(Action<object> action) Parameters Type Name Description Action<object> action InvokeCommand(Action<object>, Predicate<object>) Declaration public InvokeCommand(Action<object> execute, Predicate<object> canExecute) Parameters Type Name Description Action<object> execute Predicate<object> canExecute Fields _action Declaration protected Action<object> _action Field Value Type Description Action<object> _actionCommand Declaration protected Action<IInvokeCommand, object> _actionCommand Field Value Type Description Action<IInvokeCommand, object> _canExecute Declaration protected readonly Predicate<object> _canExecute Field Value Type Description Predicate<object> _canExecuteCommand Declaration protected readonly Func<IInvokeCommand, object, bool> _canExecuteCommand Field Value Type Description Func<IInvokeCommand, object, bool> Properties GroupName Declaration [JsonIgnore] [Browsable(false)] public string GroupName { get; set; } Property Value Type Description string IsBusy Declaration public bool IsBusy { get; set; } Property Value Type Description bool IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description bool IsIndeterminate Declaration public bool IsIndeterminate { get; set; } Property Value Type Description bool IsVisible Declaration public bool IsVisible { get; set; } Property Value Type Description bool Message Declaration public string Message { get; set; } Property Value Type Description string Name Declaration public string Name { get; set; } Property Value Type Description string Percent Declaration public double Percent { get; set; } Property Value Type Description double Methods CanExecute(object) Defines the method that determines whether the command can execute in its current state. Declaration public bool CanExecute(object parameter) Parameters Type Name Description object parameter Data used by the command. If the command does not require data to be passed, this object can be set to null. Returns Type Description bool true if this command can be executed; otherwise, false. Execute(object) 执行命令 Declaration public virtual void Execute(object parameter) Parameters Type Name Description object parameter RaisePropertyChanged(string) Declaration public void RaisePropertyChanged(string propertyName = \"\") Parameters Type Name Description string propertyName Refresh() 刷新命令可执行状态 (会调用CanExecute方法) Declaration public void Refresh() Events CanExecuteChanged Occurs when changes occur that affect whether or not the command should execute. Declaration public event EventHandler CanExecuteChanged Event Type Type Description EventHandler PropertyChanged Occurs when a property value changes. Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler Operators implicit operator InvokeCommand(Action<IInvokeCommand, object>) Declaration public static implicit operator InvokeCommand(Action<IInvokeCommand, object> action) Parameters Type Name Description Action<IInvokeCommand, object> action Returns Type Description InvokeCommand implicit operator InvokeCommand(Action<object>) Declaration public static implicit operator InvokeCommand(Action<object> action) Parameters Type Name Description Action<object> action Returns Type Description InvokeCommand Implements INotifyPropertyChanged IInvokeCommand ICommand"
  },
  "api/H.Mvvm.MarkupCommandBase.html": {
    "href": "api/H.Mvvm.MarkupCommandBase.html",
    "title": "Class MarkupCommandBase | 我的文档",
    "summary": "Class MarkupCommandBase Inheritance object MarkupExtension MarkupCommandBase AsyncMarkupCommandBase Implements ICommand INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public abstract class MarkupCommandBase : MarkupExtension, ICommand, INotifyPropertyChanged Properties Target Declaration protected IProvideValueTarget Target { get; } Property Value Type Description IProvideValueTarget Methods CanExecute(object) Defines the method that determines whether the command can execute in its current state. Declaration public virtual bool CanExecute(object parameter) Parameters Type Name Description object parameter Data used by the command. If the command does not require data to be passed, this object can be set to null. Returns Type Description bool true if this command can be executed; otherwise, false. Execute(object) Defines the method to be called when the command is invoked. Declaration public abstract void Execute(object parameter) Parameters Type Name Description object parameter Data used by the command. If the command does not require data to be passed, this object can be set to null. GetTargetElement(object) Declaration protected UIElement GetTargetElement(object parameter) Parameters Type Name Description object parameter Returns Type Description UIElement ProvideValue(IServiceProvider) When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension. Declaration public override object ProvideValue(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider A service provider helper that can provide services for the markup extension. Returns Type Description object The object value to set on the property where the extension is applied. Overrides MarkupExtension.ProvideValue(IServiceProvider) RaisePropertyChanged(string) Declaration public virtual void RaisePropertyChanged(string propertyName = \"\") Parameters Type Name Description string propertyName Events CanExecuteChanged Occurs when changes occur that affect whether or not the command should execute. Declaration public event EventHandler CanExecuteChanged Event Type Type Description EventHandler PropertyChanged Occurs when a property value changes. Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements ICommand INotifyPropertyChanged"
  },
  "api/H.Mvvm.ModelBindable-1.html": {
    "href": "api/H.Mvvm.ModelBindable-1.html",
    "title": "Class ModelBindable<T> | 我的文档",
    "summary": "Class ModelBindable<T> Inheritance object BindableBase ModelBindable<T> SelectBindable<T> Implements INotifyPropertyChanged IModelBindable<T> IModelBindable ISearchable Inherited Members BindableBase.Init() BindableBase.PropertyChanged BindableBase.RaisePropertyChanged(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public class ModelBindable<T> : BindableBase, INotifyPropertyChanged, IModelBindable<T>, IModelBindable, ISearchable Type Parameters Name Description T Constructors ModelBindable(T) Declaration public ModelBindable(T t) Parameters Type Name Description T t Properties IsBuzy Declaration [Browsable(false)] public bool IsBuzy { get; set; } Property Value Type Description bool IsEnbled Declaration [Browsable(false)] public bool IsEnbled { get; set; } Property Value Type Description bool Message Declaration [Browsable(false)] public string Message { get; set; } Property Value Type Description string Model Declaration [Browsable(false)] public T Model { get; set; } Property Value Type Description T Value Declaration [Browsable(false)] public double Value { get; set; } Property Value Type Description double Visible Declaration [Browsable(false)] public bool Visible { get; set; } Property Value Type Description bool Methods Filter(string) Declaration public virtual bool Filter(string txt) Parameters Type Name Description string txt Returns Type Description bool GetModel() Declaration public object GetModel() Returns Type Description object LoadValue(out string) Declaration protected virtual bool LoadValue(out string message) Parameters Type Name Description string message Returns Type Description bool SaveValue(out string) Declaration protected virtual bool SaveValue(out string message) Parameters Type Name Description string message Returns Type Description bool Implements INotifyPropertyChanged IModelBindable<T> IModelBindable ISearchable"
  },
  "api/H.Mvvm.RelayCommand-1.html": {
    "href": "api/H.Mvvm.RelayCommand-1.html",
    "title": "Class RelayCommand<T> | 我的文档",
    "summary": "Class RelayCommand<T> Inheritance object RelayCommand<T> DisplayCommand<T> Implements ICommand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public class RelayCommand<T> : ICommand Type Parameters Name Description T Constructors RelayCommand(Action<T>) Declaration public RelayCommand(Action<T> executeCommand) Parameters Type Name Description Action<T> executeCommand RelayCommand(Action<T>, Predicate<T>) Declaration public RelayCommand(Action<T> executeCommand, Predicate<T> canExecuteCommand) Parameters Type Name Description Action<T> executeCommand Predicate<T> canExecuteCommand Properties CanExecuteCommand Declaration public Predicate<T> CanExecuteCommand { get; } Property Value Type Description Predicate<T> ExecuteCommand Declaration public Action<T> ExecuteCommand { get; } Property Value Type Description Action<T> Methods CanExecute(object) Defines the method that determines whether the command can execute in its current state. Declaration public bool CanExecute(object parameter) Parameters Type Name Description object parameter Data used by the command. If the command does not require data to be passed, this object can be set to null. Returns Type Description bool true if this command can be executed; otherwise, false. Execute(object) Defines the method to be called when the command is invoked. Declaration public void Execute(object parameter) Parameters Type Name Description object parameter Data used by the command. If the command does not require data to be passed, this object can be set to null. Events CanExecuteChanged Occurs when changes occur that affect whether or not the command should execute. Declaration public event EventHandler CanExecuteChanged Event Type Type Description EventHandler Implements ICommand"
  },
  "api/H.Mvvm.RelayCommand.html": {
    "href": "api/H.Mvvm.RelayCommand.html",
    "title": "Class RelayCommand | 我的文档",
    "summary": "Class RelayCommand Inheritance object CommandBase RelayCommand DisplayCommand Implements ICommand Inherited Members CommandBase.CanExecuteChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public class RelayCommand : CommandBase, ICommand Constructors RelayCommand(Action<object>) Declaration public RelayCommand(Action<object> action) Parameters Type Name Description Action<object> action RelayCommand(Action<object>, Predicate<object>) Declaration public RelayCommand(Action<object> execute, Predicate<object> canExecute) Parameters Type Name Description Action<object> execute Predicate<object> canExecute Fields _action Declaration protected Action<object> _action Field Value Type Description Action<object> _canExecute Declaration protected readonly Predicate<object> _canExecute Field Value Type Description Predicate<object> Methods CanExecute(object) Defines the method that determines whether the command can execute in its current state. Declaration public override bool CanExecute(object parameter) Parameters Type Name Description object parameter Data used by the command. If the command does not require data to be passed, this object can be set to null. Returns Type Description bool true if this command can be executed; otherwise, false. Overrides CommandBase.CanExecute(object) Execute(object) Defines the method to be called when the command is invoked. Declaration public override void Execute(object parameter) Parameters Type Name Description object parameter Data used by the command. If the command does not require data to be passed, this object can be set to null. Overrides CommandBase.Execute(object) Implements ICommand"
  },
  "api/H.Mvvm.RoutedEventArgs-1.html": {
    "href": "api/H.Mvvm.RoutedEventArgs-1.html",
    "title": "Class RoutedEventArgs<T> | 我的文档",
    "summary": "Class RoutedEventArgs<T> Inheritance object EventArgs RoutedEventArgs RoutedEventArgs<T> Inherited Members RoutedEventArgs.InvokeEventHandler(Delegate, object) RoutedEventArgs.OnSetSource(object) RoutedEventArgs.Handled RoutedEventArgs.OriginalSource RoutedEventArgs.RoutedEvent RoutedEventArgs.Source EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public class RoutedEventArgs<T> : RoutedEventArgs Type Parameters Name Description T Constructors RoutedEventArgs(RoutedEvent, object) Declaration public RoutedEventArgs(RoutedEvent routedEvent, object source) Parameters Type Name Description RoutedEvent routedEvent object source RoutedEventArgs(RoutedEvent, object, T) Declaration public RoutedEventArgs(RoutedEvent routedEvent, object source, T entity) Parameters Type Name Description RoutedEvent routedEvent object source T entity RoutedEventArgs(T) Declaration public RoutedEventArgs(T entity) Parameters Type Name Description T entity Properties Entity Declaration public T Entity { get; set; } Property Value Type Description T"
  },
  "api/H.Mvvm.SelectBindable-1.html": {
    "href": "api/H.Mvvm.SelectBindable-1.html",
    "title": "Class SelectBindable<T> | 我的文档",
    "summary": "Class SelectBindable<T> Inheritance object BindableBase ModelBindable<T> SelectBindable<T> TreeNodeBase<T> Implements INotifyPropertyChanged IModelBindable<T> IModelBindable ISearchable ISelectBindable Inherited Members ModelBindable<T>.Model ModelBindable<T>.GetModel() ModelBindable<T>.Visible ModelBindable<T>.IsEnbled ModelBindable<T>.IsBuzy ModelBindable<T>.Value ModelBindable<T>.Message ModelBindable<T>.LoadValue(out string) ModelBindable<T>.SaveValue(out string) ModelBindable<T>.Filter(string) BindableBase.Init() BindableBase.PropertyChanged BindableBase.RaisePropertyChanged(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public class SelectBindable<T> : ModelBindable<T>, INotifyPropertyChanged, IModelBindable<T>, IModelBindable, ISearchable, ISelectBindable Type Parameters Name Description T Constructors SelectBindable(T) Declaration public SelectBindable(T t) Parameters Type Name Description T t Properties IsSelected Declaration [Browsable(false)] public bool IsSelected { get; set; } Property Value Type Description bool Implements INotifyPropertyChanged IModelBindable<T> IModelBindable ISearchable ISelectBindable"
  },
  "api/H.Mvvm.TreeNodeBase-1.html": {
    "href": "api/H.Mvvm.TreeNodeBase-1.html",
    "title": "Class TreeNodeBase<T> | 我的文档",
    "summary": "Class TreeNodeBase<T> Inheritance object BindableBase ModelBindable<T> SelectBindable<T> TreeNodeBase<T> Implements INotifyPropertyChanged IModelBindable<T> IModelBindable ISelectBindable ITreeNode ISearchable Inherited Members SelectBindable<T>.IsSelected ModelBindable<T>.Model ModelBindable<T>.GetModel() ModelBindable<T>.Visible ModelBindable<T>.IsEnbled ModelBindable<T>.IsBuzy ModelBindable<T>.Value ModelBindable<T>.Message ModelBindable<T>.LoadValue(out string) ModelBindable<T>.SaveValue(out string) BindableBase.Init() BindableBase.PropertyChanged BindableBase.RaisePropertyChanged(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm Assembly: H.Mvvm.dll Syntax public class TreeNodeBase<T> : SelectBindable<T>, INotifyPropertyChanged, IModelBindable<T>, IModelBindable, ISelectBindable, ITreeNode, ISearchable Type Parameters Name Description T Constructors TreeNodeBase(T) Declaration public TreeNodeBase(T t) Parameters Type Name Description T t Properties IsCheckable Declaration public bool IsCheckable { get; set; } Property Value Type Description bool IsChecked Declaration public bool? IsChecked { get; set; } Property Value Type Description bool? IsExpanded Declaration public bool IsExpanded { get; set; } Property Value Type Description bool IsLoaded Declaration public bool IsLoaded { get; set; } Property Value Type Description bool Nodes Declaration public ObservableCollection<TreeNodeBase<T>> Nodes { get; set; } Property Value Type Description ObservableCollection<TreeNodeBase<T>> Parent Declaration public TreeNodeBase<T> Parent { get; set; } Property Value Type Description TreeNodeBase<T> TreeNodeEntity Declaration public TreeNodeBase<T> TreeNodeEntity { get; set; } Property Value Type Description TreeNodeBase<T> Visibility Declaration public Visibility Visibility { get; set; } Property Value Type Description Visibility Methods AddNode(TreeNodeBase<T>) Declaration public void AddNode(TreeNodeBase<T> node) Parameters Type Name Description TreeNodeBase<T> node Filter(string) Declaration public override bool Filter(string txt) Parameters Type Name Description string txt Returns Type Description bool Overrides ModelBindable<T>.Filter(string) FindAll(Predicate<TreeNodeBase<T>>) Declaration public IEnumerable<TreeNodeBase<T>> FindAll(Predicate<TreeNodeBase<T>> action = null) Parameters Type Name Description Predicate<TreeNodeBase<T>> action Returns Type Description IEnumerable<TreeNodeBase<T>> FindAllParent(Predicate<TreeNodeBase<T>>) Declaration public IEnumerable<TreeNodeBase<T>> FindAllParent(Predicate<TreeNodeBase<T>> action = null) Parameters Type Name Description Predicate<TreeNodeBase<T>> action Returns Type Description IEnumerable<TreeNodeBase<T>> Foreach(Action<TreeNodeBase<T>>) Declaration public void Foreach(Action<TreeNodeBase<T>> action) Parameters Type Name Description Action<TreeNodeBase<T>> action Implements INotifyPropertyChanged IModelBindable<T> IModelBindable ISelectBindable ITreeNode ISearchable"
  },
  "api/H.Mvvm.ViewModels.Base.Bindable.html": {
    "href": "api/H.Mvvm.ViewModels.Base.Bindable.html",
    "title": "Class Bindable | 我的文档",
    "summary": "Class Bindable 可绑定的基类。 Inheritance object BindableBase Bindable CommandsBindableBase Implements INotifyPropertyChanged Inherited Members BindableBase.Init() BindableBase.PropertyChanged BindableBase.RaisePropertyChanged(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm.ViewModels.Base Assembly: H.Mvvm.dll Syntax public abstract class Bindable : BindableBase, INotifyPropertyChanged Constructors Bindable() 构造函数。 Declaration public Bindable() Properties CallMethodCommand Declaration [Browsable(false)] [JsonIgnore] public RelayCommand CallMethodCommand { get; set; } Property Value Type Description RelayCommand LoadedCommand Declaration [Browsable(false)] [JsonIgnore] public RelayCommand LoadedCommand { get; } Property Value Type Description RelayCommand RelayCommand Declaration [Browsable(false)] [JsonIgnore] public RelayCommand RelayCommand { get; set; } Property Value Type Description RelayCommand Methods CallMethod(object) 调用方法。 Declaration protected virtual void CallMethod(object obj) Parameters Type Name Description object obj 方法名。 GetTargetElement<T>() Declaration protected T GetTargetElement<T>() where T : UIElement Returns Type Description T Type Parameters Name Description T Loaded(object) 加载事件处理方法。 Declaration protected virtual void Loaded(object obj) Parameters Type Name Description object obj 事件参数。 RelayMethod(object) 用于继承类中的方法绑定。 Declaration protected virtual void RelayMethod(object obj) Parameters Type Name Description object obj 方法参数。 Implements INotifyPropertyChanged"
  },
  "api/H.Mvvm.ViewModels.Base.BindableBase.html": {
    "href": "api/H.Mvvm.ViewModels.Base.BindableBase.html",
    "title": "Class BindableBase | 我的文档",
    "summary": "Class BindableBase BindableBase Inheritance object BindableBase ModelBindable<T> Bindable Implements INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm.ViewModels.Base Assembly: H.Mvvm.dll Syntax public abstract class BindableBase : INotifyPropertyChanged Constructors BindableBase() Declaration public BindableBase() Methods Init() Declaration protected virtual void Init() RaisePropertyChanged(string) Declaration public virtual void RaisePropertyChanged(string propertyName = \"\") Parameters Type Name Description string propertyName Events PropertyChanged Occurs when a property value changes. Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements INotifyPropertyChanged"
  },
  "api/H.Mvvm.ViewModels.Base.CommandsBindableBase.html": {
    "href": "api/H.Mvvm.ViewModels.Base.CommandsBindableBase.html",
    "title": "Class CommandsBindableBase | 我的文档",
    "summary": "Class CommandsBindableBase 提供了创建命令的基类，用于绑定到视图模型。 Inheritance object BindableBase Bindable CommandsBindableBase DisplayBindableBase Implements INotifyPropertyChanged Inherited Members Bindable.RelayCommand Bindable.LoadedCommand Bindable.CallMethodCommand Bindable.RelayMethod(object) Bindable.GetTargetElement<T>() Bindable.Loaded(object) Bindable.CallMethod(object) BindableBase.Init() BindableBase.PropertyChanged BindableBase.RaisePropertyChanged(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm.ViewModels.Base Assembly: H.Mvvm.dll Syntax public abstract class CommandsBindableBase : Bindable, INotifyPropertyChanged Constructors CommandsBindableBase() 初始化 CommandsBindableBase 类的新实例。 Declaration public CommandsBindableBase() Properties Commands 获取命令的集合。 Declaration [Browsable(false)] [JsonIgnore] public ObservableCollection<ICommand> Commands { get; } Property Value Type Description ObservableCollection<ICommand> Methods CreateCommands() 创建命令的方法，派生类可以重写此方法以创建自定义命令。 Declaration protected virtual IEnumerable<IDisplayCommand> CreateCommands() Returns Type Description IEnumerable<IDisplayCommand> 命令的集合。 Implements INotifyPropertyChanged"
  },
  "api/H.Mvvm.ViewModels.Base.DesignPresenterBase.html": {
    "href": "api/H.Mvvm.ViewModels.Base.DesignPresenterBase.html",
    "title": "Class DesignPresenterBase | 我的文档",
    "summary": "Class DesignPresenterBase Inheritance object BindableBase Bindable CommandsBindableBase DisplayBindableBase DesignPresenterBase Implements INotifyPropertyChanged IDisplayBindable IIconable INameable IOrderable IGroupable IDable IDescriptionable IDesignPresenterBase Inherited Members DisplayBindableBase.IsLoaded DisplayBindableBase.Loaded(object) DisplayBindableBase.ID DisplayBindableBase.Name DisplayBindableBase.Icon DisplayBindableBase.ShortName DisplayBindableBase.GroupName DisplayBindableBase.Description DisplayBindableBase.Order DisplayBindableBase.LoadDefaultCommand DisplayBindableBase.LoadDefault() CommandsBindableBase.Commands CommandsBindableBase.CreateCommands() Bindable.RelayCommand Bindable.LoadedCommand Bindable.CallMethodCommand Bindable.RelayMethod(object) Bindable.GetTargetElement<T>() Bindable.CallMethod(object) BindableBase.Init() BindableBase.PropertyChanged BindableBase.RaisePropertyChanged(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm.ViewModels.Base Assembly: H.Mvvm.dll Syntax public abstract class DesignPresenterBase : DisplayBindableBase, INotifyPropertyChanged, IDisplayBindable, IIconable, INameable, IOrderable, IGroupable, IDable, IDescriptionable, IDesignPresenterBase Properties Background Declaration [Display(Name = \"背景颜色\", GroupName = \"样式\")] public Brush Background { get; set; } Property Value Type Description Brush BorderBrush Declaration [Display(Name = \"边框颜色\", GroupName = \"样式\")] public Brush BorderBrush { get; set; } Property Value Type Description Brush BorderThickness Declaration [Display(Name = \"边框粗细\", GroupName = \"样式\")] public Thickness BorderThickness { get; set; } Property Value Type Description Thickness Column Declaration [Display(Name = \"列\", GroupName = \"布局\")] public int Column { get; set; } Property Value Type Description int ColumnSpan Declaration [Display(Name = \"列跨距\", GroupName = \"布局\")] public int ColumnSpan { get; set; } Property Value Type Description int DeleteCommand Declaration [Display(Name = \"删除\")] public RelayCommand DeleteCommand { get; } Property Value Type Description RelayCommand Height Declaration [Display(Name = \"高\", GroupName = \"常用,布局\")] [TypeConverter(typeof(LengthConverter))] public double Height { get; set; } Property Value Type Description double HorizontalAlignment Declaration [Display(Name = \"水平对齐\", GroupName = \"布局\")] public HorizontalAlignment HorizontalAlignment { get; set; } Property Value Type Description HorizontalAlignment HorizontalContentAlignment Declaration [Display(Name = \"水平内容对齐\", GroupName = \"布局\")] public HorizontalAlignment HorizontalContentAlignment { get; set; } Property Value Type Description HorizontalAlignment IsEnabled Declaration [Display(Name = \"可用\", GroupName = \"样式\")] public bool IsEnabled { get; set; } Property Value Type Description bool IsMouseOver Declaration [Browsable(false)] [JsonIgnore] public bool IsMouseOver { get; set; } Property Value Type Description bool IsSelected Declaration [Browsable(false)] [JsonIgnore] public bool IsSelected { get; set; } Property Value Type Description bool IsVisible Declaration [Display(Name = \"可见\", GroupName = \"样式\")] public bool IsVisible { get; set; } Property Value Type Description bool Margin Declaration [Display(Name = \"外部间距\", GroupName = \"布局\")] public Thickness Margin { get; set; } Property Value Type Description Thickness MinHeight Declaration [Display(Name = \"最小高度\", GroupName = \"布局\")] [TypeConverter(typeof(LengthConverter))] public double MinHeight { get; set; } Property Value Type Description double MinWidth Declaration [Display(Name = \"最小宽度\", GroupName = \"布局\")] [TypeConverter(typeof(LengthConverter))] public double MinWidth { get; set; } Property Value Type Description double Opacity Declaration [Display(Name = \"透明度\", GroupName = \"样式\")] public double Opacity { get; set; } Property Value Type Description double Padding Declaration [Display(Name = \"内部间距\", GroupName = \"布局\")] public Thickness Padding { get; set; } Property Value Type Description Thickness Row Declaration [Display(Name = \"行\", GroupName = \"布局\")] public int Row { get; set; } Property Value Type Description int RowSpan Declaration [Display(Name = \"行跨距\", GroupName = \"布局\")] public int RowSpan { get; set; } Property Value Type Description int VerticalAlignment Declaration [Display(Name = \"垂直对齐\", GroupName = \"布局\")] public VerticalAlignment VerticalAlignment { get; set; } Property Value Type Description VerticalAlignment VerticalContentAlignment Declaration [Display(Name = \"垂直内部对齐\", GroupName = \"布局\")] public VerticalAlignment VerticalContentAlignment { get; set; } Property Value Type Description VerticalAlignment Width Declaration [Display(Name = \"宽\", GroupName = \"常用,布局\")] [TypeConverter(typeof(LengthConverter))] public double Width { get; set; } Property Value Type Description double Methods Delete(object) Declaration protected virtual void Delete(object e) Parameters Type Name Description object e Implements INotifyPropertyChanged IDisplayBindable IIconable INameable IOrderable IGroupable IDable IDescriptionable IDesignPresenterBase"
  },
  "api/H.Mvvm.ViewModels.Base.DisplayBindableBase.html": {
    "href": "api/H.Mvvm.ViewModels.Base.DisplayBindableBase.html",
    "title": "Class DisplayBindableBase | 我的文档",
    "summary": "Class DisplayBindableBase 提供显示相关功能的可绑定基类。 Inheritance object BindableBase Bindable CommandsBindableBase DisplayBindableBase DisplayBindable<T> DesignPresenterBase GroupDisplayBindableBase<T> Implements INotifyPropertyChanged IDisplayBindable IIconable INameable IOrderable IGroupable IDable IDescriptionable Inherited Members CommandsBindableBase.Commands CommandsBindableBase.CreateCommands() Bindable.RelayCommand Bindable.LoadedCommand Bindable.CallMethodCommand Bindable.RelayMethod(object) Bindable.GetTargetElement<T>() Bindable.CallMethod(object) BindableBase.Init() BindableBase.PropertyChanged BindableBase.RaisePropertyChanged(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm.ViewModels.Base Assembly: H.Mvvm.dll Syntax public abstract class DisplayBindableBase : CommandsBindableBase, INotifyPropertyChanged, IDisplayBindable, IIconable, INameable, IOrderable, IGroupable, IDable, IDescriptionable Constructors DisplayBindableBase() 初始化 DisplayBindableBase 类的新实例。 Declaration public DisplayBindableBase() Properties Description 获取或设置对象的描述。 Declaration [JsonIgnore] [Browsable(false)] public virtual string Description { get; set; } Property Value Type Description string GroupName 获取或设置对象的分组名称。 Declaration [JsonIgnore] [Browsable(false)] public virtual string GroupName { get; set; } Property Value Type Description string ID 获取或设置对象的唯一标识符。 Declaration [Browsable(false)] public virtual string ID { get; set; } Property Value Type Description string Icon 获取或设置对象的图标。 Declaration [Browsable(false)] [Display(Name = \"图标\", GroupName = \"常用\")] public virtual string Icon { get; set; } Property Value Type Description string IsLoaded 获取或设置一个值，指示对象是否已加载。 Declaration [Browsable(false)] [JsonIgnore] public bool IsLoaded { get; set; } Property Value Type Description bool LoadDefaultCommand 获取加载默认值的命令。 Declaration [JsonIgnore] [Display(Name = \"恢复默认\")] [Browsable(false)] public virtual RelayCommand LoadDefaultCommand { get; } Property Value Type Description RelayCommand Name 获取或设置对象的名称。 Declaration [Browsable(false)] public virtual string Name { get; set; } Property Value Type Description string Order 获取或设置对象的顺序。 Declaration [JsonIgnore] [Browsable(false)] public virtual int Order { get; set; } Property Value Type Description int ShortName 获取或设置对象的简称。 Declaration [JsonIgnore] [Browsable(false)] public virtual string ShortName { get; set; } Property Value Type Description string Methods LoadDefault() 加载默认值。 Declaration public virtual void LoadDefault() Loaded(object) 当对象加载完成时调用。 Declaration protected override void Loaded(object obj) Parameters Type Name Description object obj 加载完成的对象。 Overrides Bindable.Loaded(object) Implements INotifyPropertyChanged IDisplayBindable IIconable INameable IOrderable IGroupable IDable IDescriptionable"
  },
  "api/H.Mvvm.ViewModels.Base.GroupDisplayBindableBase-1.html": {
    "href": "api/H.Mvvm.ViewModels.Base.GroupDisplayBindableBase-1.html",
    "title": "Class GroupDisplayBindableBase<T> | 我的文档",
    "summary": "Class GroupDisplayBindableBase<T> Inheritance object BindableBase Bindable CommandsBindableBase DisplayBindableBase GroupDisplayBindableBase<T> Implements INotifyPropertyChanged IDisplayBindable IIconable INameable IOrderable IGroupable IDable IDescriptionable Inherited Members DisplayBindableBase.IsLoaded DisplayBindableBase.Loaded(object) DisplayBindableBase.ID DisplayBindableBase.Name DisplayBindableBase.Icon DisplayBindableBase.ShortName DisplayBindableBase.GroupName DisplayBindableBase.Description DisplayBindableBase.Order DisplayBindableBase.LoadDefaultCommand DisplayBindableBase.LoadDefault() CommandsBindableBase.Commands CommandsBindableBase.CreateCommands() Bindable.RelayCommand Bindable.LoadedCommand Bindable.CallMethodCommand Bindable.RelayMethod(object) Bindable.GetTargetElement<T>() Bindable.CallMethod(object) BindableBase.Init() BindableBase.PropertyChanged BindableBase.RaisePropertyChanged(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm.ViewModels.Base Assembly: H.Mvvm.dll Syntax public abstract class GroupDisplayBindableBase<T> : DisplayBindableBase, INotifyPropertyChanged, IDisplayBindable, IIconable, INameable, IOrderable, IGroupable, IDable, IDescriptionable Type Parameters Name Description T Constructors GroupDisplayBindableBase() Declaration public GroupDisplayBindableBase() Properties NodeDatas Declaration public ObservableCollection<T> NodeDatas { get; set; } Property Value Type Description ObservableCollection<T> Methods CreateNodeDatas() Declaration protected abstract IEnumerable<T> CreateNodeDatas() Returns Type Description IEnumerable<T> Implements INotifyPropertyChanged IDisplayBindable IIconable INameable IOrderable IGroupable IDable IDescriptionable"
  },
  "api/H.Mvvm.ViewModels.Base.IDable.html": {
    "href": "api/H.Mvvm.ViewModels.Base.IDable.html",
    "title": "Interface IDable | 我的文档",
    "summary": "Interface IDable Namespace: H.Mvvm.ViewModels.Base Assembly: H.Mvvm.dll Syntax public interface IDable Properties ID Declaration string ID { get; set; } Property Value Type Description string"
  },
  "api/H.Mvvm.ViewModels.Base.IGroupable.html": {
    "href": "api/H.Mvvm.ViewModels.Base.IGroupable.html",
    "title": "Interface IGroupable | 我的文档",
    "summary": "Interface IGroupable Namespace: H.Mvvm.ViewModels.Base Assembly: H.Mvvm.dll Syntax public interface IGroupable Properties GroupName Declaration string GroupName { get; set; } Property Value Type Description string"
  },
  "api/H.Mvvm.ViewModels.Base.IMessageable.html": {
    "href": "api/H.Mvvm.ViewModels.Base.IMessageable.html",
    "title": "Interface IMessageable | 我的文档",
    "summary": "Interface IMessageable Namespace: H.Mvvm.ViewModels.Base Assembly: H.Mvvm.dll Syntax public interface IMessageable Properties Message Declaration string Message { get; set; } Property Value Type Description string"
  },
  "api/H.Mvvm.ViewModels.Base.INameable.html": {
    "href": "api/H.Mvvm.ViewModels.Base.INameable.html",
    "title": "Interface INameable | 我的文档",
    "summary": "Interface INameable Namespace: H.Mvvm.ViewModels.Base Assembly: H.Mvvm.dll Syntax public interface INameable Properties Name Declaration string Name { get; set; } Property Value Type Description string"
  },
  "api/H.Mvvm.ViewModels.Base.ISearchable.html": {
    "href": "api/H.Mvvm.ViewModels.Base.ISearchable.html",
    "title": "Interface ISearchable | 我的文档",
    "summary": "Interface ISearchable Namespace: H.Mvvm.ViewModels.Base Assembly: H.Mvvm.dll Syntax public interface ISearchable Methods Filter(string) Declaration bool Filter(string txt) Parameters Type Name Description string txt Returns Type Description bool"
  },
  "api/H.Mvvm.ViewModels.Base.ISelectBindable.html": {
    "href": "api/H.Mvvm.ViewModels.Base.ISelectBindable.html",
    "title": "Interface ISelectBindable | 我的文档",
    "summary": "Interface ISelectBindable Namespace: H.Mvvm.ViewModels.Base Assembly: H.Mvvm.dll Syntax public interface ISelectBindable Properties IsSelected Declaration bool IsSelected { get; set; } Property Value Type Description bool"
  },
  "api/H.Mvvm.ViewModels.Base.IStopwatchable.html": {
    "href": "api/H.Mvvm.ViewModels.Base.IStopwatchable.html",
    "title": "Interface IStopwatchable | 我的文档",
    "summary": "Interface IStopwatchable Namespace: H.Mvvm.ViewModels.Base Assembly: H.Mvvm.dll Syntax public interface IStopwatchable Properties TimeSpan Declaration TimeSpan TimeSpan { get; set; } Property Value Type Description TimeSpan"
  },
  "api/H.Mvvm.ViewModels.Base.Stopwatchable.html": {
    "href": "api/H.Mvvm.ViewModels.Base.Stopwatchable.html",
    "title": "Class Stopwatchable | 我的文档",
    "summary": "Class Stopwatchable Inheritance object Stopwatchable Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: H.Mvvm.ViewModels.Base Assembly: H.Mvvm.dll Syntax public class Stopwatchable : IDisposable Constructors Stopwatchable(IStopwatchable) Declaration public Stopwatchable(IStopwatchable timespan) Parameters Type Name Description IStopwatchable timespan Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable"
  },
  "api/H.Mvvm.ViewModels.Base.html": {
    "href": "api/H.Mvvm.ViewModels.Base.html",
    "title": "Namespace H.Mvvm.ViewModels.Base | 我的文档",
    "summary": "Namespace H.Mvvm.ViewModels.Base Classes Bindable 可绑定的基类。 BindableBase BindableBase CommandsBindableBase 提供了创建命令的基类，用于绑定到视图模型。 DesignPresenterBase DisplayBindableBase 提供显示相关功能的可绑定基类。 GroupDisplayBindableBase<T> Stopwatchable Interfaces IDable IGroupable IMessageable INameable ISearchable ISelectBindable IStopwatchable"
  },
  "api/H.Mvvm.html": {
    "href": "api/H.Mvvm.html",
    "title": "Namespace H.Mvvm | 我的文档",
    "summary": "Namespace H.Mvvm Classes AsyncMarkupCommandBase BindingProxy CommandBase Commands DisplayBindable<T> DisplayCommand DisplayCommand<T> DisplayMarkupCommandBase InvokeCommand MarkupCommandBase ModelBindable<T> RelayCommand RelayCommand<T> RoutedEventArgs<T> SelectBindable<T> TreeNodeBase<T> Interfaces IDescriptionable IDesignPresenterBase IDisplayBindable IDisplayCommand IIconable IInvokeCommand IModelBindable IModelBindable<T> IOrderable ITreeNode"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | 我的文档",
    "summary": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}